<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta property="og:title" content="How to teach your teenager to save money" />
<meta property="og:type" content="" />
<meta property="og:url" content="how-to-teach-your-teenager-to-save-money" />
<meta property="og:image" content="https://images.groovetech.io/5GgGibu-B8ladgvPZvhWpUWt8FX5mQaIGaKdT5wDFOE/rs:fit:0:0:0/g:no:0:0/c:0:0/aHR0cHM6Ly9pbWFnZXMuZ3Jvb3ZldGVjaC5pby9wSXVGR04ySEdnZ28xX0NpWWcydUVtSG0xQ01qOGJ3eGY5Q2d4dnVJU2c0L3JzOmZvcmNlOjEwMDA6NjUxOjEvZzpub3dlOjA6MC9jOjA6MC9hSFIwY0hNNkx5OWhjM05sZEhNdVozSnZiM1psWVhCd2N5NWpiMjB2YVcxaFoyVnpMelZsWVdNeE1HTmtZakExWXprME1HTmlNek5oWm1JNFlTOHhOalU0TWpRME1UUTVYMFpsWVhSMWNtVkpiV0ZuWlMxSWIzZDBiM1JsWVdOb2VXOTFjblJsWlc1aFoyVnlkRzl6WVhabGJXOXVaWGt0TWpBeU1pMHdOeTB4T1M1d2JtYy53ZWJw.webp" />
<meta property="og:description" content="You want your teenager to be successful in life. One of the most important things you can teach them is how to save money. In this article, learn how to do it." />
<meta name="title" content="How to teach your teenager to save money | Living by Design" />
<meta name="keywords" content="How to teach your teenager to save money, save money, saving money, spend money, money management, money, teenager, teen, teen debit card, teen checking account, teen savings account, teen credit card," />
<meta name="description" content="You want your teenager to be successful in life. One of the most important things you can teach them is how to save money. In this article, learn how to do it." />


<script src="https://kit.fontawesome.com/e7647a48d4.js" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.1.0/mustache.min.js"></script>
<link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Merriweather:wght@400;700&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
<link rel="icon" type="image/png" sizes="16x16" href="{favi_con}" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
<base href="/articles" id=blog-base>
<title>How to teach your teenager to save money</title>
</head>
<body>
<script type="application/ld+json">{"@context":"https://schema.org",
"@graph":[{"@type":"WebSite",
"@id":"https://www.ivanremus.com/#website",
"url":"https://www.ivanremus.com/",
"name":"Ivan Remus | Living By Design", 
"description":"Start an Online Business | Business Software Reviews | Lifestyle Design Through Internet Marketing.",
"potentialAction":[{"@type":"SearchAction",
"target":{"@type":"EntryPoint",
"urlTemplate":"https://www.ivanremus.com/?s={search_term_string}"},
"query-input":"required name=search_term_string"}],
"inLanguage":"en-US"},
{"@type":"WebPage",
"@id":"https://www.ivanremus.com/articles#webpage",
"url":"https://www.ivanremus.com/articles",
"name":"Ivan Remus | Livign By Design | Articles",
"isPartOf":{"@id":"https://www.ivanremus.com/#website"},
"datePublished":"2022-02-20T07:32:27+00:00",
"dateModified":"2022-02-20T16:20:14+00:00",
"description":"Ivan Remus's Articles. Learn how to live the life you want, and how to launch, grow, and monetize your online business faster, by following the simple steps in these articles. Learn more.",
"breadcrumb":{"@id":"https://www.ivanremus.com/articles#breadcrumb"},
"inLanguage":"en-US",
"potentialAction":[{"@type":"ReadAction",
"target":["https://www.ivanremus.com/articles"]}]},
{"@type":"BreadcrumbList",
"@id":"https://www.ivanremus.com/articles#breadcrumb",
"itemListElement":[{"@type":"ListItem",
"position":1,
"name":"Home",
"item":"https://www.ivanremus.com/"},
{"@type":"ListItem",
"position":2,
"name":"Ivan Remus' Articles"}]}]}
</script>
<div id="blogPostListWrapper">
<header id="header" class="header relative">

</header>
<div class="ads-wrapper md:pt-10 md:pb-0 pt-5 pb-5 hidden" id="header-ads">
<div class="container flex justify-center">

</div>
</div>
<main id="main-content" class="main-content md:pt-10 md:pb-20 pb-10">
<div id="container" class="container-small">



<div id="middle-wrapper" class="md:flex">
<div class="flex-1">
<div id="middle" class="hidden">
<div class="flex-1">
<div class="flex uppercase text-xs text-blue-1 mb-3">
<a href="topic/personal-finances" class="mr-6" slug="topic/personal-finances">PERSONAL FINANCES</a>
</div>
<div class="ql-editor">
<h1>How to teach your teenager to save money</h1>
<div class="text-sm text-grey-2 mt-3 mb-10">Apr 07, 2022</div>
<div><p>As a parent, you want your teenager to be successful in life. One of the most important things you can teach them is how to save money.</p><p><br></p><p>If you don't teach them how to do it themselves, they will likely learn the hard way – by making mistakes with their finances that can be costly and difficult to recover from.</p><p>Teaching your teenager to have a savings plan may seem like a difficult task, but it can be done with a little bit of guidance.</p><p><br></p><p>This article will give you tips for helping your teenager develop a savings plan and learn how to spend their funds wisely. Follow these steps, and you will see a positive change in your teenager's financial future!</p><p><br></p><h2><strong>What are teens buying these days?</strong></h2><p>Gen Z teenagers spend about $151 per month, but it likely differs greatly by age and socioeconomic status.</p><p><br></p><p>Approximately 2/3 of men in Gen Z consider games and related gadgets such as a gaming console as core components of their identities. Fast food, beauty products, and clothing can also be purchased by young people.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1649377368_GamingConsole.webp"></p><p><br></p><h2><strong>What do teenagers do with their funds?</strong></h2><p>Many teenagers save their allowances, while others expend it all as soon as they get it. Teenagers who spend their funds usually are influenced by many following factors. Here are just some of them.</p><p><br></p><p><strong>Teens Spending Online in Just One-Click</strong></p><p>Thanks to <a href="https://amzn.to/3j5ZmQs" target="_blank"><u>Amazon</u></a> or iTunes, teen shoppers know nothing of the world without a simple buy, but the downside is that paying with the click of a mouse or just touching their cell phone screen doesn't allow them to realize how much they are spending.</p><p><br></p><p><strong>Fast food and fancy coffee</strong></p><p>Food is often the main expense for teenage boys and second for females. They're not afraid to consume $10 to order spicy chicken sandwiches at Chick-fil-A or $2 for chips from the vending machines.</p><p><br></p><p><strong>Expensive dates</strong></p><p>Why did they hang out with each other all day? Afterward, there will be a $30 Cinema trip followed by a $35 dinner for two and $15 gourmet yogurt. It costs gas money for travel. Multiply this by a month, and your kid will probably go broke for some people they're likely not meeting in a couple of years.</p><p><br></p><p><strong>Smartphones and Apps</strong></p><p>In recent years, the cost of smartphones has been an important feature of the market. They have cool apps. News flash: Last year's models sat the same way they were the last year—for far less.</p><p><br></p><p><strong>Trendy clothes, shoes, and cosmetics</strong></p><p>While some young people are proud of what looks good, remind yourself that super cool outfits can go out of style if they fail.</p><p><br></p><p><strong>Concert tickets</strong></p><p>The teenager's favorite thing to do is attend live event concerts. But concerts aren't always an affordable event, with prices ranging anywhere from $40-$100 per ticket.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1649377353_Concerttickets.webp"></p><p><br></p><h2><strong>Things to save up for as a teen</strong></h2><p><a href="https://www.dol.gov/general/topic/youthlabor/agerequirements" target="_blank"><u>The Fair Labor Standards Act (FLSA)</u></a> sets 14 years old as the minimum age for employment and limits the number of hours a teen under the age of 16 can work. Consequently, most teenagers are without formal sources of income, limiting the opportunities for teens to generate income.</p><p><br></p><p>Parents usually pay for everything their kids might need, but a 14-year-old teen should start saving for expensive things they might purchase by themselves. The teenager could find a part-time job or get a summer job that will allow them to cover their future purchases while learning how to establish realistic savings goals.</p><p><br></p><p>Once in high school, it's possible to think about purchasing their first car and even start saving for their future college expenses. But remember, buying a car implies way more than just paying the asking price. It's not only purchasing the car; it's maintaining the car. Make sure your teen sets aside enough cash for related expenses such as gas, tires, breaks, car insurance, and general maintenance.</p><p><br></p><h2><strong>Teens shouldn't just leave the now for the future.</strong></h2><p>High school students may be required to pay a college application fee to attend a dream school. They also may need refurbished laptops for their college work or a cheap used car when the time comes to commute to college.</p><p><br></p><p>These sorts of things help most teens reach their needed goals and shouldn't fall into the category of clothing or entertainment technology. Saving and purchasing things will help show teenagers how much they've invested and encourage them to keep investing in their future.</p><p><br></p><h2><strong>Teach your teenager about NEEDS and WANTS</strong></h2><p>One step in teaching teenagers about budgets is to examine the differences between NEEDS and WANTS. Keep the basics straightforward and explain that a NEED is something we can't live without, such as food. While WANT is a nice thing to have, we don't necessarily need it, like going to the movies with friends.</p><p><br></p><p>It can be tricky for teenagers to grasp a particular concept. You will begin with analyzing their budgets and categorizing each expenditure.</p><p><br></p><h2><strong>Tell me the best way to spend money as a teenager?</strong></h2><p>If you ask any teen, they love to buy products that instantly bring joy to their lives. (Just like an adult.) However, every penny spent devalues their cash flow for the future. That is why teenagers must learn to practice self patience while making smart choices before things get too expensive or difficult later down the line.</p><p><br></p><p>Only 35% of the 2020 graduates say they are financially independent of their parents. Setting and following a budget will allow them to achieve financial independence easily. That is why teaching teens how to manage and budget their money is valuable financial education.</p><p><br></p><h2><strong>What is the best way to teach how to budget to teenagers?</strong></h2><p>When teaching teens budgeting, it can be helpful to start with the basics. An excellent starting line is the <a href="https://www.ivanremus.com/articles/personal-finances/50-30-20-rule-personal-budgeting-method-made-easy" target="_blank"><u>50/30/20 Rule</u></a>, originally proposed by the senior <a href="https://www.warren.senate.gov/" target="_blank"><u>U.S. Senator from Massachusetts, Elizabeth Warren</u></a>, in her book <a href="https://amzn.to/37hg5O7" target="_blank"><u>"All Your Worth: The Ultimate Lifetime Money Plan."</u></a></p><p><br></p><p>Explain to your teen that, based on the 50/30/20 rule, they should divide their after-tax earnings into three main categories:</p><ul><li><strong>50% to needs. </strong>For example, they can start saving for their college application or even contribute money to their household expenses!</li><li><strong>30% to wants. </strong>Do they want to go to the movies with their friends? here is where they allocate the money for those purchases.</li><li><strong>20% to short-term and long-term savings goals. </strong>Help your teen look forward and understand how saving and investing in their long-term goals will allow them to build wealth.</li></ul><p><br></p><h2><strong>Personal Finance for Teens</strong></h2><p>Think of your teenage child as a trained professional. You must teach them what to understand before sending them to college or trade school. The best way to teach a teenager how to save is to teach by leading by example.</p><p><br></p><h3><strong>Earning Money</strong></h3><p>If you were the most successful parent, you would have anticipated — that maybe your son would have helped with household chores.</p><p><br></p><p>Some people asked for help to wash dishes, wash floors and feed their dogs. Instead of just offering the allowance for a living, you should consider putting in some commissions. They don't have to worry about entitlement but understand that hard work and money are linked.</p><p><br></p><p>Make sure your teen earns their allowances by doing more chores in exchange. How to earn extra cash will become one of the cornerstones of their education in personal finance.</p><p><br></p><h3><strong>Saving and spending</strong></h3><p>Educating teens about money is important. The money they save at an early age can impact a teen's financial future. This is because compound interest works its magic over time, meaning that the larger the amount of money they save, the more it will grow.</p><p><br></p><h2><strong>Setting up a bank account</strong></h2><p>Opening your teen's first bank account might seem daunting. The good news is that many financial institutions offer different products specifically designed to serve the needs of your teenager kid.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1649377335_TeenSavingsAccount.webp"></p><p><br></p><h3><strong>Teen Savings Account</strong></h3><p>Chances are that your financial institution offers the option for you to open a savings account for your teen. We strongly suggest you check the terms and conditions of different savings accounts with your kid to have a clear idea of what is available in the market since might vary.</p><p><br></p><p>Help them to open their own savings account. That experience will teach them volumes about how to save money.</p><p><br></p><p>Help them set up a monthly savings goal based on the 50/30/20 budget rule.</p><p><br></p><h3><strong>Teen checking account</strong></h3><p>Since minors generally can’t open bank accounts by themselves, you’ll typically need to be a joint owner of the account, which may be a good thing.&nbsp;That way, parents can check and supervise their regular expenses to make sure they stick to the established budget with our help.</p><p><br></p><p>Once they get a job, either a part-time job or a summer job, and start earning money, we can help them set up direct deposit to their account, making it easier for them to manage their budget.</p><p><br></p><h3><strong>Debit card</strong></h3><p>Many savings account come with a debit card for kids, with no monthly service fees or balance requirements. The debit card for teens gives you the convenience of a method of payment for their expenses when they go out with their friends, while it allows you to stay on top of your teens’ spending and use teachable money moments to help them learn about financial responsibility.</p><p><br></p><h3><strong>Credit card</strong></h3><p><a href="https://www.experian.com/blogs/ask-experian/when-should-my-child-get-a-credit-card/" target="_blank"><u>Experian</u></a> tells us that teens can't open their credit card accounts until they turn 18. But even before then, minors can benefit from becoming authorized users on a family member's credit account. The minimum age fluctuates between 15 to 16 years old.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1649377297_Teenpayingwithcreditcard.webp"></p><p><br></p><h3><strong>Credit Karma</strong></h3><p>Once your child turns 18, you can help your young adult set up an account with <a href="https://www.creditkarma.com/" target="_blank"><u>Credit Karma</u></a>, including free credit monitoring. This way, your child will be notified if anything important changes, like an unauthorized account, so your family can react quickly to any suspicious signs of fraud, saving you time and money.</p><p><br></p><h2><strong>Spend money</strong></h2><p>Remember that you are constantly teaching your children about money, whether on purpose or not. Your shopping habits and the way you are spending money show them how to think and act in the world of finance; when it comes time for a special occasion (or even just fun stuff like cheap deals), they will know what makes sense based on our example!</p><p><br></p><p>Spending money based on a budget will make saving easier since they will have a better idea of how much they need to save and how much they can spend.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1649377318_Gobowlingwithfriends.webp"></p><p><br></p><h2><strong>Involve Your Teen in&nbsp;More Money Management</strong></h2><p>Young adults, especially in their teen years, are extremely interested in their parents, looking for assistance with any aspect.&nbsp;So, open up the dialogue with your teenager about saving money. You can start by asking them what they would like to save for and then help them set some financial goals. From there, you can assist them in creating a budget and working out a savings plan.</p><p><br></p><p>If you want to be a good example for your children, they must see the value in what you do. And sometimes this means sharing an idea with them even if their input would not help make any final decision—because often our kids will pick up on something better than we think! Try getting into the habit of thinking out loud during everyday money and time management so they can follow along while learning from all aspects."</p><p><br></p><h2><strong>Summary</strong></h2><p>Saving money for your teens can be challenging, especially when they don't have the skills to work. But, when you teach your teen how to save money, they will acquire the skills needed for long-term financial success. They'll learn about important concepts like how to budget, goal-setting (short-term and long-term goals), interest, taxes, and bank statements!</p><p><br></p><p>A great way (and this is something I want) our children learn early on in life where there was no intervention or prevention from anyone else - only themselves-to get an education that would help them achieve their future goals.</p>
</div>
</div>
<div class="fb-comments border-solid border-grey-200" id="fb-comments"></div>
</div>
</div>
</div>
<div class="sidebar">
<div id="sidebar">

</div>
<div id="sidebar-ads" class="hidden">

</div>
<div>
</div>
</div>
</div>
</div>
</main>
<div class="ads-wrapper md:pb-10 pb-5 hidden" id="footer-ads">
<div class="container flex justify-center">

</div>
</div>
<footer id="footer" class="footer">

</footer>
<script>!function(){function e(){var e=((new Date).getTime(),document.createElement("script"));e.type="text/javascript",e.async=!0,e.setAttribute("embed-id","a41c7f43-6359-4638-b792-9c3ee5338de3"),e.src="https://embed.adabundle.com/embed-scripts/a41c7f43-6359-4638-b792-9c3ee5338de3";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}var t=window;t.attachEvent?t.attachEvent("onload",e):t.addEventListener("load",e,!1)}();</script>
</div>
</main>
<div class="ads-wrapper md:pb-10 pb-5 hidden" id="footer-ads">
<div class="container flex justify-center">

</div>
</div>
<footer id="footer" class="footer">

</footer>
<script>!function(){function e(){var e=((new Date).getTime(),document.createElement("script"));e.type="text/javascript",e.async=!0,e.setAttribute("embed-id","a41c7f43-6359-4638-b792-9c3ee5338de3"),e.src="https://embed.adabundle.com/embed-scripts/a41c7f43-6359-4638-b792-9c3ee5338de3";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}var t=window;t.attachEvent?t.attachEvent("onload",e):t.addEventListener("load",e,!1)}();</script>
</div>
<script>

        async function exampleFunction() {
            return new Promise(async (resolve, reject) => {
                console.log("this is " + document.getElementById("blog-base").href);
                
                var baseURL = document.getElementById("blog-base").href;
                var domain = window.location.hostname;
                console.log("domain:", domain);
                var pageURL = window.location.href;
                console.log("pageURL:", pageURL);
                var pathURL = window.location.pathname;
                console.log("pathURL:", pathURL);
                var slugURL = pageURL.substr(pageURL.lastIndexOf("/") + 1);
                console.log("slugURL:", slugURL);
                var pathArray = window.location.pathname.split("/");
                console.log("pathArray:", pathArray);
                const segment_1 = pathArray[1];
                console.log("segment_1:", segment_1);
                var currentBaseUrl = window.location.protocol + "//" + window.location.host + '/' + segment_1;
                document.getElementById("blog-base").href = document.getElementById("blog-base").href == currentBaseUrl && segment_1 != ""? document.getElementById("blog-base").href +"/": "/";
                var BasePath = document.getElementById("blog-base").href;
                var currTimestamp = Date.now();
                var utcDateString = (new Date(currTimestamp)).toUTCString();
                var timestamp = new Date(utcDateString).getTime();
                // current versioning
                $modulePath = document.getElementById("blog-base").href + "js/version.js?v=" + timestamp;
                let version = await import($modulePath);
                console.log(version.updatedVersion());
                var notIndex = true;
                var tagSlug = false;
                var temp_tag = [];
                var temp_categories = [];
                var popularposts = [];
                var blogpostSlug = false;
                var categoriesSlug = false;
                var blogpost_id;
                var strArray = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];
                var postdeatilspopularposts = [];
                var sliderposts = [];
                var homPagePosts = [];
                var facebook_comment_settings = "";
                var width = "";
                var num_of_post = "";
                var BLOG_VER = version.updatedVersion();
                // var pageTitle = "";
                let url = new URL(pageURL);
                let search_params = url.searchParams;
                var post_preview = false;
                var post_preview_id = "";
                var theme_preview = false;
                var theme_slug = "";
                var slider = "";
                var showDates = true;
                domain = BasePath;
               var queryString = window.location.search

                // it is theme-preview
                if (window.location.toString().includes("preview-theme")) {
                    if (window.location.pathname == "/" + pathArray[1] + "/index.html") {
                        BasePath = "/" + pathArray[1] + "/";
                        console.log("basepath:", BasePath);
                        theme_preview = true;
                        domain = BasePath + "index.html";
                        console.log("theme_preview:", theme_preview);
                    }
                }

                // Add CSS FILE
                // Get HTML head element
                var head = document.getElementsByTagName("HEAD")[0];
                // Create new link Element
                var link = document.createElement("link");
                // set the attributes for link element
                link.rel = "stylesheet";
                link.type = "text/css";
                link.href = "css/style.css?v=" + BLOG_VER;
                // Append link element to HTML head
                head.appendChild(link);

                if (search_params.has("slug")) {
                    notIndex = false;
                    theme_slug = search_params.get("slug");
                }

                //CHECK THE URL IS FOR POST PREVIEW 
                if (search_params.has("type") && search_params.has("id") && search_params.get("type") == "post-preview") {

                    post_preview = true;
                    console.log(post_preview);
                    post_preview_id = search_params.get("id");

                }

                //FETCH JSON AND TEMPLATES FILES
                //1. BLOG POST LISTING FILES
                await fetch("json/blogpostlist.json?v=" + BLOG_VER)
                    .then((response) => response.json())
                    .then(async (blogposts) => {
                        console.log("1.blogpost listing:", blogposts);
                        //2. Setting Json File
                        await fetch("json/setting.json?v=" + BLOG_VER)
                            .then((response) => response.json())
                            .then(async (settings) => {
                                blogpost_url = settings.config.route.blogpost_url;
                                tag_url = settings.config.route.tag_url;
                                categories_url = settings.config.route.categories_url;
                                sidebar = settings.config.layout_setting.homePage.sidebar;
                                postType = settings.config.layout_setting.homePage.postType;
                                logo = settings.config.route.logo;
                                social_links = settings.config.route.social_links;
                                facebook_comment_settings = settings.config.route.facebook_comment_settings;
                                form_details = settings.config.route.form_details;
                                // pageTitle = settings.config.route.blog_title;
                                copyright = settings.config.route.copyright;
                                favicon = settings.config.route.favicon;
                                tracking_ga = settings.config.tracking_ga;
                                if (favicon == null) {
                                    favicon = "https://assets.grooveapps.com/images/5f0d5c882a049a001c814670/1612550721_favicon.png";
                                }

                                // ADDING FAVICON IN HEAD
                                var faviconHead = document.getElementsByTagName("HEAD")[0];
                                var link = document.createElement("link");
                                link.rel = "icon";
                                link.type = "image/png";
                                link.href = favicon;
                                // Append link element to HTML head
                                head.appendChild(link);

                                // HIDING EMPTY ADS DIV 
                                if (settings.config.ads != null) {
                                    if (settings.config.ads.header_ads == null) {
                                        var element = document.getElementById("header-ads");
                                        element.classList.add("empty-ads");
                                    }
                                    if (settings.config.ads.footer_ads == null) {
                                        var element = document.getElementById("footer-ads");
                                        element.classList.add("empty-ads");
                                    }
                                }
                                else {
                                    var headerAdsElement = document.getElementById("header-ads");
                                    headerAdsElement.classList.add("empty-ads");
                                    var footerAdsElement = document.getElementById("footer-ads");
                                    footerAdsElement.classList.add("empty-ads");
                                }

                                // POST LISTING LAYOUT TYPE
                                posttype = postType == 1 ? "list" : postType == 2 ? "grid" : "masonry";
                                emailForm = settings.config.layout_setting.homePage.emailForm;
                                categoriesShow = settings.config.layout_setting.homePage.categories;
                                blogpostsidebar = settings.config.layout_setting.postPage.sidebar;
                                showDates = settings.config.layout_setting.homePage.showDates;
                                numOfPosts = settings.config.layout_setting.homePage.numberOfPosts;

                                // DIFFERENTIATING THE URLS OF POST AND CATEGORY 
                                for (var i = 0; i < blogposts.length; i++) {
                                    postSlug = blogposts[i]["url"];

                                    if (theme_preview) {
                                        themePostSlug = "index.html?slug=" + postSlug;
                                        blogposts[i]["url"] = themePostSlug;
                                    }

                                    if (pageURL == BasePath + blogposts[i]["url"] || pageURL == BasePath + blogposts[i]["url"]+ queryString || pageURL == BasePath + blogposts[i]["url"] + ".html" || theme_slug == postSlug) {
                                        blogpostSlug = true;
                                        blogpost_id = blogposts[i]["id"];
                                        // pageTitle = blogposts[i]["id"]["name"];
                                    }

                                }
                                // COLLECTION OF POST OF DIFFERENT SECTIONS OF HOME PAGE

                                for (var i = 0; i < blogposts.length; i++) {
                                    if (blogposts[i]["add_carousel"]) {
                                        sliderposts.push(blogposts[i]);
                                    }
                                    if (blogposts[i]["show_homepage"]) {
                                        homPagePosts.push(blogposts[i]);
                                    }
                                    if (popularposts.length < 6) {
                                        popularposts.push(blogposts[i]);
                                    }
                                }
                                console.log("sliderposts:", sliderposts);
                                console.log("homepagePosts:", homPagePosts);
                                blogdata = {
                                    sidebar: sidebar,
                                    emailForm: emailForm,
                                    categoriesShow: categoriesShow,
                                    posttype: posttype,
                                    blogposts: homPagePosts,
                                    sliderposts: sliderposts,
                                    popularposts: popularposts,
                                    form_details: form_details,
                                    showDates: showDates,
                                    blogposts0: blogposts[0],
                                    blogposts1: blogposts[1],
                                    blogposts2: blogposts[2],
                                    blogposts3: blogposts[3],
                                    blogposts4: blogposts[4],
                                };
                                //3.NAVIGATIONS
                                await fetch("json/navigations.json?v=" + BLOG_VER)
                                    .then((response) => response.json())
                                    .then(async (navigations) => {
                                        await fetch("json/categories.json?v=" + BLOG_VER)
                                            .then((response) => response.json())
                                            .then(async (visiblecategories) => {
                                                visiblecategories = visiblecategories;
                                                for (var j = 0; j < visiblecategories.length; j++) {
                                                    categories_slug = visiblecategories[j]["slug"];
                                                    temp_categories_slug = {
                                                        categories_slug: categories_slug,
                                                    };
                                                    categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                    visiblecategories[j]["url"] = BasePath + categories_slug_url;
                                                    console.log(visiblecategories[j]["url"]);

                                                    if (pageURL == visiblecategories[j]["url"]) {
                                                        categoriesSlug = true;
                                                        categories_id = visiblecategories[j]["id"];
                                                        // pageTitle = visiblecategories[j]["name"];
                                                        // document.title = pageTitle;
                                                    }

                                                    if (theme_preview) {
                                                        themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                        visiblecategories[j]["url"] = themeCategorySlug;
                                                    }

                                                    num_of_child = visiblecategories[j]["children"].length;
                                                    visiblecategories[j]["child_exist"] = false;
                                                    if (num_of_child >= 1) {
                                                        visiblecategories[j]["child_exist"] = true;
                                                    }
                                                    for (var k = 0; k < visiblecategories[j]["children"].length; k++) {
                                                        categories_slug = visiblecategories[j]["children"][k]["slug"];
                                                        temp_categories_slug = {
                                                            categories_slug: categories_slug,
                                                        };
                                                        categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                        visiblecategories[j]["children"][k]["slug"] = BasePath + categories_slug_url;
                                                        if (pageURL == visiblecategories[j]["children"][k]["slug"]) {
                                                            categoriesSlug = true;
                                                            categories_id = visiblecategories[j]["children"][k]["id"];
                                                            // pageTitle = visiblecategories[j]["children"][k]["name"];
                                                            // document.title = pageTitle;
                                                        }
                                                        if (theme_preview) {
                                                            themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                            visiblecategories[j]["children"][k]["slug"] = themeCategorySlug;
                                                        }
                                                    }
                                                }


                                                console.log("visible-categories:", visiblecategories);

                                                await fetch("templates/header.html?v=" + BLOG_VER)
                                                    .then((response) => response.text())
                                                    .then(async (header_temp) => {
                                                        temp = header_temp;
                                                        var headerdata = {
                                                            logo: logo,
                                                            social_links: social_links,
                                                            domain: domain,
                                                            navigations: navigations,
                                                            tags: visiblecategories,
                                                            copyright: copyright,
                                                        }
                                                        console.log("headerdata:", headerdata);
                                                        header = Mustache.to_html(temp, headerdata);
                                                        await fetch("templates/footer.html?v=" + BLOG_VER)
                                                            .then((response) => response.text())
                                                            .then(async (footer) => {
                                                                footer = footer;
                                                                footer = Mustache.to_html(footer, headerdata);
                                                                await fetch("templates/layout.html?v=" + BLOG_VER)
                                                                    .then((response) => response.text())
                                                                    .then(async (layout) => {

                                                                    });
                                                                // POST PREVIEW URL
                                                                if (post_preview) {
                                                                    console.log("post_preview:", post_preview);
                                                                    await fetch("https://v1.gdapis.com/api/grooveblog/post-preview/" + post_preview_id)
                                                                        .then((response) => response.json())
                                                                        .then(async (blog) => {
                                                                            // document.getElementById("post-detials-ads").innerHTML = blog["custom_code"];
                                                                            document.title = blog["title"];
                                                                            blogpost_id = post_preview_id;
                                                                            if (facebook_comment_settings != null) {
                                                                                app_id = facebook_comment_settings.app_id;
                                                                                width = facebook_comment_settings.width;
                                                                                num_of_post = facebook_comment_settings.num_of_post;
                                                                            }
                                                                            console.log(blog["date_and_time"]);
                                                                            var publish_date = new Date(blog["date_and_time"]);
                                                                            if (isNaN(blog["date_and_time"])) {
                                                                                publish_date = new Date();
                                                                            }
                                                                            var formatted = strArray[publish_date.getMonth()] + " " + publish_date.getDate() + ", " + publish_date.getFullYear();
                                                                            blog["date_and_time"] = formatted;
                                                                            for (var j = 0; j < blog["categories"].length; j++) {
                                                                                categories_slug = blog["categories"][j]["slug"];
                                                                                temp_categories_slug = {
                                                                                    categories_slug: categories_slug,
                                                                                };
                                                                                categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                                                blog["categories"][j]["url"] = categories_slug_url;
                                                                                if (pageURL == BasePath + categories_slug_url) {
                                                                                    categoriesSlug = true;
                                                                                    categories_id = blog["categories"][j]["id"];
                                                                                }
                                                                            }
                                                                            for (var j = 0; j < popularposts.length; j++) {
                                                                                if (blogpost_id != popularposts[j]["id"]) {
                                                                                    postdeatilspopularposts.push(popularposts[j]);
                                                                                }
                                                                            }
                                                                            blogdata = {
                                                                                pageURL: pageURL,
                                                                                width: width,
                                                                                num_of_post: num_of_post,
                                                                                sidebar: blogpostsidebar,
                                                                                form_details: form_details,
                                                                                blogposts: blog,
                                                                            };
                                                                            console.log(blogdata);
                                                                            await fetch("templates/blogpost.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (template) => {
                                                                                    if (blogpostsidebar) {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: blogpostsidebar,
                                                                                            form_details: form_details,
                                                                                            popularposts: postdeatilspopularposts,
                                                                                        };

                                                                                        await fetch("templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then((sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });
                                                                                    }

                                                                                    else {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                                    }
                                                                                    middle = Mustache.to_html(template, blogdata);
                                                                                    var elem = document.getElementById("main-content");
                                                                                    elem.style.background = "#ffffff";
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("slider").innerHTML = slider;
                                                                                    document.getElementById("container").className = "container-small";
                                                                                    document.getElementById("middle").innerHTML = middle;
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    console.log(middle);
                                                                                    if (blog.show_comments && facebook_comment_settings != null && facebook_comment_settings.app_id != null) {
                                                                                        setTimeout(function () {
                                                                                            let myCommentCode = document.createElement("script");
                                                                                            myCommentCode.setAttribute("src", "https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v9.0&appId=" + app_id + "&autoLogAppEvents=1");
                                                                                            myCommentCode.setAttribute("crossorigin", "anonymous");
                                                                                            myCommentCode.setAttribute("nonce", "QBaEqTGW"); document.body.appendChild(myCommentCode);
                                                                                        }, 1000)
                                                                                    }
                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    let frameCode = document.createElement("script");
                                                                                    frameCode.setAttribute("src", BasePath + "js/frame.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(frameCode);
                                                                                });

                                                                        });

                                                                }
                                                                // BLOG POST URL
                                                                if (blogpostSlug) {
                                                                    await fetch("json/" + blogpost_id + ".json?v=" + BLOG_VER)
                                                                        .then((response) => response.json())
                                                                        .then(async (blog) => {
                                                                            // document.getElementById("post-detials-ads").innerHTML = blog["custom_code"];
                                                                            document.title = blog["title"];
                                                                            if (facebook_comment_settings != null) {
                                                                                app_id = facebook_comment_settings.app_id;
                                                                                width = facebook_comment_settings.width;
                                                                                num_of_post = facebook_comment_settings.num_of_post;
                                                                            }

                                                                            for (var j = 0; j < blog["categories"].length; j++) {
                                                                                categories_slug = blog["categories"]["slug"];
                                                                                temp_categories_slug = {
                                                                                    categories_slug: categories_slug,
                                                                                };
                                                                                categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                                                blog["categories"][j]["url"] = BasePath + categories_slug_url;
                                                                                if (theme_preview) {
                                                                                    themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                                                    blog["categories"][j]["url"] = themeCategorySlug;
                                                                                }
                                                                                if (pathURL == blog["categories"][j]["url"] || categories_slug_url == theme_slug) {
                                                                                    categoriesSlug = true;
                                                                                    categories_id = blog["categories"][j]["id"];
                                                                                }
                                                                            }

                                                                            for (var j = 0; j < popularposts.length; j++) {
                                                                                if (blogpost_id != popularposts[j]["id"]) {
                                                                                    postdeatilspopularposts.push(popularposts[j]);
                                                                                }

                                                                            }
                                                                            await fetch(BasePath + "templates/blogpost.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (blogPostDetailsTemplate) => {
                                                                                    if (blogpostsidebar) {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: blogpostsidebar,
                                                                                            form_details: form_details,
                                                                                            popularposts: postdeatilspopularposts,
                                                                                        };
                                                                                        await fetch(BasePath + "templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then(async (sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });



                                                                                    }
                                                                                    else {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                                    }
                                                                                    var elem = document.getElementById("main-content");
                                                                                    elem.style.background = "#ffffff";
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("container").className = "container-small";
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    if (blog.show_comments && facebook_comment_settings != null && facebook_comment_settings.app_id != null) {
                                                                                        document.getElementById("fb-comments").setAttribute("data-href", pageURL);
                                                                                        document.getElementById("fb-comments").setAttribute("data-width", width);
                                                                                        document.getElementById("fb-comments").setAttribute("data-numposts", num_of_post);
                                                                                        setTimeout(function () {
                                                                                            let myCommentCode = document.createElement("script");
                                                                                            myCommentCode.setAttribute("src", "https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v9.0&appId=" + app_id + "&autoLogAppEvents=1");
                                                                                            myCommentCode.setAttribute("crossorigin", "anonymous");
                                                                                            myCommentCode.setAttribute("nonce", "QBaEqTGW");
                                                                                            document.body.appendChild(myCommentCode);
                                                                                        }, 1000

                                                                                        );

                                                                                    }
                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    let frameCode = document.createElement("script");
                                                                                    frameCode.setAttribute("src", BasePath + "js/frame.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(frameCode);


                                                                                });
                                                                        });
                                                                }

                                                                if (categoriesSlug) {
                                                                    console.log(categoriesSlug);
                                                                    var categoryCount = 0;
                                                                    await fetch(BasePath + "templates/categories.html?v=" + BLOG_VER)
                                                                        .then((response) => response.text())
                                                                        .then(async (categoriesTemplate) => {
                                                                            showDates = settings.config.layout_setting.categoryPage.showDates;
                                                                            numOfPosts = settings.config.layout_setting.categoryPage.numberOfPosts;
                                                                            categoryPagepostType = settings.config.layout_setting.categoryPage.postType;
                                                                            postType = categoryPagepostType == 1 ? "list" : categoryPagepostType == 2 ? "grid" : "masonry";
                                                                            var categoriesblogdata = {
                                                                                posttype: posttype,
                                                                                blogpost: blogposts,
                                                                            };
                                                                            console.log(blogposts);
                                                                            for (var k in blogposts) {
                                                                                slug = blogposts[k]["slug"];
                                                                                var temp_blogpost_slug = {
                                                                                    slug: slug,
                                                                                };
                                                                                postSlug = Mustache.render(blogpost_url, temp_blogpost_slug);
                                                                                blogposts[k]["url"] = BasePath + postSlug;
                                                                                if (theme_preview) {
                                                                                    themePostSlug = "index.html?slug=" + postSlug;
                                                                                    blogposts[k]["url"] = themePostSlug;
                                                                                }
                                                                                for (var j in blogposts[k]["categories"]) {
                                                                                    if (blogposts[k]["categories"][j]["id"] == categories_id) {
                                                                                        temp_categories.push(blogposts[k]);
                                                                                        categoryCount = categoryCount + 1;
                                                                                    }

                                                                                }
                                                                            }
                                                                            var categorieswiseblogpost = {
                                                                                postType: posttype,
                                                                                blogpost: temp_categories,
                                                                                showDates: showDates,
                                                                            };

                                                                            middle = Mustache.to_html(categoriesTemplate, categorieswiseblogpost);
                                                                            console.log(middle);
                                                                            document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                            document.getElementById("header").innerHTML = header;
                                                                            document.getElementById("middle").innerHTML = middle;
                                                                            document.getElementById("footer").innerHTML = footer;
                                                                            let myCoolCode = document.createElement("script");
                                                                            myCoolCode.setAttribute("src", BasePath + "js/loadmore.js?v=" + BLOG_VER);
                                                                            document.body.appendChild(myCoolCode);
                                                                            // document.getElementById("blogPostListWrapper").innerHTML = html;
                                                                        });
                                                                }
                                                                if (pageURL == BasePath + "?v=" + (BLOG_VER + 1) || pageURL == BasePath + queryString || pageURL == baseURL+ queryString || pageURL == baseURL + "?v=" + (BLOG_VER + 1)|| pageURL== baseURL || pageURL == BasePath || pathURL == BasePath + "index.html" && theme_slug == "" && (!post_preview)) {
                                                                    // document.title = pageTitle;
                                                                    await fetch(BasePath + "templates/slider.html?v=" + BLOG_VER)
                                                                        .then((response) => response.text())
                                                                        .then(async (sliderTemplate) => {
                                                                            var sliderData = {
                                                                                categoriesShow: categoriesShow,
                                                                                sliderposts: sliderposts,
                                                                                showDates: showDates,
                                                                            };
                                                                            slider = Mustache.to_html(sliderTemplate, sliderData);




                                                                            await fetch(BasePath + "templates/home.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (homeTemplate) => {
                                                                                    if (!sidebar) {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";

                                                                                    }
                                                                                    else {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: sidebar,
                                                                                            emailForm: emailForm,
                                                                                            popularposts: popularposts,
                                                                                            form_details: form_details,
                                                                                        };
                                                                                        await fetch(BasePath + "templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then(async (sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });
                                                                                    }
                                                                                    console.log(blogdata);
                                                                                    var middle = Mustache.to_html(homeTemplate, blogdata);
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("slider").innerHTML = slider;
                                                                                    document.getElementById("middle").innerHTML = middle;
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    let myCoolCode = document.createElement("script");
                                                                                    myCoolCode.setAttribute("src", BasePath + "js/loadmore.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(myCoolCode);
                                                                                    let mySliderCode = document.createElement("script");
                                                                                    mySliderCode.setAttribute("src", BasePath + "js/slider.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(mySliderCode);

                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    // document.getElementById("blogPostListWrapper").innerHTML = html;
                                                                                });
                                                                        });
                                                                }



                                                            });
                                                    });


                                            });
                                    });







                            });

                        return resolve("Success");


                    });















            });

        };
        window.onload = exampleFunction().then(async (res) => {
            console.log(res);
            var currTimestamp = Date.now();
            var utcDateString = (new Date(currTimestamp)).toUTCString();
            var timestamp = new Date(utcDateString).getTime();
            var BasePath = document.getElementById("blog-base").href;
            let script = document.createElement('script');
            $modulePath = document.getElementById("blog-base").href + "js/version.js?v=" + timestamp;
            let version = await import($modulePath);
            let BLOG_VER = version.updatedVersion();
            var postElement = document.getElementById("middle");
            postElement.classList.remove("hidden");
            let embedIframeScript = document.createElement('script');
            embedIframeScript.src = BasePath + 'js/embedIframe.js?v=' + BLOG_VER;
                document.head.appendChild(embedIframeScript);
            setTimeout(function () {
                let script = document.createElement('script');
                script.src = BasePath + 'js/embedads.js?v=' + BLOG_VER;
                document.head.appendChild(script);

            }, 6000);

        });
    </script>
</body>
</html>