<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://wsvincent.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wsvincent.com/" rel="alternate" type="text/html" /><updated>2022-07-20T13:34:38-04:00</updated><id>https://wsvincent.com/feed.xml</id><title type="html">William Vincent</title><subtitle>Writer. Programmer.</subtitle><entry><title type="html">Best Django Books (2022) for Beginner and Intermediate/Advanced Programmers</title><link href="https://wsvincent.com/best-django-books/" rel="alternate" type="text/html" title="Best Django Books (2022) for Beginner and Intermediate/Advanced Programmers" /><published>2022-07-20T03:48:42-04:00</published><updated>2022-07-20T03:48:42-04:00</updated><id>https://wsvincent.com/best-django-books</id><content type="html" xml:base="https://wsvincent.com/best-django-books/">&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; is a popular Python-based web framework. It is batteries included which dramatically speeds up web development but also comes with a bit of a learning curve for newcomers. Whether you are new to web development or already experienced, here is an up-to-date list of the best Django books.&lt;/p&gt;

&lt;p&gt;Note that new versions of Django &lt;a href=&quot;https://www.djangoproject.com/download/&quot;&gt;come out every 9 months or so&lt;/a&gt;. The latest version, Django 4.0, was released in December of 2021, Django 4.1 is scheduled for August 2022, and so on. This rapid release schedule makes it very difficult–if not impossible–for book authors to keep up with. The books on this list have all been updated in the last few years and are good resources.&lt;/p&gt;

&lt;p&gt;_Full Disclosure: I’m the author of 3 of these books but also a fan of all the ones listed here. _&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;beginner-books&quot;&gt;Beginner Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#django-for-beginners&quot;&gt;Django for Beginners&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#a-wedge-of-django&quot;&gt;A Wedge of Django&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#build-a-website-with-django-3&quot;&gt;Build a Website with Django 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tango-with-django&quot;&gt;Tango with Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;intermediateadvanced-books&quot;&gt;Intermediate/Advanced Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#two-scoops-of-django&quot;&gt;Two Scoops of Django&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#speed-up-your-django-tests&quot;&gt;Speed Up Your Django Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#django-for-apis&quot;&gt;Django for APIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#django-for-professionals&quot;&gt;Django for Professionals&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#boost-your-django-dx&quot;&gt;Boost Your Django DX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mastering-django&quot;&gt;Mastering Django&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#high-performance-django&quot;&gt;High Performance Django&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-temple-of-django-database-performance&quot;&gt;The Temple of Django Database Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;django-for-beginners&quot;&gt;Django for Beginners&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://djangoforbeginners.com/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/books/dfb_40.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;A project-based introduction to Django that is suitable for total beginners who have never built a website before as well as professional programmers looking for a fast-paced guide to modern web development and Django fundamentals. It covers building 5 websites from scratch including a &lt;em&gt;Blog&lt;/em&gt; and &lt;em&gt;Newspaper&lt;/em&gt;. Topics include deployment, testing, environment variables, customizing a site, custom user models, emails, permissions, authorizations, and more.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;a-wedge-of-django&quot;&gt;A Wedge of Django&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://www.roygreenfeld.com/products/django-crash-course&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/wedge_of_django.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;A beginner-friendly walkthrough of building a Django web application from the ground up. Written by the authors of the classic &lt;a href=&quot;#two-scoops-of-django&quot;&gt;Two Scoops of Django&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;build-a-website-with-django-3&quot;&gt;Build a Website with Django 3&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://amzn.to/2HL9i2G&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/build_website.jpeg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Build a fully functioning website while learning all about Django topics. From the maintainer of the &lt;a href=&quot;https://djangobook.com/&quot;&gt;DjangoBook&lt;/a&gt; website and author of the more advanced &lt;a href=&quot;https://amzn.to/35JKJLt&quot;&gt;Mastering Django&lt;/a&gt; book.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tango-with-django&quot;&gt;Tango with Django&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://www.tangowithdjango.com&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/twd-cover-crop.jpeg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The fourth edition of this book written by two scholars at the University of Glasgow demonstrates how to build a &lt;a href=&quot;https://rangodemo2020.pythonanywhere.com&quot;&gt;sample Rango application&lt;/a&gt;. It also explains external APIs, Git, unit testing, and deployment via Python Anywhere.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;two-scoops-of-django&quot;&gt;Two Scoops of Django&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://www.feldroy.com/collections/two-scoops-press/products/two-scoops-of-django-3-x&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/two_scoops3.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;An updated edition to the classic Django best practices guide. It does not adopt a typical tutorial structure but instead has chapters dedicated to specific areas of Django including models, views, templates, forms, project structure, queries, admin, and so on.&lt;/p&gt;

&lt;p&gt;Most Django developers–myself included–keep a copy of this book on their desk as an indispensable reference guide to building Django projects.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;speed-up-your-django-tests&quot;&gt;Speed Up Your Django Tests&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;http://url8863.transactions.gumroad.com/ls/click?upn=0A2jstIsZ2QEj3AAObpAelH8hZJnAxkHKwaWl-2BxhTUWIsrX0XSvW-2FYjXBmqkur4L7qub_GrAtdjbhraP4Wg-2FynZnYH4solW4faVBSBV-2B1JeHso5lVcGIt8WofD6Q-2FHPexNy3EzQj9m8aUBzVvcABpWmZH2zvMUaYzLANLjkl1cKmlTkVKet7LCdpZ2dz-2BRWQTjmFnGXDoisdoHR-2FqSsDxMb44jgtKRCpOxF-2FSzNoOFB3IbjTpj8p3C6c0jqKEygii4ywmESBs7UW6ybGZOkimXhunEUMj0XwGjxjXrER8Sjti3Bc7uBpmTe67CmQnRk-2BaQdqIniiYrn-2Bmx56qmo2opfHRw20Dp04jLT95-2F2mBugkbuwF55gAjB8k-2Fgfnwdfmj2BUJQTJP7LBbNbDyUgy3ggvSNdlvWfYEQ4AU1QqnytwI-2FdP-2BqrQqZbdSgF-2Bo1-2BM48biCL-2Fl4BzBvjevmdEymxlCezw-3D-3D&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/speed_up_your_django_tests.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Adam Johnson is a member of the Django Technical Board and an expert on security and testing. He has many Django and Python tutorials available on his &lt;a href=&quot;https://adamj.eu/tech/&quot;&gt;personal blog&lt;/a&gt; that are worth a look. This book is for intermediate/advanced Django developers but is absolutely loaded with wisdom and tips on Django’s test framework and pytest.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;django-for-apis&quot;&gt;Django for APIs&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://djangoforapis.com/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/books/dfa_40.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Django is often used as a backend API to power mobile apps or websites using a dedicated JavaScript front-end like React, Vue, or Angular. This book is a hands-on guide to building modern APIs with Django and Django REST Framework.&lt;/p&gt;

&lt;p&gt;The book covers building 3 Django APIs from scratch, testing, deployment user authentication (basic, sessions, tokens), permissions, documentation, viewsets and routers.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;django-for-professionals&quot;&gt;Django for Professionals&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://djangoforprofessionals.com/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/books/dfp_31.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;There is a large gap between simple “toy apps” built while learning Django and what it takes to create a production-ready website that can handle thousands or millions of years. This book shows you how to take that next step.&lt;/p&gt;

&lt;p&gt;Topics covered include Docker, PostgreSQL, advanced user registration, comprehensive tests, advanced security and performance, search, and file/image uploads.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;boost-your-django-dx&quot;&gt;Boost Your Django DX&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://adamchainz.gumroad.com/l/byddx&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/django_dx.png&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Another excellent book from Adam Johnson containing a multitude of tools and techniques to boost a Django Developer’s Experience, or DX. There are 12 chapters covering every piece of the extended Django toolchain.&lt;/p&gt;

&lt;h3 id=&quot;the-temple-of-django-database-performance&quot;&gt;The Temple of Django Database Performance&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://spellbookpress.com/books/temple-of-django-database-performance/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/temple_django.png&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Django’s built-in ORM is powerful but to really maximize performance in your web applications, you need to go a step deeper and master database performance. This books shows you how. It covers profiling and measurement tools, how to evaluate queries, and a host of advanced techniques.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mastering-django&quot;&gt;Mastering Django&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://amzn.to/35JKJLt&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/mastering_django.jpeg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Mastering Django is a complete guide to Django written in a friendly, accessible tone. The first half covers the fundamentals: models, views, templates, urls, forms. The second half goes in greater depth on the same topics with concrete examples throughout.&lt;/p&gt;

&lt;h3 id=&quot;high-performance-django&quot;&gt;High Performance Django&lt;/h3&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://highperformancedjango.com/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/highperformancedjango.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Although released in 2014, this book’s advice is timeless and still relevant to most web applications. It has many great tips for improving performance in your Django website and your related databases. It is free to read online now, too!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;obey-the-testing-goat&quot;&gt;Obey The Testing Goat&lt;/h2&gt;
&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://www.obeythetestinggoat.com/&quot; target=&quot;\_blank&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bestdjangobooks/testing_goat.jpeg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The book is written for Django 1.11 but is so good it still deserves to be on this list. It walks through the test-driven development of a Django web application as well as covering Selenium and more.&lt;/p&gt;

&lt;h2 id=&quot;courses&quot;&gt;Courses&lt;/h2&gt;

&lt;p&gt;The following are online-only book length courses that are also recommended.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://testdriven.io/courses/django-rest-framework/?utm_source=will&quot;&gt;Developing RESTful APIs with Django REST Framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://testdriven.io/courses/tdd-django/?utm_source=will&quot;&gt;Test-Driven Development with Django, Django REST Framework, and Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://testdriven.io/courses/real-time-app-with-django-channels-and-angular/?utm_source=will&quot;&gt;Create a real-time taxi app with Channels and Angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: As an Amazon Associate I earn from qualifying purchases.&lt;/p&gt;</content><author><name></name></author><summary type="html">Django is a popular Python-based web framework. It is batteries included which dramatically speeds up web development but also comes with a bit of a learning curve for newcomers. Whether you are new to web development or already experienced, here is an up-to-date list of the best Django books.</summary></entry><entry><title type="html">Django for Professionals 4.0 Update</title><link href="https://wsvincent.com/django-for-professionals-40-update/" rel="alternate" type="text/html" title="Django for Professionals 4.0 Update" /><published>2022-05-19T06:56:06-04:00</published><updated>2022-05-19T06:56:06-04:00</updated><id>https://wsvincent.com/django-for-professionals-40-update</id><content type="html" xml:base="https://wsvincent.com/django-for-professionals-40-update/">&lt;p&gt;Today I’m launching the Django 4.0 update to my book &lt;a href=&quot;https://djangoforprofessionals.com&quot;&gt;Django for Professionals&lt;/a&gt;. Readers who purchased the digital version on Gumroad can log in to their accounts there and download the update for free.&lt;/p&gt;

&lt;p&gt;This is a major, major update. It took me a long time to figure out how to relate what I’ve learned the last 2 years about Django into the update.&lt;/p&gt;

&lt;p&gt;The two biggest updates are Windows-first support and a switch from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipenv&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;. This is something I’ve done in the 4.0 updates to my other two books as well–&lt;a href=&quot;https://djangoforbeginners.com&quot;&gt;Django for Beginners&lt;/a&gt; and &lt;a href=&quot;https://djangoforapis.com&quot;&gt;Django for APIs&lt;/a&gt;. As we learned in the Django developers survey, way more users are on Windows than macOS so now there is support for both. And while I shared the community’s excitement around Pipenv when it came out–and it still works &lt;em&gt;just fine&lt;/em&gt; if you have it on existing site–I think for what I teach, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; is more than adequate and one less thing to install. So &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; it is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://djangoforprofessionals.com&quot;&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/books/dfp_40.jpg&quot; alt=&quot;DFP 4.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;whats-new-for-40&quot;&gt;What’s New for 4.0&lt;/h2&gt;
&lt;p&gt;In bulleted format here is what’s new in the 4.0 update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Django 4.0 and Python 3.10 throughout.&lt;/li&gt;
  &lt;li&gt;Windows-first support. I bought a &lt;a href=&quot;https://amzn.to/3moxolx&quot;&gt;Microsoft Surface laptop&lt;/a&gt; and have been dutifully using it several days a week. I still greatly prefer macOS but most of the world uses Windows so I have run through all the code and updated the text to ensure Windows works well.&lt;/li&gt;
  &lt;li&gt;New chapter devoted to Initial Set Up.&lt;/li&gt;
  &lt;li&gt;Using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipenv&lt;/code&gt; throughout. All virtual environments named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.venv&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Change default project name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django_project&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Use Black for Python formatting, adopt double quotes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; over single quotes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;''&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Update Bootstrap section from 4.6 to 5.1.&lt;/li&gt;
  &lt;li&gt;Much expanded Performance chapter with code examples and discussion of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select_related&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prefetch_related&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Numerous small changes throughout describing concepts better, adding more examples.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thoughts&quot;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;To be honest, writing and updating this book takes a lot more out of me than my other two. I think it’s very tough to stay current on intermediate/advanced best practices let alone write about it. So many things fall into an “it depends” bucket but I don’t want to repeat endless debates in the book. I want to provide context, advice, and demonstrate best practices where I can.&lt;/p&gt;

&lt;p&gt;A lot more of my time is spent figuring out where the bleeding edge is, making my own decisions after consulting with peers, and then presenting it to readers. Focusing on beginner content is more about the teaching than the content itself or me at this point, so it is a little easier.&lt;/p&gt;

&lt;p&gt;Heroku has also had a number of public difficulties recently and is used for deployment. I wish I didn’t have to cover platform-specific deployment at all since it changes often but I do want to show how to get a site online. Heroku’s days seem to be clearly numbered. There are a number of interesting hosting platforms out there and several more coming. It is something I will be watching closely and perhaps changing in the future.&lt;/p&gt;

&lt;h2 id=&quot;the-future&quot;&gt;The Future&lt;/h2&gt;
&lt;p&gt;I plan to finally start working in earnest on a Python book now. I’ve been saying that for about 4 years now but a combination of Covid, having a third child, donating a lot of volunteer time to Django, and other things have gotten in the way. I’m excited to focus on something new for a change.&lt;/p&gt;

&lt;p&gt;I will still do 4.1 and 4.2 updates for the books. They will likely be less dramatic than the 4.0 updates have been.&lt;/p&gt;

&lt;p&gt;I want to have an online-only version of the books rather than the current constellation of different sites, providing tutorials and previews online, only to switch over to either Gumroad PDFs or Amazon.&lt;/p&gt;

&lt;p&gt;The big question for me, I suppose, is where to host everything. I’d really like to just have one site for all my professional work. As much as I like the name LearnDjango.com and something else Python-specific… at the end of the day it’s just me. So I should probably stop hiding behind website names and just put it all on my site. If you like what I create, here’s more of it. And if/when I branch into realms beyond solely Python and Django–I’d like to teach HTML, CSS, SQL, JavaScript–I can do it in one place.&lt;/p&gt;

&lt;p&gt;Thanks for reading if you’re still here at the bottom of the article! I hope you enjoy the Django for Professionals 4.0 update.&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I’m launching the Django 4.0 update to my book Django for Professionals. Readers who purchased the digital version on Gumroad can log in to their accounts there and download the update for free.</summary></entry><entry><title type="html">Django for APIs 4.0 Update</title><link href="https://wsvincent.com/django-for-apis-40-update/" rel="alternate" type="text/html" title="Django for APIs 4.0 Update" /><published>2022-02-24T05:56:06-05:00</published><updated>2022-02-24T05:56:06-05:00</updated><id>https://wsvincent.com/django-for-apis-40-update</id><content type="html" xml:base="https://wsvincent.com/django-for-apis-40-update/">&lt;p&gt;Today I’m launching the Django 4.0 and Django REST Framework 3.13 update to my book &lt;a href=&quot;https://djangoforapis.com&quot;&gt;Django for APIs&lt;/a&gt;. Readers who purchased the digital version on Gumroad can log in to their accounts there and download the update for free.&lt;/p&gt;

&lt;p&gt;This is a major update and essentially rewrite of the previous version. There are many changes large and small that will be listed below but the biggest ones are Windows support as opposed to just macOS, a switch to Pip from Pipenv, pages of new content on testing APIs, production deployment, updates in documenting web APIs, and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://djangoforapis.com&quot;&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/books/dfa_40.jpg&quot; alt=&quot;DFA 4.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;whats-new-for-40&quot;&gt;What’s New for 4.0&lt;/h2&gt;
&lt;p&gt;In bulleted format here is what’s new in the 4.0 update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Django 4.0 and Django REST Framework 3.13 throughout.&lt;/li&gt;
  &lt;li&gt;Updated to Python 3.10.&lt;/li&gt;
  &lt;li&gt;Added full chapter on proper set up with Python, Django, Black, Git, and more.&lt;/li&gt;
  &lt;li&gt;Switched to Pip from Pipenv, which is a major change but feels warranted given Pipenv has slowed in development and Pip is the default for many people. I don’t get into fancier configuration options because “it all depends” once you do and using Pip is fine for a single developer starting out.&lt;/li&gt;
  &lt;li&gt;Windows-first support. I bought a &lt;a href=&quot;https://amzn.to/3moxolx&quot;&gt;Microsoft Surface laptop&lt;/a&gt; and have been dutifully using it several days a week. I still greatly prefer macOS but most of the world uses Windows so I have run through all the code and updated the text to ensure Windows works well.&lt;/li&gt;
  &lt;li&gt;Updated all the third-party packages to the latest versions, which means &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-cors-headers&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-rest-auth&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-allauth&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gunicorn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psycopg&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whitenoise&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;environs&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Added environment variables for proper security and deployment&lt;/li&gt;
  &lt;li&gt;Much more material on testing both Django and Django REST Framework in all projects&lt;/li&gt;
  &lt;li&gt;Deployment configured in depth for all 3 projects built in the book&lt;/li&gt;
  &lt;li&gt;Fixed a previous bug in Chapter 7 around permissions so it is properly locked down now. Also covers custom permissions in far more depth.&lt;/li&gt;
  &lt;li&gt;Switched the default project name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django_project&lt;/code&gt; to avoid any confusion among readers.&lt;/li&gt;
  &lt;li&gt;Switched to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drf-spectacular&lt;/code&gt; for documentation in align with recent Django REST Framework trends&lt;/li&gt;
  &lt;li&gt;Switch from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python -m pip install&lt;/code&gt; because &lt;a href=&quot;https://adamj.eu/tech/2020/02/25/use-python-m-pip-everywhere/&quot;&gt;Adam Johnson said to&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;All new screenshots since Chrome updates even more often than Django.&lt;/li&gt;
  &lt;li&gt;Switch to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; for Git branch.&lt;/li&gt;
  &lt;li&gt;Added static files to an otherwise empty &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;static/&lt;/code&gt; folder that wasn’t being picked up by Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thoughts&quot;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;The main goal for this update was to include more material so that this book is equally in-depth and advanced as &lt;a href=&quot;https://djangoforprofessionals.com&quot;&gt;Django for Professionals&lt;/a&gt;. I’m often asked by readers which book they should read next after &lt;a href=&quot;https://djangoforbeginners.com&quot;&gt;Django for Beginners&lt;/a&gt; and while I think all three books have merit it really depends on the immediate need of the developer. If your goal is to write web APIs quickly it’s ok to go right to this APIs book and later do Professionals. If your goal is to do production websites without needing an API, it’s ok to do Professionals and then later APIs to fill out your understanding.&lt;/p&gt;

&lt;p&gt;It’s an interesting process doing major rewrites to existing books. On the one hand it’s not as rewarding or fun as creating something new from scratch. There is less of a fulfilling of satisfaction from an update versus something totally new. On the other hand, the fact that all three books continue to sell well affords me the time to devote to improving each of them every 8 months in line with Django’s release schedule.&lt;/p&gt;

&lt;p&gt;I don’t anticipate such a major update for the 4.1 and 4.2 versions of my books but having a major re-write on the .0 releases, meaning 5.0 will be the next big update, is much more mangeable for me than trying to do such a lengthy rewrite each time.&lt;/p&gt;

&lt;p&gt;Next up is the Django for Professionals 4.0 update. I have a long list of improvements for that book as well: adding Windows support, switching to Pip, taking advantage of new Django features, updating Docker, and so on. Hopefully that can be completed and released this spring.&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I’m launching the Django 4.0 and Django REST Framework 3.13 update to my book Django for APIs. Readers who purchased the digital version on Gumroad can log in to their accounts there and download the update for free.</summary></entry><entry><title type="html">How to Work Through Django Books</title><link href="https://wsvincent.com/how-to-work-through-django-books/" rel="alternate" type="text/html" title="How to Work Through Django Books" /><published>2022-02-15T05:56:06-05:00</published><updated>2022-02-15T05:56:06-05:00</updated><id>https://wsvincent.com/how-to-work-through-django-books</id><content type="html" xml:base="https://wsvincent.com/how-to-work-through-django-books/">&lt;p&gt;A reader recently asked me a very insightful question that I responded to via email but wanted to repeat publicly here. He noted that by the end of &lt;em&gt;Django for Beginners&lt;/em&gt; he was slowly grasping the ideas of urls, views, templates, and models. But every now and then, when we needed something new in the book, “you wave your wand and pull a new Django thing out of the hat. And then refer to more learning about them in the docs.”&lt;/p&gt;

&lt;p&gt;As a result, there was a piling mound of unread footnotes. And questions about when to tackle them. Finish the book first and read them after? Read the footnotes as you go?&lt;/p&gt;

&lt;p&gt;This is a fantastic and very fair question. It &lt;em&gt;is&lt;/em&gt; overwhelming the first time you start using Django. One of my main goals with the books is to progressively enhance understanding by mixing the doing and the explaining. I find that most programming books go bottom up and start with first principles, underlying concepts, and then maybe a few hundred pages in actually build something useful by which point few readers are left.&lt;/p&gt;

&lt;p&gt;In my opinion, this approach doesn’t mix enough context and hands-on coding. Few self-directed readers will get through it all on their own. By contrast, a university textbook can take this approach because it has a professor teaching it in person, study guides, and tons of fellow students to lean on and learn with together.&lt;/p&gt;

&lt;p&gt;But most people trying to learn Django through books are doing it alone. Either while on the job, switching jobs, or trying to obtain their first job as a programmer. Therefore my short answer to the question is, &lt;strong&gt;Finish the book and then look at the footnotes after&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The footnotes mainly refer to the &lt;a href=&quot;https://docs.djangoproject.com/en/4.0/&quot;&gt;comprehensive Django docs&lt;/a&gt; which are excellent but utterly massive. They are also somewhat terse in spots. If you have a specific question they can answer it. But they don’t hold your hand through a project or provide all the context you’d need in a tutorial or book. And that’s fine: they are exceptionally well-written docs done by the community. But beginners often need more. They need context &lt;em&gt;and&lt;/em&gt; the docs to help fill things in.&lt;/p&gt;

&lt;p&gt;I often link to the docs as a way to fill in understanding because when starting out everything feels like magic. It &lt;em&gt;does&lt;/em&gt; feel like I just pull something out of the hat because most issues a developer faces are far from new if you have experience. And Django, being batteries-included, has a solution in most general cases. But until a developer has tackled and struggled with these common issues–by building or working on projects–the insights won’t stick.&lt;/p&gt;

&lt;h2 id=&quot;how-to-ask-for-help&quot;&gt;How To Ask For Help&lt;/h2&gt;
&lt;p&gt;After completing the books, a reader might feel like they’re swimming in the deep ocean of Django web development and not know where to turn when stuck. This is a universal experience. A key skill to develop is knowing how and when to ask for help.&lt;/p&gt;

&lt;p&gt;There are several public and free places to ask for assistance on Django:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forum.djangoproject.com/&quot;&gt;Official Django Forum&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://groups.google.com/g/django-users?pli=1&quot;&gt;django-users Google group&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;StackOverflow&lt;/li&gt;
  &lt;li&gt;Reddit/Discord/etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’d personally recommend the first two and the Forum in particular. The Forum is underused in my opinion and has many Django experts on there willing to assist if you ask for help.&lt;/p&gt;

&lt;p&gt;A key thing is to &lt;strong&gt;ask a good question&lt;/strong&gt;. How do you do that?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;concisely state the issue. For example, how do I specify the template in CreateView?&lt;/li&gt;
  &lt;li&gt;try to avoid open-ended or long questions. Be specific about what you want to achieve.&lt;/li&gt;
  &lt;li&gt;mention previous steps you’ve taken, maybe with code, or at least explain what you know/don’t know. This helps someone answer at your level.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can do those 3 things you’ll likely receive good responses. Don’t feel bad about asking questions as long as you’ve done some work yourself before and are truly stuck. For beginners, I’d say if you’re still stuck after a day and a sleep, ask for help. There’s no need to be stuck for days on end the way I often was starting out.&lt;/p&gt;

&lt;h2 id=&quot;document-your-learning&quot;&gt;Document Your Learning&lt;/h2&gt;
&lt;p&gt;On this thread of learning Django, there is a truism that to truly understand a subject you should approach it in three ways: learn it, use it, and then teach it. Creating a personal blog to document Django things is a great way to reinforce learning. It’s also a good way to build your name in the community and point companies to if you’re looking to be hired.&lt;/p&gt;

&lt;h2 id=&quot;django-resources&quot;&gt;Django Resources&lt;/h2&gt;
&lt;p&gt;There are a host of free Django resources online that are worth trying if you are serious about learning Django. Past &lt;a href=&quot;https://www.youtube.com/c/DjangoConUS&quot;&gt;DjangoCon US talks&lt;/a&gt; are a literal treasure trove of good advice. The same is true for &lt;a href=&quot;https://www.youtube.com/user/djangoconeurope&quot;&gt;DjangoCon Europe&lt;/a&gt; and also the various PyCons around the world.&lt;/p&gt;

&lt;p&gt;Podcasts are a good way to surround yourself with how Django developers talk and think. I host one called &lt;a href=&quot;https://djangochat.com&quot;&gt;Django Chat&lt;/a&gt; along with Django Fellow Carlton Gibson. There is also &lt;a href=&quot;https://www.mattlayman.com/django-riffs/&quot;&gt;Django Riffs&lt;/a&gt; by Matt Layman, &lt;a href=&quot;https://anchor.fm/djangogirls/episodes/Pilot-e1c45et&quot;&gt;Django Girls podcast&lt;/a&gt;, &lt;a href=&quot;https://runninginproduction.com/&quot;&gt;Running in Production&lt;/a&gt;, and periodic Django-specific episodes on &lt;a href=&quot;https://talkpython.fm/&quot;&gt;TalkPython&lt;/a&gt;, &lt;a href=&quot;https://www.pythonpodcast.com/&quot;&gt;Podcast.&lt;strong&gt;init&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://realpython.com/podcasts/rpp/&quot;&gt;Real Python Podcast&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The best resource is going to physical meetups around Python and Django. This is admittedly challenging during the current Covid times and also hard for developers who might be somewhat introverted. But it is well worth it. Often these meetups have talks and then time after for questions and meeting fellow developers. Even I have to sometimes psych myself up to attend such events but I’m always glad I did.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;One of the best things about Django is the community. It is filled with knowledgeable people who enjoy helping others. Do your best to work through books, tutorials, and videos you find but know that when it comes time to create your own code it’s likely you’ll have many questions. Don’t suffer in silence. Ask for help online. Attend meetups. And know that the path you’re on has already been treaded by every experienced Django developer too.&lt;/p&gt;</content><author><name></name></author><summary type="html">A reader recently asked me a very insightful question that I responded to via email but wanted to repeat publicly here. He noted that by the end of Django for Beginners he was slowly grasping the ideas of urls, views, templates, and models. But every now and then, when we needed something new in the book, “you wave your wand and pull a new Django thing out of the hat. And then refer to more learning about them in the docs.”</summary></entry><entry><title type="html">Django for Beginners 3.2 Update</title><link href="https://wsvincent.com/django-for-beginners-32-update/" rel="alternate" type="text/html" title="Django for Beginners 3.2 Update" /><published>2021-11-01T06:56:06-04:00</published><updated>2021-11-01T06:56:06-04:00</updated><id>https://wsvincent.com/django-for-beginners-32-update</id><content type="html" xml:base="https://wsvincent.com/django-for-beginners-32-update/">&lt;p&gt;Today I’m launching the 3.2 update to my Django for Beginners book. I wanted to list all the new updates in one place for anyone who is curious. I first published this book in 2018 and have updated it for every edition since then: 1.11, 2.0, 2.1, 3.0, 3.1, and now 3.2. For every update I go through all the code from scratch with the latest version of Django and Python. Often I update descriptions of concepts I know readers are struggling with and usually add code that has been requested.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://djangoforbeginners.com&quot;&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/books/dfb_32.jpg&quot; alt=&quot;DFB 3.2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;whats-new-for-32&quot;&gt;What’s New for 3.2&lt;/h2&gt;
&lt;p&gt;In bulleted format here is what’s new in the 3.2 update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Django 3.2 and Python 3.10 throughout&lt;/li&gt;
  &lt;li&gt;Switched to Pip from Pipenv, which is a major change but feels warranted given Pipenv has slowed in development and Pip is the default for many people. I don’t get into fancier configuration options because “it all depends” once you do and using Pip is fine for a single developer starting out.&lt;/li&gt;
  &lt;li&gt;Windows-first support. I bought a &lt;a href=&quot;https://amzn.to/3moxolx&quot;&gt;Microsoft Surface laptop&lt;/a&gt; and have been dutifully using it several days a week. I still greatly prefer macOS but most of the world uses Windows so I have run through all the code and updated the text to ensure Windows works well.&lt;/li&gt;
  &lt;li&gt;Updated all the third-party packages to the latest versions, which means &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django-allauth&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gunicorn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psycopg&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whitenoise&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crispy-forms&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Updated Bootstrap to 5.1.&lt;/li&gt;
  &lt;li&gt;Added a comments form section to the newspaper app, which has been highly requested. This was slightly tricky and I explain why in the book. The downside of generic class-based views is it can be hard to understand the full inheritance chain when you want to tweak them.&lt;/li&gt;
  &lt;li&gt;Added a section discussing function-based views and some examples.&lt;/li&gt;
  &lt;li&gt;Switched the default project name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django_project&lt;/code&gt; to avoid any confusion among readers.&lt;/li&gt;
  &lt;li&gt;Switch from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python -m pip install&lt;/code&gt; because &lt;a href=&quot;https://adamj.eu/tech/2020/02/25/use-python-m-pip-everywhere/&quot;&gt;Adam Johnson said to&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;All new screenshots since Chrome updates even more often than Django.&lt;/li&gt;
  &lt;li&gt;Switch to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; for Git branch.&lt;/li&gt;
  &lt;li&gt;Added static files to an otherwise empty &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;static/&lt;/code&gt; folder that wasn’t being picked up by Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a separate lengthy post I could write about the book writing/editing/publishing process but I’m not sure how interesting that would be to everyone!&lt;/p&gt;

&lt;h2 id=&quot;the-future&quot;&gt;The Future&lt;/h2&gt;
&lt;p&gt;If you purchased the book via Gumroad you will receive an email and access to the update. Unfortunately I’m unable to contact or update readers who bought ebooks from other vendors or from Amazon.&lt;/p&gt;

&lt;p&gt;Django 4.0 will be released in early December so I’ll need to go through this process again. It should be a shorter process though as Django is relatively mature and Python will still be on 3.10. I don’t envision anywhere near the same amount of updates to the text but can only say for sure once I’ve gone through all the code with the final 4.0 Django release.&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I’m launching the 3.2 update to my Django for Beginners book. I wanted to list all the new updates in one place for anyone who is curious. I first published this book in 2018 and have updated it for every edition since then: 1.11, 2.0, 2.1, 3.0, 3.1, and now 3.2. For every update I go through all the code from scratch with the latest version of Django and Python. Often I update descriptions of concepts I know readers are struggling with and usually add code that has been requested.</summary></entry><entry><title type="html">Updating My Home Internet to 1.2Gb</title><link href="https://wsvincent.com/updating-my-home-internet/" rel="alternate" type="text/html" title="Updating My Home Internet to 1.2Gb" /><published>2021-07-25T06:56:06-04:00</published><updated>2021-07-25T06:56:06-04:00</updated><id>https://wsvincent.com/updating-my-home-internet</id><content type="html" xml:base="https://wsvincent.com/updating-my-home-internet/">&lt;p&gt;I recently updated my internet and the process was just as frustrating in 2021 as it has been every other time in my life going back almost 20 years now. To save others some time I thought I’d share the shortcut steps and gear I used to achieve internet speeds close to 1Gb currently.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/internet-speed/speed.png&quot; alt=&quot;Internet Speed&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;xfinitycomcast&quot;&gt;XFinity/Comcast&lt;/h2&gt;
&lt;p&gt;I live near Boston, MA in an old apartment building and there is only one cable option: Comcast. They are notoriously bad but I’m stuck with them. My 2-year plan was expiring and all the options online were terrible deals. I had planned to cancel my plan and create a new one under my wife’s maiden name–which is pretty common but would be a hassle when we didn’t have internet–but luckily that wasn’t necessary.&lt;/p&gt;

&lt;p&gt;I filled out the online form to cancel, was forced to talk to an XFinity representative on the phone, and explained I didn’t want to pay for cable and wanted 1Gb internet. Was there anything they could do? I further wanted a 2-3 year deal since the 1 year deals have a lower price but then they jack up the rate after 12 months and I’d have to go through this whole ordeal over again.&lt;/p&gt;

&lt;p&gt;The price for 1.2Gb download and 35Mb upload was quite a bit less than what I was paying for 400MB of internet plus some channels I never watch. So I switched.&lt;/p&gt;

&lt;h2 id=&quot;gear&quot;&gt;Gear&lt;/h2&gt;
&lt;p&gt;Ok, here’s where I can save people some time. I had to update 3 pieces of gear to actually match the 1Gb speed coming into my home:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2V8e7tw&quot;&gt;new modem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/3rzyCes&quot;&gt;new router&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/2VbS9pu&quot;&gt;new ethernet cable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The modem must be compatible with your internet provider and I had previously used an Arris Surfboard, however it was 6 years old. I decided to future-proof and went with the &lt;a href=&quot;https://amzn.to/2V8e7tw&quot;&gt;Arris Surfboard S33&lt;/a&gt; which was $170.&lt;/p&gt;

&lt;p&gt;New I needed a new router to send the signal wifi around my apt. I went with the &lt;a href=&quot;https://amzn.to/3rzyCes&quot;&gt;Netgear ORBI RBK752&lt;/a&gt; to again future-proof myself which was $349. I had looked at the &lt;a href=&quot;https://amzn.to/3iCB93u&quot;&gt;RBK 852&lt;/a&gt; which was double the price at $675 but the main benefit is bandwidth which, for my home, I don’t need as I’m unlikely to have double digit devices connected. If I was buying a wifi router for an office I would have looked at the 852.&lt;/p&gt;

&lt;p&gt;The last step was updating my ethernet cable which is I don’t know how old. No sense getting faster internet, modem, and router if it will be slowed down by the cable. This was under $8 for &lt;a href=&quot;https://amzn.to/2VbS9pu&quot;&gt;Cat8 which is the newest standard&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Adding it all together I decreased my annual internet bill from $145 to $90, saving $660/year. The three new pieces of gear combined were $527 which is less than that. And I now have super fast speed for the next 3 years and don’t have to think about all this until then.&lt;/p&gt;

&lt;p&gt;A good question is, Do I really need 1.2Gb speed? The answer is probably no. The biggest benefit is the upload speed which has now gone from 10Mb to 35Mb for me which is helpful for processing audio and video files. But for an extra $20/month I’d rather just get the fastest speed and be done with all this. This past year we had 5 people using devices and often doing Zoom for school and work. The internet wasn’t always great. I also suffered through terrible computers and internet for the first 8 years of my career before moving into technology. Never again. It’s cheap in the end to have a fast computer and internet. I value my time so I’m more than happy to upgrade every few years. I’ll definitely waste more money on other stupid purchases related to my business so splurging on fast internet is a no-brainer all things considered.&lt;/p&gt;

&lt;p&gt;Good luck on your own upgrade journey. Do call your provider and ask for a higher speed and discounted price. And if you get it, don’t forget to make sure your modem, router, ethernet cable are up to snuff too.&lt;/p&gt;</content><author><name></name></author><summary type="html">I recently updated my internet and the process was just as frustrating in 2021 as it has been every other time in my life going back almost 20 years now. To save others some time I thought I’d share the shortcut steps and gear I used to achieve internet speeds close to 1Gb currently.</summary></entry><entry><title type="html">Python 3 Installation &amp;amp; Setup Guide</title><link href="https://wsvincent.com/install-python/" rel="alternate" type="text/html" title="Python 3 Installation &amp;amp; Setup Guide" /><published>2021-07-19T06:56:06-04:00</published><updated>2021-07-19T06:56:06-04:00</updated><id>https://wsvincent.com/install-python</id><content type="html" xml:base="https://wsvincent.com/install-python/">&lt;p&gt;Installing Python on your local computer is the first step to becoming a proper Python programmer. While you can use online tools to run Python, most serious developers still rely on a local installation to work on individual and team projects. This tutorial will show the current best practice approach for checking what version of Python, if any, is already on your machine and installing or updating Python for Windows, macOS, or Linux.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#install-python-on-windows&quot;&gt;Install Python on Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-python-on-macos&quot;&gt;Install Python on macOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-python-on-linux&quot;&gt;Install Python on Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-python-on-chromebook&quot;&gt;Install Python on Chromebook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#next-steps&quot;&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-python-on-windows&quot;&gt;Install Python on Windows&lt;/h2&gt;

&lt;p&gt;Microsoft hosts a community release of Python 3 in the Microsoft Store for computers running Windows 10+, the latest version of the operating system. This is now the recommended way to install Python: it handles auto-updates, can be uninstalled easily, and does not update PATH variables in a way that breaks other applications.&lt;/p&gt;

&lt;p&gt;To begin, click on the search bar at the bottom left of your screen and type “python.” Click on the best match result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/01_taskbar.png&quot; alt=&quot;Taskbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This automatically launches Python 3.9 on the Microsoft Store. Click on the blue “Get” button to download it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/02_store.png&quot; alt=&quot;Microsoft Store&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have a “See System Requirements” link below the Get button it’s likely you need to upgrade to Windows 10. And if you’re not logged into your Microsoft account, there will be a prompt asking if you want to sign in. It’s fine to say “No, thanks” for now.&lt;/p&gt;

&lt;p&gt;Once downloaded, click on the three dots &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt; after “Pin to Start” and click on “Pin to Taskbar” so it is always available.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/03_pin.png&quot; alt=&quot;Pin to Taskbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the pinned Python logo on the bottom taskbar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/04_taskbar_pin.png&quot; alt=&quot;Pinned Taskbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This opens up the Python IDLE. Try a simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello, World&quot;)&lt;/code&gt; command to confirm everything works:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/05_idle.png&quot; alt=&quot;Python IDLE&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is also possible to access it via the command line. On Windows, type “PowerShell” in the Start Menu search bar in the lower left corner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/06_powershell.png&quot; alt=&quot;PowerShell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This opens up the Windows PowerShell terminal which has a dark blue background. Type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python --version&lt;/code&gt; to confirm which version is installed and then the same &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello, World&quot;)&lt;/code&gt; command as before.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/windows/07_powershell_result.png&quot; alt=&quot;PowerShell result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it! You’re ready to go.&lt;/p&gt;

&lt;h2 id=&quot;install-python-on-macos&quot;&gt;Install Python on macOS&lt;/h2&gt;
&lt;p&gt;On Mac the recommended approach is to use the official &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python.org&lt;/a&gt; installer. Previously the package manager &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; was a great choice–it handled software installs and upgrades elegantly in &lt;em&gt;most&lt;/em&gt; cases–but for Python itself there are several serious issues detailed by &lt;a href=&quot;https://justinmayer.com/posts/homebrew-python-is-not-for-you/&quot;&gt;Justin Mayer in this post&lt;/a&gt;. As a result, using the official &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python.org&lt;/a&gt; installer is now a better option.&lt;/p&gt;

&lt;p&gt;Open a new browser window and visit the &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Downloads page&lt;/a&gt;. Click on the button for “Download Python 3.9.5” or whatever the latest version is.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/1_pythonsite.png&quot; alt=&quot;Python.org Website&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click “Allow” on the popup asking if you want to allow downloads from “www.python.org.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/2_allow.png&quot; alt=&quot;Python.org Popup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Open up a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Finder&lt;/code&gt; window (the keyboard shortcut of pressing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; will do this) and click on the sidebar for “Downloads.” Then doubleclick on the Python package to install it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/3_downloads.png&quot; alt=&quot;Downloads Directory&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This launches the Python Installer. Click on the “Continue” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/4_continue.png&quot; alt=&quot;Python Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next up are several screens. Click “Continue” again on the &lt;em&gt;Read Me&lt;/em&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/5_readme.png&quot; alt=&quot;Read Me page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next is the &lt;em&gt;License&lt;/em&gt; page. Click “Continue” which will launch a pop up asking if you agree to the terms. Click on “Agree.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/6_license.png&quot; alt=&quot;License Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The standard install will save Python to your disk. Click on the “Install” button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/7_install.png&quot; alt=&quot;Install Window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will launch another pop-up asking for your password. Enter it and click “Install Software.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/8_password.png&quot; alt=&quot;Install Software&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After installation is a Summary window. You can hit the “Close” button on this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/9_close.png&quot; alt=&quot;Summary Window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A popup will ask if you want to move the Python installer to the trash. Click on “Move to Trash” as we no longer need the installer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/10_trash.png&quot; alt=&quot;Move to Trash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There will also be a new Finder window opened with the Python 3.9 package.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/11_done.png&quot; alt=&quot;Finder Window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The simplest way to use Python is via the built-in IDLE. Click on the link for IDLE which launches a new Shell. You can type any command here such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello, World&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/12_idle.png&quot; alt=&quot;IDLE&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also now access Python from the command line. Open up the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; application which is located within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Applications&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Utilities&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/13_terminal.png&quot; alt=&quot;Terminal window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once open, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3&lt;/code&gt; to launch the Python interpreter from the command line. When you see the prompt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; you know it is working. To confirm, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello, World&quot;)&lt;/code&gt; again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/mac/14_terminal_hw.png&quot; alt=&quot;Terminal with Hello World&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-python-on-linux&quot;&gt;Install Python on Linux&lt;/h2&gt;
&lt;p&gt;Python is usually installed by default on most modern Linux systems. To check what your currently have, open a terminal and run the following command (note the dollar sign &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; is the beginning of the prompt and should not be included!):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python --version
Python 3.9.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you see a version of Python starting with a 2, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python 2.7.10&lt;/code&gt;, then try the same command using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python3 --version
Python 3.9.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The latest version of Python is 3.9 (as of this writing) but generally 3.6+ will provide modern features, such as f-strings and async/await, that are widely used. There are many installation options on Linux but perhaps the simplest is to use &lt;a href=&quot;https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa&quot;&gt;deadsnakes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Within your terminal enter the following three commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:deadsnakes/ppa
$ sudo apt-get update
$ sudo apt install python3.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will install Python 3.9 and a new Python session can be started by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3.9&lt;/code&gt; from the terminal:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python3.9
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-python-on-chromebook&quot;&gt;Install Python on Chromebook&lt;/h2&gt;

&lt;p&gt;A Chromebook runs &lt;a href=&quot;https://en.wikipedia.org/wiki/Chrome_OS&quot;&gt;ChromeOS&lt;/a&gt; as its operating system and historically running anything other than a web app–such as Python–was challenging.&lt;/p&gt;

&lt;p&gt;However, that is no longer the case! You can now run &lt;a href=&quot;https://support.google.com/chromebook/answer/9145439?hl=en&quot;&gt;Linux apps on ChromeOS&lt;/a&gt; which opens the door to using &lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;MiniConda&lt;/a&gt; to install Python 3.&lt;/p&gt;

&lt;p&gt;Make sure you are logged in first. These steps won’t work if you’re still in Guest mode!&lt;/p&gt;

&lt;p&gt;Open your Chromebook’s &lt;a href=&quot;chrome://settings&quot;&gt;system settings&lt;/a&gt; by clicking on the Time in the lower right corner and then the Gear icon for Settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/time_icon.png&quot; alt=&quot;Time Icon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scroll down to “Linux (Beta)” and select &lt;strong&gt;Turn On&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/linux_beta.png&quot; alt=&quot;Linux Beta&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the prompts and at the end a Terminal window will open. You can run Linux commands here. (Tip: pin it to the dock for easy access).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/terminal.png&quot; alt=&quot;Terminal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;MiniConda&lt;/a&gt; is a free distribution of Python that works on Linux computers. It provides a basic implementation of Python and the ability to add additional packages manually as needed. Since disk space is at a premium, we will use this as opposed to Anaconda, its full-featured cousin, which includes many Python packages like numpy, scipy, and ipython notebook automatically.&lt;/p&gt;

&lt;p&gt;Navigate to the &lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;MiniConda&lt;/a&gt; site, scroll down to the “Linux installers” section, and click on the link for 64-bit version of Python 3.8.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/64_bit_download.png&quot; alt=&quot;64 Bit Download&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once downloaded, click on the “Confirm download” pop-up and select “Keep”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/confirm_download_keep.png&quot; alt=&quot;Keep Download&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s &lt;strong&gt;very important&lt;/strong&gt; to now move the installer into the “Linux files” section of your computer. Open up your files by clicking on the Launcher button in the lower left corner, then the Up arrow, and then Files under the search bar. The file will be named something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Miniconda3-latest-Linux-x86_64.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/downloads.png&quot; alt=&quot;Downloads&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Drag it from &lt;em&gt;Downloads&lt;/em&gt; into the &lt;em&gt;Linux Files&lt;/em&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/linux_files.png&quot; alt=&quot;Linux Files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Open the Terminal app from the Start area.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/terminal_open.png&quot; alt=&quot;Terminal Open&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Confirm that the Miniconda installer is in your current directory by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/ls.png&quot; alt=&quot;ls&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then to install it run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo bash Miniconda3-latest-Linux-x86_64.sh&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash Miniconda3-latest-Linux-x86_64.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There will be a prompt to review the license. Click Enter to continue:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/review_license.png&quot; alt=&quot;Review License&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;On the final step, you’ll be asked: “Do you accept the license terms? [yes&lt;/td&gt;
      &lt;td&gt;no]”. Type in “yes” and press Enter.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/license_terms.png&quot; alt=&quot;License Terms&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step asks where to install Miniconda. The default suggested is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/root/miniconda3&lt;/code&gt; however I prefer to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/miniconda3&lt;/code&gt; instead which is a directory commonly used for installing unbundled software packages. So type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/miniconda3&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/opt_miniconda.png&quot; alt=&quot;Opt Miniconda&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;When asked, “Do you wish the installer to initialize MiniConda3 by running conda init? [yes&lt;/td&gt;
      &lt;td&gt;no]” type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/initialize.png&quot; alt=&quot;Initialize&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we’re done! The instructions will note that closing and re-opening the Terminal app is required. Do so.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/install_done.png&quot; alt=&quot;Install Done&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Set the proper permissions for the directory so that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conda&lt;/code&gt; can add/remove software packages. Make sure to replace my username, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;williamsvincent&lt;/code&gt;, with yours which is found at the beginning of the prompt before &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@penguin&lt;/code&gt;. Also note that if you did not use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/miniconda3&lt;/code&gt; path for installing your miniconda, but rather deferred to the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root/miniconda3&lt;/code&gt;, you will have to replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opt&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; in the command below.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; williamsvincent /opt/miniconda3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/sudo_chown.png&quot; alt=&quot;Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To run Conda–and by extension Python–enter a base environment by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source /opt/miniconda3/bin/activate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/activate.png&quot; alt=&quot;Activate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The new parentheses at the start of the prompt called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(base)&lt;/code&gt; confirm the environment is active. To confirm the installed Python version, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python --version&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 3.9.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/python_version.png&quot; alt=&quot;Python Version&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And then to enter Python itself, simply type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/chromebook/python_conda.png&quot; alt=&quot;Python Conda&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;Two excellent beginner-friendly Python books are &lt;a href=&quot;https://amzn.to/3dGYTRe&quot;&gt;Python Crash Course&lt;/a&gt; and &lt;a href=&quot;https://amzn.to/366CebJ&quot;&gt;Automate the Boring Stuff&lt;/a&gt;. If you’d like to learn web development with Python, check out &lt;a href=&quot;https://learndjango.com&quot;&gt;Learn Django&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://amzn.to/3dGYTRe&quot;&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/pcc_book.jpg&quot; alt=&quot;Python Crash Course book&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://amzn.to/3hgDAd9&quot;&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/install-python/automate_book.jpg&quot; alt=&quot;Automate the Boring Stuff book&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><summary type="html">Installing Python on your local computer is the first step to becoming a proper Python programmer. While you can use online tools to run Python, most serious developers still rely on a local installation to work on individual and team projects. This tutorial will show the current best practice approach for checking what version of Python, if any, is already on your machine and installing or updating Python for Windows, macOS, or Linux.</summary></entry><entry><title type="html">Year in Review (2020)</title><link href="https://wsvincent.com/year-in-review-for-2020/" rel="alternate" type="text/html" title="Year in Review (2020)" /><published>2020-12-18T05:28:42-05:00</published><updated>2020-12-18T05:28:42-05:00</updated><id>https://wsvincent.com/year-in-review-for-2020</id><content type="html" xml:base="https://wsvincent.com/year-in-review-for-2020/">&lt;p&gt;I think I join most of us in being thankful that 2020 is largely over. Comparing this Year in Review to my previous ones in &lt;a href=&quot;http://wsvincent.com/year-in-review-for-2018/&quot;&gt;2018&lt;/a&gt; and &lt;a href=&quot;http://wsvincent.com/year-in-review-for-2019/&quot;&gt;2019&lt;/a&gt; it’s clear that I was not particularly productive professionally. Some of this was planned pre-Covid–my wife and I welcomed our third child into the world at the end of February–but whatever relaxing parenting I had in mind, in a world with in-person school, childcare, and all the rest–quickly went out the window. I live in an urban setting (next to Boston) and so having 3 little kids in a small apartment when you’re fearful of going outside has not been a picnic.&lt;/p&gt;

&lt;p&gt;On the other hand, 2020 has been a chance for me to really consider and express gratitude for the fact that I’m a software developer in a world where entire industries are being decimated. I can work from anywhere there is internet, which currently means my bedroom. Most people are not as fortunate. And in part because I came to my current field in technology later in life, I’m constantly thinking about ways to spread knowledge and access to programming to others. There’s little innately special about a programmer other than opportunity, whether that’s the ability to have your own computer, time to program, access to resources, mentors, or classes.&lt;/p&gt;

&lt;p&gt;As much as I focus on curriculum and content, I’m very aware that it is these larger issues currently taking shape in my own children’s education: access to computers, adults who can supervise, internet, structured time, that are the big limits on exposing technology in general and programming in particular to more people.&lt;/p&gt;

&lt;p&gt;And at least in my country, the United States, it’s clear our leaders need to change&lt;/p&gt;

&lt;p&gt;But as part of closing the book on 2020, here’s a look at what I actually &lt;em&gt;did&lt;/em&gt; do and then my goals for 2021 assuming the world resumes some sense of normalcy.&lt;/p&gt;

&lt;h2 id=&quot;1-books&quot;&gt;1. Books&lt;/h2&gt;
&lt;p&gt;I published two books in 2018 and one in 2019 which means I now have 3 titles that require constant maintenance and upgrades to keep pace with Django’s rapid release cycle. Django 3.0 was released in December of 2019 so I spent much of that month–which bleeds into 2020–updating them appropriately. Because all three books proceed step-by-step through projects and concepts I can’t just update one small part; the entire book and its underlying code needs a refresh.&lt;/p&gt;

&lt;p&gt;I’ve really tried to view these forced updates as a chance to look at the code and my prose with somewhat fresh eyes. To constantly improve things. Go through all the code from scratch. And I think that largely works. Though it takes a tremendous amount of time to update code, text, versions, and all the rest while answering reader questions about things that have changed in their previous versions of the books.&lt;/p&gt;

&lt;p&gt;In August of 2020, Django 3.1 was released and I went through the whole process again. I’m not sure I can save much time here and farming the work out to someone else means I’m not as knowledgeable about all the changes. But it is a tremendous time sink for me as a creator. The parachute of updates and maintenance makes it challenging for me–and any other Django content person–to create new material.&lt;/p&gt;

&lt;h2 id=&quot;2-learndjangocom&quot;&gt;2. LearnDjango.com&lt;/h2&gt;
&lt;p&gt;I launched this site in 2020 and have redirected most of the Django-related contents from my personal site, wsvincent.com, over to it. This has resulted in a pretty massive hit to my SEO even with 301 Redirects. So that’s not great. But I have plans for the site to be Django-only, to have structured learning paths, eventually video, and online versions of the books so content is always available to readers.&lt;/p&gt;

&lt;p&gt;I’m close to launching a design refresh with Tailwind CSS, which has been a fun project. And fully launching the books online is something I desperately want to do before Django 3.2 is released next spring. Fingers crossed on this one.&lt;/p&gt;

&lt;h2 id=&quot;3-django-chat-podcast&quot;&gt;3. &lt;a href=&quot;https://djangochat.com&quot;&gt;Django Chat Podcast&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After 72 straight weeks of releasing a new episode, Carlton Gibson (my co-host and current Django Fellow) and I took a two-month break over the summer. This was much needed. We both have large families and the podcast doesn’t make any revenue for us at this point: no ads or sponsors. So we’ve switched for now to a fortnightly release schedule which makes things much more manageable.&lt;/p&gt;

&lt;p&gt;Highlights from the fall included having &lt;a href=&quot;https://djangochat.com/episodes/teaching-python-michael-kennedy&quot;&gt;Michael Kennedy on to discuss teaching Python&lt;/a&gt;, Carl Meyer to talk about &lt;a href=&quot;https://djangochat.com/episodes/django-instagram-carl-meyer&quot;&gt;Django at Instagram&lt;/a&gt;, fellow DSF Board Member &lt;a href=&quot;https://djangochat.com/episodes/mongodb-aaron-bassett&quot;&gt;Aaron Bassett to discuss MongoDB&lt;/a&gt;, and more.&lt;/p&gt;

&lt;p&gt;Like most podcast hosts we saw a significant dip in traffic after Covid as commutes went away for many listeners. We’re roughly back to where we were at the beginning of the year despite only releasing every two weeks: ~1,500 listens per new episode per week with another ~1,500 listens to back episodes.&lt;/p&gt;

&lt;p&gt;I produce the podcast and feel pretty comfortable with that flow these days. I should write an updated post on it all for others thinking of doing the same.&lt;/p&gt;

&lt;h2 id=&quot;4-django-news-newsletter&quot;&gt;4. &lt;a href=&quot;https://django-news.com/&quot;&gt;Django News Newsletter&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://jefftriplett.com/about/&quot;&gt;Jeff Triplett&lt;/a&gt; and I launched the &lt;a href=&quot;https://django-news.com/&quot;&gt;Django News newsletter&lt;/a&gt; at the end of 2019 which is now on issue 54. It’s a weekly recap of Django-related news, articles, tutorials, and projects which was lacking in the community. It now reaches over 1,500 Django developers and has an open rate of over 60% which is apparently quite high in the newsletter realm. &lt;a href=&quot;https://django-news.com/sponsorship&quot;&gt;Sponsorships&lt;/a&gt; are available and have allowed us to cover the costs of the hosting platform at least. Hopefully this newsletter will continue to grow in 2021 as I’m not aware of a similar resource for Django-related stuff.&lt;/p&gt;

&lt;h2 id=&quot;5-django-software-foundation&quot;&gt;5. Django Software Foundation&lt;/h2&gt;
&lt;p&gt;I served on the Board as Treasurer this year and was recently elected to another term (thank you DSF Members). This was a great opportunity for me and also took up quite a lot of time. I’ve written a detailed post on &lt;a href=&quot;http://wsvincent.com/a-year-in-the-life-of-a-dsf-board-member/&quot;&gt;DSF Board duties&lt;/a&gt;, but highlights included standardizing the Treasurer role, launching the &lt;a href=&quot;https://django.threadless.com/&quot;&gt;official Django merchandise shop&lt;/a&gt;, launching GitHub sponsors, and releasing the first &lt;a href=&quot;https://www.djangoproject.com/weblog/2020/jul/28/community-survey-2020/&quot;&gt;Django Survey&lt;/a&gt; in years.&lt;/p&gt;

&lt;p&gt;Frank Wiles was an excellent President these past 5 years and I’m excited to see how things will unfold now that &lt;a href=&quot;https://www.djangoproject.com/foundation/&quot;&gt;Anna Makarudze&lt;/a&gt; is the new President for 2021.&lt;/p&gt;

&lt;p&gt;My main goal is to add more support for corporate sponsors to help them receive more recognition for their contributions and to shore up the DSF’s finances. The annual operating budget is only $200,000 and there is less than a year’s worth of cash on hand so this is worthy of attention.&lt;/p&gt;

&lt;h2 id=&quot;6-wsvincentcom&quot;&gt;6. wsvincent.com&lt;/h2&gt;
&lt;p&gt;Most of my focus this year was on LearnDjango.com and not this site, however I still wrote a half dozen posts and updated many of the older ones. I need to sort out what to do with this site longer term as I bifurcate Django content from everything else. Long term I’d like to create content on Python, JavaScript, HTML/CSS, SQL, etc so either I’ll do that here or on another dedicated site. We’ll see.&lt;/p&gt;

&lt;h2 id=&quot;7-open-source&quot;&gt;7. Open Source&lt;/h2&gt;
&lt;p&gt;I didn’t create much new open source but I did devote time to maintaining my existing projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wsvincent/awesome-django&quot;&gt;awesome-django&lt;/a&gt; now has 3.3k stars and Jeff Triplett joined on as a co-maintainer which has made it much more manageable for me.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wsvincent/djangox&quot;&gt;DjangoX&lt;/a&gt; has almost 900 stars and is my starter project with built-in authentication, static files, Docker, and all the rest. I have thoughts of making a premium version that is fully kitted out but I’m not sure I need another small project on my plate to maintain, even if profitable. We’ll see&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wsvincent/drfx&quot;&gt;DRFx&lt;/a&gt; is my Django REST Framework starter project which was updated and still chugs along.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://installpython3.com/&quot;&gt;installpython3.com&lt;/a&gt; continues to grow in traffic and is open source on GitHub. Installing Python is a nightmare, still, so I hope this site helps newcomers and professionals see an opinionated take on how to get it installed and move on with things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve become much better at batching my contributions to these projects a few times a month rather than reacting to the daily trip of requests and updates that any open source maintainer faces. Feels sustainable for now.&lt;/p&gt;

&lt;h2 id=&quot;looking-ahead-to-2021&quot;&gt;Looking ahead to 2021&lt;/h2&gt;

&lt;p&gt;It’s hard to make any concrete plans for 2021 other than to hope for continued health for both my immediate family and everyone else in the world. I’m looking forward to another year on the DSF Board, improving LearnDjango.com, and continuing with both the podcast and newsletter.&lt;/p&gt;

&lt;p&gt;Beyond that, I have plans and the equipment to launch a whole slew of Django-related videos which I hope will come to pass. I also have a book on Python I’ve been working on for a few years so that will likely compete with the videos for my attention when it comes to new content.&lt;/p&gt;

&lt;p&gt;Bigger picture I’m trying to maintain some semblance of normality for my three young children and so that will take up most of my available time. If I can tread water professionally in 2021 I’ll be happy. I’d love to do more but it’s hard to say. I miss seeing Django developers at conferences and there’s some chance that will happen in the fall but… who knows.&lt;/p&gt;

&lt;p&gt;If you’ve made it to the end of this post, thanks for reading. I write these year-end reviews mainly for myself but hopefully it provides some insight into what I’m up to. I wish you all well in the coming year.&lt;/p&gt;</content><author><name></name></author><summary type="html">I think I join most of us in being thankful that 2020 is largely over. Comparing this Year in Review to my previous ones in 2018 and 2019 it’s clear that I was not particularly productive professionally. Some of this was planned pre-Covid–my wife and I welcomed our third child into the world at the end of February–but whatever relaxing parenting I had in mind, in a world with in-person school, childcare, and all the rest–quickly went out the window. I live in an urban setting (next to Boston) and so having 3 little kids in a small apartment when you’re fearful of going outside has not been a picnic.</summary></entry><entry><title type="html">Learn Tailwind CSS - A Beginner’s Guide</title><link href="https://wsvincent.com/learn-tailwind-css-beginners-guide/" rel="alternate" type="text/html" title="Learn Tailwind CSS - A Beginner’s Guide" /><published>2020-11-23T03:28:42-05:00</published><updated>2020-11-23T03:28:42-05:00</updated><id>https://wsvincent.com/learn-tailwind-css-beginners-guide</id><content type="html" xml:base="https://wsvincent.com/learn-tailwind-css-beginners-guide/">&lt;p&gt;This is a beginner-friendly guide to using &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;, a relatively new but immensely popular and likely game-changing CSS framework. Tailwind adopts a utility-first approach which makes it easy to customize and even easier to maintain as a project’s CSS grows in size.&lt;/p&gt;

&lt;p&gt;CSS itself is difficult to manage in large projects and this is further exacerbated by traditional CSS frameworks, like Bootstrap, Foundation, and others which come with a long library of predefined components for common items like buttons, nav bars, footers, and so on. In short, CSS quickly becomes a mess: hard to write, hard to reason about, and even harder to update.&lt;/p&gt;

&lt;p&gt;Tailwind solves many of these challenges by taking a lower-level approach: providing CSS helper classes that can be used to create and customize any design. It’s best to see this in action though by giving Tailwind a spin yourself.&lt;/p&gt;

&lt;p&gt;Unfortunately, &lt;a href=&quot;https://tailwindcss.com/docs/installation&quot;&gt;installing Tailwind CSS&lt;/a&gt; can be quite challenging as the official guide makes clear. While you might need all the bells and whistles for a full-fledged project, most of Tailwind can be used via a CDN and a single HTML file. This guide starts off showing how to use the CDN approach, then moves on to the full Node and everything else option after that.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#tailwind-play&quot;&gt;Tailwind Play&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cdn&quot;&gt;CDN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#postcss-plugin&quot;&gt;PostCSS Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tailwind-play&quot;&gt;Tailwind Play&lt;/h2&gt;
&lt;p&gt;The simplest way to try out Tailwind is to use its interactive web browser mode over on &lt;a href=&quot;https://play.tailwindcss.com/&quot;&gt;Tailwind Play&lt;/a&gt;. This allows for updates to an existing HTML page and visualizes the changes. It’s a great first step along with the &lt;a href=&quot;https://tailwindcss.com/docs&quot;&gt;Tailwind docs&lt;/a&gt; to try out various features and the general Tailwind approach.&lt;/p&gt;

&lt;h2 id=&quot;cdn&quot;&gt;CDN&lt;/h2&gt;
&lt;p&gt;The second easiest approach–and the one I’d recommend starting with–is to use Tailwind CDN in a single HTML file. That way you have full control and can mimic a real-world development experience.&lt;/p&gt;

&lt;p&gt;To start, create a new folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind-cdn&lt;/code&gt; and navigate into it. Then create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir tailwind-cdn
$ touch index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s begin with a basic HTML5 template that will just have a div, a headline, and some paragraph text.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From your command line, since you are in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind-cdn&lt;/code&gt; folder, you can open this file in a web browser actually. So do that!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ open index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/static_html.png&quot; alt=&quot;Static HTML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To add the Tailwind CDN all we have to do is update our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section with the following line:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is what the complete updated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file should look like.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you save the file changes and refresh your web browser you’ll see that all formatting was stripped.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/just_tailwind.png&quot; alt=&quot;Static HTML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our text is pretty cramped on the current webpage, no? It would be nice to add some margin padding horizontally to the sides of our text and vertically in between the text itself.&lt;/p&gt;

&lt;p&gt;To add side padding to our existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;/code&gt; we merely add the class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mx-5&lt;/code&gt; so it becomes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div class=&quot;container mx-5&quot;&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m&lt;/code&gt; stands for margin&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; means apply to the x-axis&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt; represents the relative unit length which is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units&quot;&gt;rem&lt;/a&gt; for Tailwind&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The same logic applies for adding vertical padding to the text within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags which becomes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;my-5&quot;&amp;gt;&lt;/code&gt;, albeit using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; for the y-axis instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; for the x-axis.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container mx-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Refresh your web page again and you’ll see both the horizontal and vertical margins now added.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/p_my.png&quot; alt=&quot;P w/ MY&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s continue on by using Tailwind CSS to update the font for our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; text. To control the size, we’ll add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-2xl&lt;/code&gt; and to make the font bold we’ll add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font-bold&lt;/code&gt;. The updated class is therefore: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1 class=&quot;text-2xl font-bold&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is the complete code:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container mx-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-2xl font-bold&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Refresh your webpage again and you’ll see the changes in action.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/h1.png&quot; alt=&quot;H1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One more example to demonstrate Tailwind CSS in action is around styling buttons. In our case, let’s add a “Sign up here!” button in blue that turns darker blue upon over. The code looks like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container mx-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-2xl font-bold&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-white font-bold bg-blue-600 hover:bg-blue-800 py-2 px-4 rounded&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      Button!
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order Tailwind is doing the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-white&lt;/code&gt; sets the font text to white&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font-bold&lt;/code&gt; sets the font to bold&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bg-blue-600&lt;/code&gt; sets the background color to blue with the 600 shade&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hover:bg-blue-800&lt;/code&gt; sets the hover background color to darker blue (800)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py-2&lt;/code&gt; sets the vertical padding (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py&lt;/code&gt;) to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt; rems&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;px-4&lt;/code&gt; sets the horizontal padding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;px&lt;/code&gt;) to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt; rems&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rounded&lt;/code&gt; makes the button edges rounded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save your changes and refresh the webpage to see the changes in action:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/button.png&quot; alt=&quot;Button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And voila! A lightning fast introduction to Tailwind and a taste for its new approach to writing CSS.&lt;/p&gt;

&lt;p&gt;The CDN option is a great way to get started but it has some limitations &lt;a href=&quot;https://tailwindcss.com/docs/installation#using-tailwind-via-cdn&quot;&gt;as noted in the docs&lt;/a&gt;. The recommended approach is to use Tailwind as a PostCSS plugin to take advantage of all its features. We’ll cover that in the next section.&lt;/p&gt;

&lt;h2 id=&quot;postcss-plugin&quot;&gt;PostCSS Plugin&lt;/h2&gt;

&lt;p&gt;Tailwind CSS is ultimately a PostCSS plugin so to get the most of out Tailwind in terms of features and performance, it should be run as such. Doing so requires a little more setup than using a CDN but it’s very doable. Tailwind creator Adam Wathan released a &lt;a href=&quot;https://youtu.be/21HuwjmuS7A&quot;&gt;YouToube series in 2019&lt;/a&gt; on this setup. These notes have a few updates but largely mimic his presentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You’ll need to &lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;install npm&lt;/a&gt; if you haven’t already on your local computer.&lt;/p&gt;

&lt;p&gt;To start, create a new directory on your computer and enter into it. I’ve decided to call mine &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind-fun&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir tailwind-fun
$ cd tailwind-fun
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first step is to create a basic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, which can be done with following command from your Terminal:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm init -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My resulting file looks as follows:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;wailwind-fun&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ISC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwindcss&lt;/code&gt; as well as some tools to help process CSS through a chain of PostCSS plugins including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postcss&lt;/code&gt; itself, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postcss-cli&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autoprefixer&lt;/code&gt; which automatically adds vendor plugins to your CSS prefixes.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install tailwindcss postcss postcss-cli autoprefixer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Look inside your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file which now has a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dependencies&lt;/code&gt; section with these plugins. A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt; file has also been created for the first time but you don’t need to inspect it.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwind-fun&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ISC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^10.0.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^8.1.10&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss-cli&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^8.3.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^2.0.1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to customize Tailwind later on, we’ll need a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind.config.js&lt;/code&gt; file which can be created with the following command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npx tailwind init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here’s the resulting file:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// tailwind.config.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;purge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;darkMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;variants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postcss.config.js&lt;/code&gt; file in your root directory (aka within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind-fun&lt;/code&gt; in this cas) to specify what PostCSS plugins to use. Currently, our two plugins are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwindcss&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autoprefixer&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// postcss.config.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tailwind works by looking through a CSS file for custom markers and replacing them with Tailwind’s generated code. Create a new CSS file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind.css&lt;/code&gt; within a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;css&lt;/code&gt; folder.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir css
$ touch css/tailwind.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then within the file, add three directives for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utilities&lt;/code&gt;. When our CSS is compiled through PostCSS, Tailwind will find each and replace them accordingly with Tailwind code. We’ll see what this means in a moment.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* css/tailwind.css */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last step before building Tailwind is we need a simple script to process our CSS through PostCSS plugins. In the existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt; script that uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postcss-cli&lt;/code&gt;, takes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;css/tailwind.css&lt;/code&gt; as its input file, and specifies output to a new file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/build/tailwind.css&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwind-fun&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss css/tailwind.css -o public/build/tailwind.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ISC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^10.0.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^8.1.10&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss-cli&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^8.3.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^2.0.1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now build it! On the command line run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run build&lt;/code&gt;!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm run build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A newly generated CSS file processed through PostCSS is now available in our output location. Open up the file located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/build/tailwind.css&lt;/code&gt; and take a look.&lt;/p&gt;

&lt;p&gt;This is a long, long file populated by the three directives–&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utilities&lt;/code&gt;–referenced in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind.css&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;To look at what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt; provided, look at the top of the file which includes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modern-normalize&lt;/code&gt;, a set of resets to try to normalize how all web browsers display CSS. The first 540 or so lines comes from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt; and are global resets.&lt;/p&gt;

&lt;p&gt;If you scroll down to line 549 we see a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container&lt;/code&gt; class, the solo component class injected into CSS wherever we added &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@tailwind components&lt;/code&gt;. After the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;container&lt;/code&gt; class there are a bunch classes like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appearance-none&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bg-fixed&lt;/code&gt;, etc which are simple utility classes added wherever the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@tailwind utilities&lt;/code&gt; directive was found. Note that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appearance-none&lt;/code&gt; has vendor prefixed properties such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webkit-appearance&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-moz-appearance&lt;/code&gt;, which were added by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autoprefixer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With this machinery in place, let’s create a simple HTML file and finally use Tailwind properly! Create a simple HTML file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/&lt;/code&gt; folder.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ touch public/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then fill out a basic HTML template similar to what we had in the CDN section. The only change is that we’re importing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind.css&lt;/code&gt; from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt; folder, rather than via a CDN.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- public/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/build/tailwind.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container mx-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-2xl font-bold&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hello, Tailwind!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Let's learn how to use this new CSS framework.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-white font-bold bg-blue-600 hover:bg-blue-800 py-2 px-4 rounded&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      Button!
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A nice tool to automatically reload our browser based on text changes is called &lt;a href=&quot;https://www.npmjs.com/package/live-server&quot;&gt;live-server&lt;/a&gt;. It is lightweight and can be installed globally as follows:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g live-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then point it at our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ live-server public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will bring up &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt; in your web browser where we can see the same basic text and styling as we had in the previous section. This confirms the installation of Tailwind is working!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wsvincent.com/assets/images/tailwind/button.png&quot; alt=&quot;Button&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This guide is still in-progress but I hope the setup instructions helps anyone looking to learn more about Tailwind. I’ll add more content as time allows.&lt;/p&gt;

&lt;p&gt;Note that since Tailwind does not come with a design in-and-of-itself, many developers reach for &lt;a href=&quot;https://tailwindui.com&quot;&gt;Tailwind UI&lt;/a&gt;, a set of paid pre-made UI components that can be added to a website if you aren’t a designer yourself.&lt;/p&gt;</content><author><name></name></author><category term="css" /><summary type="html">This is a beginner-friendly guide to using Tailwind CSS, a relatively new but immensely popular and likely game-changing CSS framework. Tailwind adopts a utility-first approach which makes it easy to customize and even easier to maintain as a project’s CSS grows in size.</summary></entry><entry><title type="html">The E-Myth Revisited by Michael E. Gerber - Book Review</title><link href="https://wsvincent.com/emyth-revisited-book-review/" rel="alternate" type="text/html" title="The E-Myth Revisited by Michael E. Gerber - Book Review" /><published>2020-11-16T03:28:42-05:00</published><updated>2020-11-16T03:28:42-05:00</updated><id>https://wsvincent.com/emyth-revisited-book-review</id><content type="html" xml:base="https://wsvincent.com/emyth-revisited-book-review/">&lt;div class=&quot;bookshelf-indiv&quot;&gt;
  &lt;a href=&quot;https://amzn.to/3nm3s7g&quot;&gt;
    &lt;img class=&quot;bookcover&quot; src=&quot;https://wsvincent.com/assets/images/bookreviews/emyth_revisited.jpeg&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This book is a classic that has sold over 2 million copies since first published in the 1980s. It focuses on the common problems small businesses face and the questions posed are immediately familiar to anyone who has gone down this path.&lt;/p&gt;

&lt;p&gt;Let’s start with the positives. The book spells out the three main hats any business owner must wear:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Technician&lt;/strong&gt;: the person who does the actual work, aka baking pies, writing software, etc&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manager&lt;/strong&gt;: keeps things running smoothly, hires staff as needed, juggles logistics&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Entrepreneur&lt;/strong&gt;: visionary who thinks ahead on what might be, advocating for change all the time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most entrepreneurs start out as a technician of some kind, aka you are doing the work in a business run by someone else. At some point, the thoughts occurs: Hey, I could just do this on my own and so, flush with optimism, you dive into starting your own business. After a few months, the need to take on jobs far beyond your core skill emerges and it is incredibly frustrating and draining.&lt;/p&gt;

&lt;p&gt;Gerber notes that every person has a mix of these three traits in themself–technician, manager, entrepreneur–and the trick is to recognize the necessary mix for your business and hire/delegate appropriately so you don’t become miserable. Or, as often happens, find yourself doing everything but the one thing you are good at and enjoy.&lt;/p&gt;

&lt;p&gt;The central metaphor in the book is an imagined employee called Sarah, who runs a pie shop, and has a conversation with the author about her journey. This device is, on the whole, quite cringeworthy. It’s not good writing and gets in the way of the nuggets of good advice.&lt;/p&gt;

&lt;p&gt;Gerber’s broad advice is to create systems for your business, to imagine the business itself as a product rather than whatever service is being offered. This &lt;em&gt;is&lt;/em&gt; a crucial distinction that is hard to make if you haven’t worked on your own before. To that end, he recommends ways to create a system for the business so that you, the owner, don’t have to do everything yourself.&lt;/p&gt;

&lt;p&gt;Unfortunately, the book’s age is apparent from here on out. Again, it was written in the 1980s before the internet and the “e” in the title stands for Entrepreneur, not e-commerce as must be assumed. This revised version is from 1995. The role model cited by Gerber is McDonald’s, a repeatable, franchise, “turnkey” approach. This is just super dated and not particularly relevant to today’s small businesses which must figure out how to balance online and offline effectively.&lt;/p&gt;

&lt;p&gt;Even more annoying is that there are multiple call outs in the book to refer to the author’s websites which 404 and aren’t even up anymore. As a self-published author myself, I find it insulting frankly that the publisher can’t be bothered to update these links since this version was typeset in 1995. Not to mention the call outs for additional services are cheesy and sleazy at the same time.&lt;/p&gt;

&lt;p&gt;Ultimately, I thought this book had a few nuggets of good advice for stepping beyond your own role and adopting the mindset of a small business owner. But the writing was clunky, the advice overall out of date, and the failure of the book’s text/layout to be updated at all over the past 25 years inexcusable.&lt;/p&gt;</content><author><name></name></author><category term="book" /><summary type="html"></summary></entry></feed>