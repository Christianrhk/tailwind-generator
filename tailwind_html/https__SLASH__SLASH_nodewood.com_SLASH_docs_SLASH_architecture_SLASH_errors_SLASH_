<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Error Handling | Nodewood - Node.js &amp; Vue.js SaaS Boilerplate &amp; Starter Kit</title>
    <meta name="generator" content="VuePress 1.8.0">
    <link href="https://fonts.googleapis.com/css?family=Raleway|Rubik&amp;display=swap" rel="stylesheet">
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <script>var clicky_site_ids = clicky_site_ids || []; clicky_site_ids.push(101244903);</script>
    <script async="async" src="https://static.getclicky.com/js"></script>
    <meta name="description" content="Save weeks or months of development time and start writing code now with Nodewood, a Vue.js/Node.js Javascript SaaS starter kit focused on setting you up for success.">
    
    <link rel="preload" href="/assets/css/0.styles.a1f64882.css" as="style"><link rel="preload" href="/assets/js/app.2c5c8431.js" as="script"><link rel="preload" href="/assets/js/3.97560a66.js" as="script"><link rel="preload" href="/assets/js/27.6151565d.js" as="script"><link rel="prefetch" href="/assets/js/1.e7c95f4b.js"><link rel="prefetch" href="/assets/js/10.4714bec1.js"><link rel="prefetch" href="/assets/js/11.e1c6e275.js"><link rel="prefetch" href="/assets/js/12.7d1683db.js"><link rel="prefetch" href="/assets/js/13.6ad699ae.js"><link rel="prefetch" href="/assets/js/14.98fffd60.js"><link rel="prefetch" href="/assets/js/15.75e154cd.js"><link rel="prefetch" href="/assets/js/16.e0558b03.js"><link rel="prefetch" href="/assets/js/17.2c79718e.js"><link rel="prefetch" href="/assets/js/18.01df460c.js"><link rel="prefetch" href="/assets/js/19.dcfb6177.js"><link rel="prefetch" href="/assets/js/20.7a5ebcf2.js"><link rel="prefetch" href="/assets/js/21.8e46f6a6.js"><link rel="prefetch" href="/assets/js/22.85a4fe2c.js"><link rel="prefetch" href="/assets/js/23.144f5590.js"><link rel="prefetch" href="/assets/js/24.e330e298.js"><link rel="prefetch" href="/assets/js/25.11d829d6.js"><link rel="prefetch" href="/assets/js/26.8efddb91.js"><link rel="prefetch" href="/assets/js/28.2ff0aeda.js"><link rel="prefetch" href="/assets/js/29.7d3717f8.js"><link rel="prefetch" href="/assets/js/30.2c5eca19.js"><link rel="prefetch" href="/assets/js/31.b0f778d0.js"><link rel="prefetch" href="/assets/js/32.da80e8ef.js"><link rel="prefetch" href="/assets/js/33.f36044ca.js"><link rel="prefetch" href="/assets/js/34.ca2176a9.js"><link rel="prefetch" href="/assets/js/35.486971e2.js"><link rel="prefetch" href="/assets/js/36.01f889f1.js"><link rel="prefetch" href="/assets/js/37.22720a84.js"><link rel="prefetch" href="/assets/js/38.3879083d.js"><link rel="prefetch" href="/assets/js/39.76217072.js"><link rel="prefetch" href="/assets/js/4.82b986e7.js"><link rel="prefetch" href="/assets/js/40.2f3ff916.js"><link rel="prefetch" href="/assets/js/41.d1beef0f.js"><link rel="prefetch" href="/assets/js/42.b55d7485.js"><link rel="prefetch" href="/assets/js/43.abfd8c00.js"><link rel="prefetch" href="/assets/js/44.785cabc6.js"><link rel="prefetch" href="/assets/js/45.a7ebb691.js"><link rel="prefetch" href="/assets/js/46.505af8a7.js"><link rel="prefetch" href="/assets/js/47.87e4cbfe.js"><link rel="prefetch" href="/assets/js/48.7fe633eb.js"><link rel="prefetch" href="/assets/js/49.695e374f.js"><link rel="prefetch" href="/assets/js/5.a06e35e7.js"><link rel="prefetch" href="/assets/js/50.6a044cca.js"><link rel="prefetch" href="/assets/js/51.cd34d42b.js"><link rel="prefetch" href="/assets/js/52.6c1a4410.js"><link rel="prefetch" href="/assets/js/53.1c5bba26.js"><link rel="prefetch" href="/assets/js/54.79229308.js"><link rel="prefetch" href="/assets/js/55.17556840.js"><link rel="prefetch" href="/assets/js/56.efe22f15.js"><link rel="prefetch" href="/assets/js/57.85a6201e.js"><link rel="prefetch" href="/assets/js/58.e62d9cf8.js"><link rel="prefetch" href="/assets/js/59.616f8f3d.js"><link rel="prefetch" href="/assets/js/6.5c0e4fa7.js"><link rel="prefetch" href="/assets/js/60.5de3197c.js"><link rel="prefetch" href="/assets/js/61.05007999.js"><link rel="prefetch" href="/assets/js/62.3ab5ac3f.js"><link rel="prefetch" href="/assets/js/63.cf858a85.js"><link rel="prefetch" href="/assets/js/64.6679b2f5.js"><link rel="prefetch" href="/assets/js/65.4846ffb2.js"><link rel="prefetch" href="/assets/js/7.4701d5ea.js"><link rel="prefetch" href="/assets/js/8.a264957f.js"><link rel="prefetch" href="/assets/js/9.addc3dd2.js">
    <link rel="stylesheet" href="/assets/css/0.styles.a1f64882.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/" class="home-link router-link-active"><img src="/log-logo-bw.svg" alt="Nodewood Documentation" class="logo"> <span class="site-name can-hide">Nodewood</span></a> <div class="links mr-32"><nav class="nav-links can-hide"><div class="nav-item"><a href="/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/blog/">
      Blog
    </a></div> <!----></nav> <a href="/app/signup" class="build-with-nodewood">
      Build with Nodewood
    </a> <div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div></div> <div class="bg-red-700 text-white fixed transform rotate-45 px-16" style="top: 20px; right: -40px">
    BETA
  </div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/blog/">
      Blog
    </a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Overview</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Getting Started</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading open"><span>Architecture Concepts</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/docs/architecture/" aria-current="page" class="sidebar-link">Introduction</a></li><li><a href="/docs/architecture/shared-code/" class="sidebar-link">Shared Code</a></li><li><a href="/docs/architecture/cascading-filesystem/" class="sidebar-link">Cascading Filesystem</a></li><li><a href="/docs/architecture/configuration/" class="sidebar-link">Configuration</a></li><li><a href="/docs/architecture/features/" class="sidebar-link">Feature-based Development</a></li><li><a href="/docs/architecture/models/" class="sidebar-link">Models</a></li><li><a href="/docs/architecture/validators/" class="sidebar-link">Validators</a></li><li><a href="/docs/architecture/errors/" aria-current="page" class="active sidebar-link">Error Handling</a></li></ul></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>API / Backend</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>UI / Frontend</span> <span class="arrow right"></span></p> <!----></section></li><li><a href="/docs/cli/" class="sidebar-link">CLI / Scripts</a></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Nodewood Features</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Tutorials</span> <span class="arrow right"></span></p> <!----></section></li><li><a href="/docs/sales-website/" class="sidebar-link">Sales Website</a></li><li><a href="/docs/deploying/" class="sidebar-link">Deploying to Production</a></li><li><a href="/docs/help/" class="sidebar-link">Help</a></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h1 id="error-handling"><a href="#error-handling" class="header-anchor">#</a> Error Handling</h1> <p>Errors emitted by the API follow the <a href="https://jsonapi.org/format/#errors" target="_blank" rel="noopener noreferrer">JSON API error format<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.  An example of an emitted error follows:</p> <div class="language-json extra-class"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ERROR_MIN_LENGTH&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;minLength&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;parameter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Password must be at least 8 characters.&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ERROR_MATCH_FIELD&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;matchField&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;parameter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password_repeat&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Passwords must match.&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The above example represents a user creation form that failed validation.  The <code>password</code> parameter did not meet the complexity requirements (minimum 8 characters in length), and the <code>password_repeat</code> parameter did not match the <code>password</code> parameter.</p> <p>The <code>code</code> field is a string constant that can be found in <code>wood/lib/Errors</code> and is safe to perform comparisons against, while <code>title</code> is a descriptive string that is safe to display to the user, but is <strong>not</strong> safe to perform comparisons against, as it may change.</p> <p>The <code>source</code> field can be used to identify what form field caused the error, and the display the error next to said field.  <code>meta</code> is an optional field that can be used to add extra information to the error, as necessary.</p> <h2 id="standarderrors"><a href="#standarderrors" class="header-anchor">#</a> StandardErrors</h2> <p>Also defined in <code>wood/lib/Errors</code> are a series of errors:</p> <ul><li><code>Standard400Error</code>: A form validation or other user error.</li> <li><code>Standard401Error</code>: The user has not provided correct authentication.</li> <li><code>Standard403Error</code>: The user is authenticated, but does not have access to the requested resource.</li> <li><code>Standard404Error</code>: The request the user is asking for cannot be found.</li></ul> <p><br>These errors all follow the same format when created, an array of objects that match the above-mentioned JSON API error format:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Standard400Error</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
  <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token constant">ERROR_UNIQUE</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'You already have a project with that name.'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">parameter</span><span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>As these errors all follow the same format, they are exported handled by the same middleware that catches errors of this type and handles outputting the response of the request.  To add more errors to this list, add them to the <code>Standard4xxErrors</code> exported by <code>app/lib/Errors</code>:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Standard4xxErrors <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@wood/lib/Errors'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">Standard4xxErrors</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span>Standard4xxErrors<span class="token punctuation">,</span>
    <span class="token string">'Standard420Error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="display-errors-in-ui"><a href="#display-errors-in-ui" class="header-anchor">#</a> Display Errors in UI</h2> <p>The simplest way to display errors is to display them in a toast:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> errorToast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'#ui/lib/toast'</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingThatCanThrowAnError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">errorToast</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>However, if you are using <a href="/docs/architecture/validators/">Validators</a> for a form, you can rely on the global <code>errorCaptured</code> handler in <code>App.vue</code>, which will attempt to parse any API errors and store them in the <code>apiErrors</code> field in the <code>data</code> section of your component.  Then, if using a component that binds to <code>apiErrors</code> or if manually displaying your <code>apiErrors</code> in your component, any errors returned from the server will &quot;magically&quot; appear in the correct spot on the form.</p> <p>You can add a manual <code>try/catch</code> around your code if you want to do something special on error handling, but remember to re-throw the error if you still want it to end up being parsed and sorted into the correct apiErrors entry.</p> <p>A note on error format: if you want to automatically have your error sorted into the correct apiErrors field, you have to have a <code>source.parameter</code> set in the error object:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Standard400Error</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
  <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token constant">ERROR_EMPTY</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'You must enter your name.'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">parameter</span><span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Errors that do not have a <code>source.parameter</code> field set will instead be displayed as an error toast.  So if you are returning an error that doesn't have a specific field that it lines up with (say, because a 3rd-party API call failed, for example), no worries!  Just omit the <code>source</code> parameter entirely and it will still be displayed.</p></div> <footer class="page-edit"><!----> <!----></footer> <div class="page-nav"><p class="inner"><span class="prev">
      ←
      <a href="/docs/architecture/validators/" class="prev">
        Validators
      </a></span> <span class="next"><a href="/docs/api/">
        Introduction
      </a>
      →
    </span></p></div> </main></div><div class="global-ui"></div></div>
    <script src="/assets/js/app.2c5c8431.js" defer></script><script src="/assets/js/3.97560a66.js" defer></script><script src="/assets/js/27.6151565d.js" defer></script>
  </body>
</html>
