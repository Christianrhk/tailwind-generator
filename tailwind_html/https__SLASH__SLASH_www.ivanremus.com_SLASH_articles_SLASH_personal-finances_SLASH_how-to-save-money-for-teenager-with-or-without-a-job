<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta property="og:title" content="How to save money for teenager  | Living by Design" />
<meta property="og:type" content="article" />
<meta property="og:url" content="how-to-save-money-for-teenager-with-or-without-a-job-" />
<meta property="og:image" content="https://images.groovetech.io/2nkbgE_SeZk0H2jZ4ORbGAt1gocWS3jcb00W-alfVYA/rs:fit:0:0:0/g:no:0:0/c:0:0/aHR0cHM6Ly9pbWFnZXMuZ3Jvb3ZldGVjaC5pby9nTEJUWS1aeUhFSGlET2lKWE00ZVBnc09jQXZ1ZU5Gb1FFT3RfVEpMaUFRL3JzOmZvcmNlOjEwMDA6NjUxOjEvZzpub3dlOjA6MC9jOjA6MC9hSFIwY0hNNkx5OWhjM05sZEhNdVozSnZiM1psWVhCd2N5NWpiMjB2YVcxaFoyVnpMelZsWVdNeE1HTmtZakExWXprME1HTmlNek5oWm1JNFlTOHhOalU0TVRnMU5qVTVYMFpsWVhSMWNtVkpiV0ZuWlMxSWIzZDBiM05oZG1WdGIyNWxlV1p2Y25SbFpXNWhaMlZ5TFRJd01qSXRNRGN0TVRndWNHNW4ud2VicA.webp" />
<meta property="og:description" content="Saving money can be challenging for teenagers who are just learning about financial responsibility. Learn the best ways to save money as a teenager." />
<meta name="title" content="How to save money for teenager  | Living by Design" />
<meta name="keywords" content="" />
<meta name="description" content="Saving money can be challenging for teenagers who are just learning about financial responsibility. Learn the best ways to save money as a teenager." />


<script src="https://kit.fontawesome.com/e7647a48d4.js" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.1.0/mustache.min.js"></script>
<link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Merriweather:wght@400;700&display=swap" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
<link rel="icon" type="image/png" sizes="16x16" href="{favi_con}" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
<base href="/articles" id=blog-base>
<title>How to save money for teenager (with or without a job)</title>
</head>
<body>
<script type="application/ld+json">{"@context":"https://schema.org",
"@graph":[{"@type":"WebSite",
"@id":"https://www.ivanremus.com/#website",
"url":"https://www.ivanremus.com/",
"name":"Ivan Remus | Living By Design", 
"description":"Start an Online Business | Business Software Reviews | Lifestyle Design Through Internet Marketing.",
"potentialAction":[{"@type":"SearchAction",
"target":{"@type":"EntryPoint",
"urlTemplate":"https://www.ivanremus.com/?s={search_term_string}"},
"query-input":"required name=search_term_string"}],
"inLanguage":"en-US"},
{"@type":"WebPage",
"@id":"https://www.ivanremus.com/articles#webpage",
"url":"https://www.ivanremus.com/articles",
"name":"Ivan Remus | Livign By Design | Articles",
"isPartOf":{"@id":"https://www.ivanremus.com/#website"},
"datePublished":"2022-02-20T07:32:27+00:00",
"dateModified":"2022-02-20T16:20:14+00:00",
"description":"Ivan Remus's Articles. Learn how to live the life you want, and how to launch, grow, and monetize your online business faster, by following the simple steps in these articles. Learn more.",
"breadcrumb":{"@id":"https://www.ivanremus.com/articles#breadcrumb"},
"inLanguage":"en-US",
"potentialAction":[{"@type":"ReadAction",
"target":["https://www.ivanremus.com/articles"]}]},
{"@type":"BreadcrumbList",
"@id":"https://www.ivanremus.com/articles#breadcrumb",
"itemListElement":[{"@type":"ListItem",
"position":1,
"name":"Home",
"item":"https://www.ivanremus.com/"},
{"@type":"ListItem",
"position":2,
"name":"Ivan Remus' Articles"}]}]}
</script>
<div id="blogPostListWrapper">
<header id="header" class="header relative">

</header>
<div class="ads-wrapper md:pt-10 md:pb-0 pt-5 pb-5 hidden" id="header-ads">
<div class="container flex justify-center">

</div>
</div>
<main id="main-content" class="main-content md:pt-10 md:pb-20 pb-10">
<div id="container" class="container-small">



<div id="middle-wrapper" class="md:flex">
<div class="flex-1">
<div id="middle" class="hidden">
<div class="flex-1">
<div class="flex uppercase text-xs text-blue-1 mb-3">
<a href="topic/personal-finances" class="mr-6" slug="topic/personal-finances">PERSONAL FINANCES</a>
</div>
<div class="ql-editor">
<h1>How to save money for teenager (with or without a job)</h1>
<div class="text-sm text-grey-2 mt-3 mb-10">May 03, 2022</div>
<div><p>Saving money can be tough for anyone, but it can be especially challenging for teenagers who are just learning about financial responsibility. If you're a teenager looking for ways to save money, don't worry – you're not alone.</p><p><br></p><p>There are many ways to save money as a teenager, regardless of your income level. In this article, we will discuss some of the best ways to save money as a teenager.</p><p><br></p><p>We will also provide tips for teenagers on how to save money easier and how to get started if you don't have a job yet. Let's get started!</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651624657_Howtosavemoneyforteenager.webp"></p><p><br></p><h2>Saving money as a teenager</h2><p>When you are a teenager, it is important to start saving money. One of the best ways to save money is to open a savings account. Your money can grow through compound interest when you have a savings account.</p><p><br></p><p>This means that the money in your account will earn money on the interest added to it. This can help your money grow faster over time.</p><p><br></p><p>Another way to save money as a teenager is to get a part-time job. You can use the money you earn to put into your savings account. You may also want to consider washing cars in your neighborhood to make extra cash.</p><p><br></p><p>One of the best things about saving money as a teenager is that you can start with a small amount of money. This means that even if you don’t have a lot of spare cash right now, you can still start saving for the future.</p><p><br></p><h2>How much money should a teenager save?</h2><p>How much money should a teenager save? That’s a question with no easy answer. The amount you save depends on your goals and your financial situation. But there are some basics that everyone should keep in mind.</p><p><br></p><p>The first step is to open a bank account. This will give you a place to store your money, and it will also help you start building up your savings. You can either use a checking account or a savings account. Checking accounts are good for day-to-day expenses, while a savings accounts are best for long-term savings goals.</p><p><br></p><p>Once you have a bank account, you need to set a savings goal. How much do you want to save each month? It might help to break your goal down into smaller steps.</p><p><br></p><p>The 50/30/20 rule is an important part of financial planning for your teen. The breakdown into three categories helps them understand how their earnings can be used best and gives you peace of mind that they are being responsible with the money to prepare themselves before heading off into adulthood.</p><p><br></p><p>Take some time to explain to them the 50/30/20 Budgeting Rule. Make sure that they understand the core concept:</p><ul><li>50% of their income should be used in the "NEEDS" category, such as their school expenses, their college applications, or contributions towards their household expenses.</li><li>30% of their earnings is money they can spend on things they "WANTS," such as going to the movies with their friends.</li><li>20% of all their allowances and earnings is money they "SAVE" and goes towards their savings goal.</li></ul><p><br></p><p>If the parents cover all their living costs (corresponding to the 50% allocated for NEEDS), the teenager does not necessarily have all their budget compromise, making it possible to save even more money.</p><p><br></p><p>Perhaps the teenager has a particular savings goal that wants to reach. For example, they might want to purchase a new video game or console, or they might want to save toward purchasing their first car for when they start college. In those cases, the goal is more specific and easier to define.</p><p><br></p><p>The best way to succeed in their money management is to automate the process, from the direct deposit of their paycheck to their monthly savings. That way, they avoid the temptation of skipping their&nbsp;monthly savings&nbsp;when they need more cash flow.</p><p><br></p><h2>The best age to start saving money as a teenager</h2><p>The best age to start saving money as a teenager is now. It may seem like you have plenty of time to save money, but the sooner they start saving, the better their chance of becoming financially independent.</p><p><br></p><p>Saving money as a teenager can be a challenge, but starting early is important. The sooner they start saving, the more time their money has to grow. And the more money they have in savings, the better prepared they will be for the future.</p><p><br></p><p>This is because of compounding interest, which means that their money earns on the portion that has already been earned.</p><p><br></p><p>This can have a big impact on their savings over time. For example, let’s say they start saving $100 per month when they are 18 years old. If they continue saving $100 per month and earn an annual percentage rate of five percent, they will have saved $48,000 by the time they are 30 years old.</p><p><br></p><p>But if they wait until they are 25 years old to start saving, they will have to save $200 per month to reach the same goal. This is because they will have less time to let their money grow.</p><p><br></p><h2>Bank account for teenagers</h2><p>Many banks offer savings accounts for teenagers with low minimum balances and other perks such as high-interest rates.</p><p><br></p><p>Parents should help their children open a bank account since it's a great way to reach their savings goals.</p><p><br></p><p>When looking for the best savings account for your teenager, make sure to find one with no monthly fees, has a high-interest rate, and offers a debit card.</p><p><br></p><p>The best banks for teenagers are ones that offer free online banking, mobile apps, and text alerts so you can track their spending and help them avoid overdraft fees.</p><p><br></p><p>One excellent example is "Chase First Banking", from <a href="https://geni.us/V6MNi" target="_blank" class="gdel54">Chase Bank</a>, which helps parents teach their children the money basis by offering a debit card with their kid's name on it, with a $0 monthly service fee, while the parent/guardian is still the owner of the account. AS a parent, you can manage both your personal account and Chase First accounts in one spot with the Chase Mobile app. That way, you will know where your kid spends with alerts, plus you can set limits on where and how much your child can spend in one place.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651625295_Bankaccountforteenagers.webp"></p><p><br></p><h2>Tips for saving money as a teenager</h2><p>Here are some tips for saving money as a teenager:</p><h3>Learn More About Personal Finance</h3><p>One of the smartest things they can do as a teenager is to learn how to spend, manage and save money. It may seem like a difficult task, but you can set them up for a secure financial future with some planning and discipline.</p><p><br></p><p>In general, Americans are not fully equipped for their financial literacy. So you must learn by yourself. Take books on financial education. <a href="https://www.coursera.org/" target="_blank"><u>Coursera</u></a> also offers free classes.</p><p>Knowledge of basic money management can help stay ahead. Knowledge indeed has power. Using the correct method of handling expenses can help prevent costly mistakes on the part of a banker.</p><p><br></p><h3>Create a budget</h3><p>The budgeting <a href="https://www.ivanremus.com/articles/personal-finances/50-30-20-rule-personal-budgeting-method-made-easy" target="_blank"><u>50/30/20 Rule</u></a> is a&nbsp;good rule&nbsp;of thumb and an excellent starting point for teenagers to create a budget and keep their personal finance in order.</p><p><br></p><h3>Open a savings account</h3><p>It feels like you never have enough money when you're a teenager. But there are plenty of ways to start saving and building your bank account.</p><p>One of the best ways to save money is to open a savings account. A savings account allows you to set aside money each month to save up for a specific goal. It's also a good way to own your own money and not rely on your parents for everything.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651628555_Openasavingsaccount.webp"></p><p><br></p><h3>Keep an eye on your expenses</h3><p>Of course, parents provide their children with necessary costs (food, shelter, clothes). In any case, teenagers can take care of unneeded costs. Teenagers should make a detailed list of the money they spend.</p><p><br></p><p>Once this has been done, they need to consider a way to lower the cost. Excel sheets are advisable if they need help in identifying their data.</p><p><br></p><p>They need to compare every dollar spent on unnecessary and unused expenses to the subscription fees available. They can reduce unnecessary expenses and give themselves a little more wiggle room to save money in their bank.</p><p><br></p><h3>Use Discounts Where You Can</h3><p>It can be tough for many teenagers to save money. Between school, extracurricular activities, and socializing, there’s often not much left over at the end of the month. But with a few simple tips, it’s possible to start building up their savings by watching how they are spending money.</p><p><br></p><p>One of the best ways to save more money is to reduce your living expenses. Find ways to cut back on eating out and other unnecessary expenses.</p><p><br></p><p>There are plenty of free or low-cost activities available in every city, so get involved in your community and explore what’s available for you.</p><p><br></p><p>Another great way to save is to use discounts whenever possible. Whenever possible, avoid paying full price. Use coupon codes and free-of-charge offers to get better deals and save a little extra money in your life.</p><p><br></p><p>Moreover, you may use student status to receive student discounts on products and services. Many stores offer student discounts if you present your student ID, so be sure to show your student ID card when you shop. And if you belong to any clubs or organizations, ask about discounts at local businesses.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651627180_UseDiscountsWhereYouCan.webp"></p><p><br></p><h2>What if your teenager doesn't seem to be saving money?</h2><p>If your teenager isn't saving enough, it may be time to talk about financial responsibility. One way parents have to encourage their teenagers to save money is to offer them a matching contribution for every dollar they put into their savings account. This will help them see the importance of avoiding spending all their money and therefore, the importance of saving and give them a financial incentive to do so.</p><p><br></p><p>Another way to encourage your teenager to save money is to have them set up a budget. This will help them see where their money is going and find ways to cut back on unnecessary expenses.</p><p><br></p><p>Finally, remind your teenager that whatever they save now will pay off in the future. Help them understand the power of compound interest and delayed gratification.</p><p><br></p><h3>Smarter online shopping</h3><p>I am smarter in my shopping habits, especially online. Use coupons. There are a great variety of businesses that can give you a more affordable deal when buying many items you already have. If you don't do this, you simply leave money to be redeemed. You might have been surprised at the amount you saved as a kid. Someone may have slightly changed something they'd purchased. One boring example could be buying toilet paper. So instead, you just buy a brand from your shelf just to see if they are pretty.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651628440_Smarteronlineshopping.webp"></p><p><br></p><h3>Take advantage of Time-sensitive deals</h3><p>Number four is a lot of offers such as Happy Hour or Cowboy-off movie, or whatever. Occasionally businesses give you huge savings when you do something specific to that time period. It may seem odd, but without capitalizing on this fact, your investments are going to be wasted. I DO NOT go to movies at my place of residence and Tuesday night I'm going to the theater for $5. So we could have a friend to watch the film for $10, not $10 per person. The same happened with appetizers last week. I want snacks on the way.</p><p><br></p><h3>Avoid bank fees</h3><p>This means there are fees that your bank can apply. Now try to pay with all the money you have. This is similar to buying debit cards. I find it quite unsettling. I know, this is what helps to save your time. When you pay online with cash, you cannot overdraw since without money it's impossible to buy anything. I learned mathematics at 16 years old. Before, it was my first attempt at saving money. I would really enjoy blowing out all those dollars I have got right. It costs me thousands in overdraft fees.</p><p><br></p><h3>Think about the hours of work needed to pay for something</h3><p>That would be the cost of completing this project. It is for teenagers. It seems that you guys do not make the highest income every hour. We'll take the example of $10 an hour.</p><p>When someone buys you 70 jersey shoes for $80, consider how long it would have taken for you to actually pay for it. You earn $10 per day! All of these taxes must be included. Calculate the amount of work needed to cover the costs of acquiring this item.</p><p><br></p><h3>Consider the option of finding a job</h3><p>When it comes to deciding whether or not to allow your teenager to get a job, there are a few things you should consider. The first is how much money they will need.</p><p><br></p><p>Most teenagers don't need a lot of money - they just need a certain amount for all the things they want to do. Another thing to consider is how having a job will affect their social life.</p><p><br></p><p>Many teenagers work so they can buy things for their friends, but if they're working too many hours, they may not have time for their friends anymore.</p><p><br></p><p>Finally, you should think about how a job will affect their schoolwork. A job can be distracting, and if your teenager is working too many hours, they may not have enough time to do well in school.</p><p><br></p><p>After evaluating the pros and cons, parents should encourage their teens to find a paying job they enjoy after school, on the weekends, or during&nbsp;summer vacation.</p><p>Besides being a source of income, summer jobs&nbsp;are also an excellent opportunity to gain experience.</p><p><br></p><p><img src="https://assets.grooveapps.com/images/5eac10cdb05c940cb33afb8a/1651627850_Theycanstartwithmorechoresaroundthehouse.webp">They can start at an early age with more chores around the house in exchange for some extra dollars.</p><p><br></p><p>Regardless of being a summer job or some chores around the house, they will learn that hard work will lead to income, and income saved will lead to financial independence.</p><p><br></p><p><br></p><p><br></p><h2>How to save money as a teenager without a job?</h2><p>Saving money without work can be tricky in life. You have to be more mindful of your spending and take advantage of opportunities to save money.</p><p><br></p><p>Here are a few tips for the teenager who doesn't have a job:</p><ul><li>Have your parents help you open a savings account and deposit any gifts or allowances into it.</li><li>Cut back on unnecessary expenses like eating out or buying new clothes all the time.</li><li>Take advantage of time-sensitive deals and coupons.</li><li>Avoid bank fees by carefully monitoring your spending.</li><li>Think about the hours of work needed to pay for something before you make a purchase.</li></ul><p><br></p><p>Teaching your children how to save money is one of the best gifts you can give them. The earlier they start in life, the better. Talk with your teenager about their spending and saving habits, and help them come up with a plan that works for both of you. They will thank you for it in the future!</p><p><br></p><p>Thanks for reading! I hope this article was helpful and has given you some ideas about how to help your teenager save money.</p><p><br></p><p>It’s never too late to start teaching them the importance of financial responsibility, and it can be a huge relief for both you and your child when they finally learn how to save properly.</p><p><br></p><p>Let me know in the comment below if you have any questions or need more advice on this topic!</p>
</div>
</div>
<div class="fb-comments border-solid border-grey-200" id="fb-comments"></div>
</div>
</div>
</div>
<div class="sidebar">
<div id="sidebar">

</div>
<div id="sidebar-ads" class="hidden">

</div>
<div>
</div>
</div>
</div>
</div>
</main>
<div class="ads-wrapper md:pb-10 pb-5 hidden" id="footer-ads">
<div class="container flex justify-center">

</div>
</div>
<footer id="footer" class="footer">

</footer>
<script>!function(){function e(){var e=((new Date).getTime(),document.createElement("script"));e.type="text/javascript",e.async=!0,e.setAttribute("embed-id","a41c7f43-6359-4638-b792-9c3ee5338de3"),e.src="https://embed.adabundle.com/embed-scripts/a41c7f43-6359-4638-b792-9c3ee5338de3";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}var t=window;t.attachEvent?t.attachEvent("onload",e):t.addEventListener("load",e,!1)}();</script>
</div>
</main>
<div class="ads-wrapper md:pb-10 pb-5 hidden" id="footer-ads">
<div class="container flex justify-center">

</div>
</div>
<footer id="footer" class="footer">

</footer>
<script>!function(){function e(){var e=((new Date).getTime(),document.createElement("script"));e.type="text/javascript",e.async=!0,e.setAttribute("embed-id","a41c7f43-6359-4638-b792-9c3ee5338de3"),e.src="https://embed.adabundle.com/embed-scripts/a41c7f43-6359-4638-b792-9c3ee5338de3";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}var t=window;t.attachEvent?t.attachEvent("onload",e):t.addEventListener("load",e,!1)}();</script>
</div>
<script>

        async function exampleFunction() {
            return new Promise(async (resolve, reject) => {
                console.log("this is " + document.getElementById("blog-base").href);
                
                var baseURL = document.getElementById("blog-base").href;
                var domain = window.location.hostname;
                console.log("domain:", domain);
                var pageURL = window.location.href;
                console.log("pageURL:", pageURL);
                var pathURL = window.location.pathname;
                console.log("pathURL:", pathURL);
                var slugURL = pageURL.substr(pageURL.lastIndexOf("/") + 1);
                console.log("slugURL:", slugURL);
                var pathArray = window.location.pathname.split("/");
                console.log("pathArray:", pathArray);
                const segment_1 = pathArray[1];
                console.log("segment_1:", segment_1);
                var currentBaseUrl = window.location.protocol + "//" + window.location.host + '/' + segment_1;
                document.getElementById("blog-base").href = document.getElementById("blog-base").href == currentBaseUrl && segment_1 != ""? document.getElementById("blog-base").href +"/": "/";
                var BasePath = document.getElementById("blog-base").href;
                var currTimestamp = Date.now();
                var utcDateString = (new Date(currTimestamp)).toUTCString();
                var timestamp = new Date(utcDateString).getTime();
                // current versioning
                $modulePath = document.getElementById("blog-base").href + "js/version.js?v=" + timestamp;
                let version = await import($modulePath);
                console.log(version.updatedVersion());
                var notIndex = true;
                var tagSlug = false;
                var temp_tag = [];
                var temp_categories = [];
                var popularposts = [];
                var blogpostSlug = false;
                var categoriesSlug = false;
                var blogpost_id;
                var strArray = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];
                var postdeatilspopularposts = [];
                var sliderposts = [];
                var homPagePosts = [];
                var facebook_comment_settings = "";
                var width = "";
                var num_of_post = "";
                var BLOG_VER = version.updatedVersion();
                // var pageTitle = "";
                let url = new URL(pageURL);
                let search_params = url.searchParams;
                var post_preview = false;
                var post_preview_id = "";
                var theme_preview = false;
                var theme_slug = "";
                var slider = "";
                var showDates = true;
                domain = BasePath;
               var queryString = window.location.search

                // it is theme-preview
                if (window.location.toString().includes("preview-theme")) {
                    if (window.location.pathname == "/" + pathArray[1] + "/index.html") {
                        BasePath = "/" + pathArray[1] + "/";
                        console.log("basepath:", BasePath);
                        theme_preview = true;
                        domain = BasePath + "index.html";
                        console.log("theme_preview:", theme_preview);
                    }
                }

                // Add CSS FILE
                // Get HTML head element
                var head = document.getElementsByTagName("HEAD")[0];
                // Create new link Element
                var link = document.createElement("link");
                // set the attributes for link element
                link.rel = "stylesheet";
                link.type = "text/css";
                link.href = "css/style.css?v=" + BLOG_VER;
                // Append link element to HTML head
                head.appendChild(link);

                if (search_params.has("slug")) {
                    notIndex = false;
                    theme_slug = search_params.get("slug");
                }

                //CHECK THE URL IS FOR POST PREVIEW 
                if (search_params.has("type") && search_params.has("id") && search_params.get("type") == "post-preview") {

                    post_preview = true;
                    console.log(post_preview);
                    post_preview_id = search_params.get("id");

                }

                //FETCH JSON AND TEMPLATES FILES
                //1. BLOG POST LISTING FILES
                await fetch("json/blogpostlist.json?v=" + BLOG_VER)
                    .then((response) => response.json())
                    .then(async (blogposts) => {
                        console.log("1.blogpost listing:", blogposts);
                        //2. Setting Json File
                        await fetch("json/setting.json?v=" + BLOG_VER)
                            .then((response) => response.json())
                            .then(async (settings) => {
                                blogpost_url = settings.config.route.blogpost_url;
                                tag_url = settings.config.route.tag_url;
                                categories_url = settings.config.route.categories_url;
                                sidebar = settings.config.layout_setting.homePage.sidebar;
                                postType = settings.config.layout_setting.homePage.postType;
                                logo = settings.config.route.logo;
                                social_links = settings.config.route.social_links;
                                facebook_comment_settings = settings.config.route.facebook_comment_settings;
                                form_details = settings.config.route.form_details;
                                // pageTitle = settings.config.route.blog_title;
                                copyright = settings.config.route.copyright;
                                favicon = settings.config.route.favicon;
                                tracking_ga = settings.config.tracking_ga;
                                if (favicon == null) {
                                    favicon = "https://assets.grooveapps.com/images/5f0d5c882a049a001c814670/1612550721_favicon.png";
                                }

                                // ADDING FAVICON IN HEAD
                                var faviconHead = document.getElementsByTagName("HEAD")[0];
                                var link = document.createElement("link");
                                link.rel = "icon";
                                link.type = "image/png";
                                link.href = favicon;
                                // Append link element to HTML head
                                head.appendChild(link);

                                // HIDING EMPTY ADS DIV 
                                if (settings.config.ads != null) {
                                    if (settings.config.ads.header_ads == null) {
                                        var element = document.getElementById("header-ads");
                                        element.classList.add("empty-ads");
                                    }
                                    if (settings.config.ads.footer_ads == null) {
                                        var element = document.getElementById("footer-ads");
                                        element.classList.add("empty-ads");
                                    }
                                }
                                else {
                                    var headerAdsElement = document.getElementById("header-ads");
                                    headerAdsElement.classList.add("empty-ads");
                                    var footerAdsElement = document.getElementById("footer-ads");
                                    footerAdsElement.classList.add("empty-ads");
                                }

                                // POST LISTING LAYOUT TYPE
                                posttype = postType == 1 ? "list" : postType == 2 ? "grid" : "masonry";
                                emailForm = settings.config.layout_setting.homePage.emailForm;
                                categoriesShow = settings.config.layout_setting.homePage.categories;
                                blogpostsidebar = settings.config.layout_setting.postPage.sidebar;
                                showDates = settings.config.layout_setting.homePage.showDates;
                                numOfPosts = settings.config.layout_setting.homePage.numberOfPosts;

                                // DIFFERENTIATING THE URLS OF POST AND CATEGORY 
                                for (var i = 0; i < blogposts.length; i++) {
                                    postSlug = blogposts[i]["url"];

                                    if (theme_preview) {
                                        themePostSlug = "index.html?slug=" + postSlug;
                                        blogposts[i]["url"] = themePostSlug;
                                    }

                                    if (pageURL == BasePath + blogposts[i]["url"] || pageURL == BasePath + blogposts[i]["url"]+ queryString || pageURL == BasePath + blogposts[i]["url"] + ".html" || theme_slug == postSlug) {
                                        blogpostSlug = true;
                                        blogpost_id = blogposts[i]["id"];
                                        // pageTitle = blogposts[i]["id"]["name"];
                                    }

                                }
                                // COLLECTION OF POST OF DIFFERENT SECTIONS OF HOME PAGE

                                for (var i = 0; i < blogposts.length; i++) {
                                    if (blogposts[i]["add_carousel"]) {
                                        sliderposts.push(blogposts[i]);
                                    }
                                    if (blogposts[i]["show_homepage"]) {
                                        homPagePosts.push(blogposts[i]);
                                    }
                                    if (popularposts.length < 6) {
                                        popularposts.push(blogposts[i]);
                                    }
                                }
                                console.log("sliderposts:", sliderposts);
                                console.log("homepagePosts:", homPagePosts);
                                blogdata = {
                                    sidebar: sidebar,
                                    emailForm: emailForm,
                                    categoriesShow: categoriesShow,
                                    posttype: posttype,
                                    blogposts: homPagePosts,
                                    sliderposts: sliderposts,
                                    popularposts: popularposts,
                                    form_details: form_details,
                                    showDates: showDates,
                                    blogposts0: blogposts[0],
                                    blogposts1: blogposts[1],
                                    blogposts2: blogposts[2],
                                    blogposts3: blogposts[3],
                                    blogposts4: blogposts[4],
                                };
                                //3.NAVIGATIONS
                                await fetch("json/navigations.json?v=" + BLOG_VER)
                                    .then((response) => response.json())
                                    .then(async (navigations) => {
                                        await fetch("json/categories.json?v=" + BLOG_VER)
                                            .then((response) => response.json())
                                            .then(async (visiblecategories) => {
                                                visiblecategories = visiblecategories;
                                                for (var j = 0; j < visiblecategories.length; j++) {
                                                    categories_slug = visiblecategories[j]["slug"];
                                                    temp_categories_slug = {
                                                        categories_slug: categories_slug,
                                                    };
                                                    categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                    visiblecategories[j]["url"] = BasePath + categories_slug_url;
                                                    console.log(visiblecategories[j]["url"]);

                                                    if (pageURL == visiblecategories[j]["url"]) {
                                                        categoriesSlug = true;
                                                        categories_id = visiblecategories[j]["id"];
                                                        // pageTitle = visiblecategories[j]["name"];
                                                        // document.title = pageTitle;
                                                    }

                                                    if (theme_preview) {
                                                        themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                        visiblecategories[j]["url"] = themeCategorySlug;
                                                    }

                                                    num_of_child = visiblecategories[j]["children"].length;
                                                    visiblecategories[j]["child_exist"] = false;
                                                    if (num_of_child >= 1) {
                                                        visiblecategories[j]["child_exist"] = true;
                                                    }
                                                    for (var k = 0; k < visiblecategories[j]["children"].length; k++) {
                                                        categories_slug = visiblecategories[j]["children"][k]["slug"];
                                                        temp_categories_slug = {
                                                            categories_slug: categories_slug,
                                                        };
                                                        categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                        visiblecategories[j]["children"][k]["slug"] = BasePath + categories_slug_url;
                                                        if (pageURL == visiblecategories[j]["children"][k]["slug"]) {
                                                            categoriesSlug = true;
                                                            categories_id = visiblecategories[j]["children"][k]["id"];
                                                            // pageTitle = visiblecategories[j]["children"][k]["name"];
                                                            // document.title = pageTitle;
                                                        }
                                                        if (theme_preview) {
                                                            themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                            visiblecategories[j]["children"][k]["slug"] = themeCategorySlug;
                                                        }
                                                    }
                                                }


                                                console.log("visible-categories:", visiblecategories);

                                                await fetch("templates/header.html?v=" + BLOG_VER)
                                                    .then((response) => response.text())
                                                    .then(async (header_temp) => {
                                                        temp = header_temp;
                                                        var headerdata = {
                                                            logo: logo,
                                                            social_links: social_links,
                                                            domain: domain,
                                                            navigations: navigations,
                                                            tags: visiblecategories,
                                                            copyright: copyright,
                                                        }
                                                        console.log("headerdata:", headerdata);
                                                        header = Mustache.to_html(temp, headerdata);
                                                        await fetch("templates/footer.html?v=" + BLOG_VER)
                                                            .then((response) => response.text())
                                                            .then(async (footer) => {
                                                                footer = footer;
                                                                footer = Mustache.to_html(footer, headerdata);
                                                                await fetch("templates/layout.html?v=" + BLOG_VER)
                                                                    .then((response) => response.text())
                                                                    .then(async (layout) => {

                                                                    });
                                                                // POST PREVIEW URL
                                                                if (post_preview) {
                                                                    console.log("post_preview:", post_preview);
                                                                    await fetch("https://v1.gdapis.com/api/grooveblog/post-preview/" + post_preview_id)
                                                                        .then((response) => response.json())
                                                                        .then(async (blog) => {
                                                                            // document.getElementById("post-detials-ads").innerHTML = blog["custom_code"];
                                                                            document.title = blog["title"];
                                                                            blogpost_id = post_preview_id;
                                                                            if (facebook_comment_settings != null) {
                                                                                app_id = facebook_comment_settings.app_id;
                                                                                width = facebook_comment_settings.width;
                                                                                num_of_post = facebook_comment_settings.num_of_post;
                                                                            }
                                                                            console.log(blog["date_and_time"]);
                                                                            var publish_date = new Date(blog["date_and_time"]);
                                                                            if (isNaN(blog["date_and_time"])) {
                                                                                publish_date = new Date();
                                                                            }
                                                                            var formatted = strArray[publish_date.getMonth()] + " " + publish_date.getDate() + ", " + publish_date.getFullYear();
                                                                            blog["date_and_time"] = formatted;
                                                                            for (var j = 0; j < blog["categories"].length; j++) {
                                                                                categories_slug = blog["categories"][j]["slug"];
                                                                                temp_categories_slug = {
                                                                                    categories_slug: categories_slug,
                                                                                };
                                                                                categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                                                blog["categories"][j]["url"] = categories_slug_url;
                                                                                if (pageURL == BasePath + categories_slug_url) {
                                                                                    categoriesSlug = true;
                                                                                    categories_id = blog["categories"][j]["id"];
                                                                                }
                                                                            }
                                                                            for (var j = 0; j < popularposts.length; j++) {
                                                                                if (blogpost_id != popularposts[j]["id"]) {
                                                                                    postdeatilspopularposts.push(popularposts[j]);
                                                                                }
                                                                            }
                                                                            blogdata = {
                                                                                pageURL: pageURL,
                                                                                width: width,
                                                                                num_of_post: num_of_post,
                                                                                sidebar: blogpostsidebar,
                                                                                form_details: form_details,
                                                                                blogposts: blog,
                                                                            };
                                                                            console.log(blogdata);
                                                                            await fetch("templates/blogpost.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (template) => {
                                                                                    if (blogpostsidebar) {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: blogpostsidebar,
                                                                                            form_details: form_details,
                                                                                            popularposts: postdeatilspopularposts,
                                                                                        };

                                                                                        await fetch("templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then((sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });
                                                                                    }

                                                                                    else {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                                    }
                                                                                    middle = Mustache.to_html(template, blogdata);
                                                                                    var elem = document.getElementById("main-content");
                                                                                    elem.style.background = "#ffffff";
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("slider").innerHTML = slider;
                                                                                    document.getElementById("container").className = "container-small";
                                                                                    document.getElementById("middle").innerHTML = middle;
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    console.log(middle);
                                                                                    if (blog.show_comments && facebook_comment_settings != null && facebook_comment_settings.app_id != null) {
                                                                                        setTimeout(function () {
                                                                                            let myCommentCode = document.createElement("script");
                                                                                            myCommentCode.setAttribute("src", "https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v9.0&appId=" + app_id + "&autoLogAppEvents=1");
                                                                                            myCommentCode.setAttribute("crossorigin", "anonymous");
                                                                                            myCommentCode.setAttribute("nonce", "QBaEqTGW"); document.body.appendChild(myCommentCode);
                                                                                        }, 1000)
                                                                                    }
                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    let frameCode = document.createElement("script");
                                                                                    frameCode.setAttribute("src", BasePath + "js/frame.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(frameCode);
                                                                                });

                                                                        });

                                                                }
                                                                // BLOG POST URL
                                                                if (blogpostSlug) {
                                                                    await fetch("json/" + blogpost_id + ".json?v=" + BLOG_VER)
                                                                        .then((response) => response.json())
                                                                        .then(async (blog) => {
                                                                            // document.getElementById("post-detials-ads").innerHTML = blog["custom_code"];
                                                                            document.title = blog["title"];
                                                                            if (facebook_comment_settings != null) {
                                                                                app_id = facebook_comment_settings.app_id;
                                                                                width = facebook_comment_settings.width;
                                                                                num_of_post = facebook_comment_settings.num_of_post;
                                                                            }

                                                                            for (var j = 0; j < blog["categories"].length; j++) {
                                                                                categories_slug = blog["categories"]["slug"];
                                                                                temp_categories_slug = {
                                                                                    categories_slug: categories_slug,
                                                                                };
                                                                                categories_slug_url = Mustache.render(categories_url, temp_categories_slug);
                                                                                blog["categories"][j]["url"] = BasePath + categories_slug_url;
                                                                                if (theme_preview) {
                                                                                    themeCategorySlug = "index.html?slug=" + categories_slug_url;
                                                                                    blog["categories"][j]["url"] = themeCategorySlug;
                                                                                }
                                                                                if (pathURL == blog["categories"][j]["url"] || categories_slug_url == theme_slug) {
                                                                                    categoriesSlug = true;
                                                                                    categories_id = blog["categories"][j]["id"];
                                                                                }
                                                                            }

                                                                            for (var j = 0; j < popularposts.length; j++) {
                                                                                if (blogpost_id != popularposts[j]["id"]) {
                                                                                    postdeatilspopularposts.push(popularposts[j]);
                                                                                }

                                                                            }
                                                                            await fetch(BasePath + "templates/blogpost.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (blogPostDetailsTemplate) => {
                                                                                    if (blogpostsidebar) {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: blogpostsidebar,
                                                                                            form_details: form_details,
                                                                                            popularposts: postdeatilspopularposts,
                                                                                        };
                                                                                        await fetch(BasePath + "templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then(async (sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });



                                                                                    }
                                                                                    else {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                                    }
                                                                                    var elem = document.getElementById("main-content");
                                                                                    elem.style.background = "#ffffff";
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("container").className = "container-small";
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    if (blog.show_comments && facebook_comment_settings != null && facebook_comment_settings.app_id != null) {
                                                                                        document.getElementById("fb-comments").setAttribute("data-href", pageURL);
                                                                                        document.getElementById("fb-comments").setAttribute("data-width", width);
                                                                                        document.getElementById("fb-comments").setAttribute("data-numposts", num_of_post);
                                                                                        setTimeout(function () {
                                                                                            let myCommentCode = document.createElement("script");
                                                                                            myCommentCode.setAttribute("src", "https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v9.0&appId=" + app_id + "&autoLogAppEvents=1");
                                                                                            myCommentCode.setAttribute("crossorigin", "anonymous");
                                                                                            myCommentCode.setAttribute("nonce", "QBaEqTGW");
                                                                                            document.body.appendChild(myCommentCode);
                                                                                        }, 1000

                                                                                        );

                                                                                    }
                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    let frameCode = document.createElement("script");
                                                                                    frameCode.setAttribute("src", BasePath + "js/frame.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(frameCode);


                                                                                });
                                                                        });
                                                                }

                                                                if (categoriesSlug) {
                                                                    console.log(categoriesSlug);
                                                                    var categoryCount = 0;
                                                                    await fetch(BasePath + "templates/categories.html?v=" + BLOG_VER)
                                                                        .then((response) => response.text())
                                                                        .then(async (categoriesTemplate) => {
                                                                            showDates = settings.config.layout_setting.categoryPage.showDates;
                                                                            numOfPosts = settings.config.layout_setting.categoryPage.numberOfPosts;
                                                                            categoryPagepostType = settings.config.layout_setting.categoryPage.postType;
                                                                            postType = categoryPagepostType == 1 ? "list" : categoryPagepostType == 2 ? "grid" : "masonry";
                                                                            var categoriesblogdata = {
                                                                                posttype: posttype,
                                                                                blogpost: blogposts,
                                                                            };
                                                                            console.log(blogposts);
                                                                            for (var k in blogposts) {
                                                                                slug = blogposts[k]["slug"];
                                                                                var temp_blogpost_slug = {
                                                                                    slug: slug,
                                                                                };
                                                                                postSlug = Mustache.render(blogpost_url, temp_blogpost_slug);
                                                                                blogposts[k]["url"] = BasePath + postSlug;
                                                                                if (theme_preview) {
                                                                                    themePostSlug = "index.html?slug=" + postSlug;
                                                                                    blogposts[k]["url"] = themePostSlug;
                                                                                }
                                                                                for (var j in blogposts[k]["categories"]) {
                                                                                    if (blogposts[k]["categories"][j]["id"] == categories_id) {
                                                                                        temp_categories.push(blogposts[k]);
                                                                                        categoryCount = categoryCount + 1;
                                                                                    }

                                                                                }
                                                                            }
                                                                            var categorieswiseblogpost = {
                                                                                postType: posttype,
                                                                                blogpost: temp_categories,
                                                                                showDates: showDates,
                                                                            };

                                                                            middle = Mustache.to_html(categoriesTemplate, categorieswiseblogpost);
                                                                            console.log(middle);
                                                                            document.getElementById("middle-wrapper").className = "without-sidebar";
                                                                            document.getElementById("header").innerHTML = header;
                                                                            document.getElementById("middle").innerHTML = middle;
                                                                            document.getElementById("footer").innerHTML = footer;
                                                                            let myCoolCode = document.createElement("script");
                                                                            myCoolCode.setAttribute("src", BasePath + "js/loadmore.js?v=" + BLOG_VER);
                                                                            document.body.appendChild(myCoolCode);
                                                                            // document.getElementById("blogPostListWrapper").innerHTML = html;
                                                                        });
                                                                }
                                                                if (pageURL == BasePath + "?v=" + (BLOG_VER + 1) || pageURL == BasePath + queryString || pageURL == baseURL+ queryString || pageURL == baseURL + "?v=" + (BLOG_VER + 1)|| pageURL== baseURL || pageURL == BasePath || pathURL == BasePath + "index.html" && theme_slug == "" && (!post_preview)) {
                                                                    // document.title = pageTitle;
                                                                    await fetch(BasePath + "templates/slider.html?v=" + BLOG_VER)
                                                                        .then((response) => response.text())
                                                                        .then(async (sliderTemplate) => {
                                                                            var sliderData = {
                                                                                categoriesShow: categoriesShow,
                                                                                sliderposts: sliderposts,
                                                                                showDates: showDates,
                                                                            };
                                                                            slider = Mustache.to_html(sliderTemplate, sliderData);




                                                                            await fetch(BasePath + "templates/home.html?v=" + BLOG_VER)
                                                                                .then((response) => response.text())
                                                                                .then(async (homeTemplate) => {
                                                                                    if (!sidebar) {
                                                                                        document.getElementById("middle-wrapper").className = "without-sidebar";

                                                                                    }
                                                                                    else {
                                                                                        var sidebarDetails = {
                                                                                            sidebar: sidebar,
                                                                                            emailForm: emailForm,
                                                                                            popularposts: popularposts,
                                                                                            form_details: form_details,
                                                                                        };
                                                                                        await fetch(BasePath + "templates/sidebar.html?v=" + BLOG_VER)
                                                                                            .then((response) => response.text())
                                                                                            .then(async (sidebarTemplate) => {
                                                                                                var rightSidebar = Mustache.to_html(sidebarTemplate, sidebarDetails);
                                                                                                document.getElementById("sidebar").innerHTML = rightSidebar;
                                                                                            });
                                                                                    }
                                                                                    console.log(blogdata);
                                                                                    var middle = Mustache.to_html(homeTemplate, blogdata);
                                                                                    document.getElementById("header").innerHTML = header;
                                                                                    document.getElementById("slider").innerHTML = slider;
                                                                                    document.getElementById("middle").innerHTML = middle;
                                                                                    document.getElementById("footer").innerHTML = footer;
                                                                                    let myCoolCode = document.createElement("script");
                                                                                    myCoolCode.setAttribute("src", BasePath + "js/loadmore.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(myCoolCode);
                                                                                    let mySliderCode = document.createElement("script");
                                                                                    mySliderCode.setAttribute("src", BasePath + "js/slider.js?v=" + BLOG_VER);
                                                                                    document.body.appendChild(mySliderCode);

                                                                                    let myGrooveMailCode = document.createElement("script");
                                                                                    myGrooveMailCode.setAttribute("src", "https://app.groovefunnels.com/groovemail/embed/app.js");
                                                                                    document.body.appendChild(myGrooveMailCode);
                                                                                    // document.getElementById("blogPostListWrapper").innerHTML = html;
                                                                                });
                                                                        });
                                                                }



                                                            });
                                                    });


                                            });
                                    });







                            });

                        return resolve("Success");


                    });















            });

        };
        window.onload = exampleFunction().then(async (res) => {
            console.log(res);
            var currTimestamp = Date.now();
            var utcDateString = (new Date(currTimestamp)).toUTCString();
            var timestamp = new Date(utcDateString).getTime();
            var BasePath = document.getElementById("blog-base").href;
            let script = document.createElement('script');
            $modulePath = document.getElementById("blog-base").href + "js/version.js?v=" + timestamp;
            let version = await import($modulePath);
            let BLOG_VER = version.updatedVersion();
            var postElement = document.getElementById("middle");
            postElement.classList.remove("hidden");
            let embedIframeScript = document.createElement('script');
            embedIframeScript.src = BasePath + 'js/embedIframe.js?v=' + BLOG_VER;
                document.head.appendChild(embedIframeScript);
            setTimeout(function () {
                let script = document.createElement('script');
                script.src = BasePath + 'js/embedads.js?v=' + BLOG_VER;
                document.head.appendChild(script);

            }, 6000);

        });
    </script>
</body>
</html>