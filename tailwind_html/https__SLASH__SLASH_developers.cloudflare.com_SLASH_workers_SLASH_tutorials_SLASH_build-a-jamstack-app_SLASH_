<!doctype html><html lang=en theme=light is-docs-page js-focus-visible-polyfill-available><meta charset=utf-8><title>Build a todo list JAMstack application · Cloudflare Workers docs</title><meta http-equiv=cleartype content="on"><meta http-equiv=x-ua-compatible content="IE=edge"><meta name=viewport content="width=device-width,initial-scale=1"><meta name=application-name content="Build a todo list JAMstack application · Cloudflare Workers docs"><meta name=msapplication-tap-highlight content="no"><meta name=apple-mobile-web-app-title content="Build a todo list JAMstack application · Cloudflare Workers docs"><meta name=apple-mobile-web-app-status-bar-style content="black"><meta name=apple-mobile-web-app-capable content="yes"><meta name=mobile-web-app-capable content="yes"><meta name=theme-color content="#f38020"><meta name=description content="Documentation for Cloudflare Workers, a serverless execution environment that allows you to create entirely new applications or augment existing ones without configuring or maintaining infrastructure."><meta property="og:image" content="https://developers.cloudflare.com/workers/static/og-image.png"><meta property="og:title" content="Build a todo list JAMstack application · Cloudflare Workers docs"><meta property="og:description" content="Documentation for Cloudflare Workers, a serverless execution environment that allows you to create entirely new applications or augment existing ones without configuring or maintaining infrastructure."><meta property="og:type" content="website"><meta name=twitter:title content="Build a todo list JAMstack application · Cloudflare Workers docs"><meta name=twitter:image content="https://developers.cloudflare.com/workers/static/og-image.png"><meta name=twitter:description content="Documentation for Cloudflare Workers, a serverless execution environment that allows you to create entirely new applications or augment existing ones without configuring or maintaining infrastructure."><meta name=twitter:creator content="@cloudflare"><meta name=twitter:card content="summary_large_image"><meta name=pcx_content_type content="tutorial"><link rel=icon href=/favicon-32x32.png><link rel=canonical href=https://developers.cloudflare.com/workers/tutorials/build-a-jamstack-app/><link rel=sitemap href=/sitemap.xml type=application/xml><link rel=manifest href=/manifest.webmanifest><link rel=apple-touch-icon sizes=48x48 href=/icons/icon-48x48.png><link rel=apple-touch-icon sizes=72x72 href=/icons/icon-72x72.png><link rel=apple-touch-icon sizes=96x96 href=/icons/icon-96x96.png><link rel=apple-touch-icon sizes=144x144 href=/icons/icon-144x144.png><link rel=apple-touch-icon sizes=192x192 href=/icons/icon-192x192.png><link rel=apple-touch-icon sizes=256x256 href=/icons/icon-256x256.png><link rel=apple-touch-icon sizes=384x384 href=/icons/icon-384x384.png><link rel=apple-touch-icon sizes=512x512 href=/icons/icon-512x512.png><script src=/search.redirect.min.823b5aa7bada45ae8f45f0fec0d50baf.js defer></script><link rel=stylesheet href=/style.css><script>(function(){let d=!1,a,c;document.readyState!=="loading"?e():addEventListener("DOMContentLoaded",e),a=document.querySelector("#ThemeToggle"),d=!a;function b(c){try{let e=c?"dark":"light";document.documentElement.setAttribute("theme",e),localStorage.theme=JSON.stringify({theme:e}),a?(a.checked=c,d=!1):d&&setTimeout(b,1,c)}catch(a){}}function e(){a=a||document.querySelector("#ThemeToggle"),a.addEventListener("change",()=>b(!!a.checked)),addEventListener("keydown",c=>{c.target===document.body&&c.which===68&&c.shiftKey&&(c.preventDefault(),b(!a.checked))})}try{c=window.matchMedia("(prefers-color-scheme:dark)"),c.onchange=a=>b(a.matches)}catch(a){}try{let a=localStorage.theme,d=a&&JSON.parse(a);b(d?/dark/.test(d.theme):!!(c&&c.matches))}catch(a){}})()</script><script src=/main.min.8a55f94d9581ec4acb860aca25d08dc3.js defer></script>
<script data-source=docs async defer src=https://feedback.developers.cloudflare.com/sdk.js></script>
<link rel=preload href=https://feedback.developers.cloudflare.com/sdk.css as=style onload="this.onload=null,this.rel='stylesheet'"><noscript><link rel=stylesheet href=https://feedback.developers.cloudflare.com/sdk.css></noscript><div class=DocsPage><div><a class=skip-link href=#main>Skip to content</a></div><div class=DocsMobileHeader><a class="DocsMobileHeader--cloudflare-logo-link Link Link-without-underline" href=/><div class="DocsNavLogoLockup DocsNavLogoLockup-with-small-gap"><div class=DocsNavLogoLockup--logo><svg viewBox="0 0 48 48" fill="currentcolor" role="img" aria-labelledby="title-27458391960035233" xmlns="http://www.w3.org/2000/svg"><title id="title-27458391960035233">Cloudflare Docs logomark</title><path d="M31.236 28.717c-.373-.548-1.003-.864-1.76-.9l-14.353-.195a.262.262.0 01-.221-.122.348.348.0 01-.035-.267.396.396.0 01.338-.268l14.48-.195c1.714-.085 3.58-1.533 4.232-3.309l.828-2.25a.503.503.0 00.023-.292c-.932-4.404-4.698-7.689-9.198-7.689-4.15.0-7.672 2.798-8.931 6.679a4.156 4.156.0 00-2.973-.864c-1.994.207-3.59 1.874-3.789 3.954a4.84 4.84.0 00.105 1.545c-3.253.097-5.853 2.871-5.853 6.29.0.304.024.608.059.912.023.146.14.256.28.256h26.488c.151.0.291-.11.338-.268l.198-.742c.245-.876.152-1.68-.256-2.275zm4.826-7.327c-.128.0-.268.0-.396.012-.093.0-.175.073-.21.17l-.56 2.032c-.244.876-.151 1.679.257 2.275.373.548 1.003.864 1.76.9l3.055.195c.093.0.175.049.222.122a.356.356.0 01.035.267.396.396.0 01-.339.268l-3.182.195c-1.726.085-3.58 1.532-4.232 3.309l-.234.62c-.046.122.035.243.164.243h10.935a.289.289.0 00.28-.219 8.654 8.654.0 00.292-2.214c0-4.501-3.521-8.175-7.847-8.175" /></svg></div><span class=DocsNavLogoLockup--text><span data-text=Cloudflare>Cloudflare</span>
<span data-text=Docs>Docs</span></span></div></a></div><div class=DocsMobileTitleHeader><a aria-current=page class="DocsMobileTitleHeader--logo-link Link Link-without-underline" href=/workers/><div class="DocsNavLogoLockup DocsNavLogoLockup-with-small-gap"><div class=DocsNavLogoLockup--logo><span title="Cloudflare Workers logo"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 49"><path d="m18.63 37.418-9.645-12.9 9.592-12.533-1.852-2.527L5.917 23.595l-.015 1.808 10.86 14.542 1.868-2.527z" /><path d="M21.997 6.503h-3.712l13.387 18.3-13.072 17.7h3.735L35.4 24.81 21.997 6.503z" /><path d="M29.175 6.503h-3.758l13.598 18.082-13.598 17.918h3.765l12.908-17.01v-1.808L29.175 6.503z" /></svg></span></div><span class=DocsNavLogoLockup--text><span class=DocsSidebar--docs-title-text-scaler style=--length:7>Workers</span></span></div></a><button class="Button DocsMobileTitleHeader--sidebar-toggle-button">
<span class=DocsMobileTitleHeader--sidebar-toggle-button-icon aria-hidden=true><svg viewBox="0 0 20 20" fill="none" stroke="currentcolor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" role="img" aria-labelledby="title-1332672649688018" xmlns="http://www.w3.org/2000/svg"><title id="title-1332672649688018">Navigation menu icon</title><path data-index="1" d="M5 7h10" transform-origin="10 7" /><path data-index="2" d="M5 10h10" transform-origin="10 10" /><path data-index="3" d="M5 13h10" transform-origin="10 13" /></svg><span is-visually-hidden>Open external link</span></span></button></div><div class=DocsMobileNavBackdrop></div><div class=DocsSidebar><div class=DocsSidebar--sections><div class="DocsSidebar--section DocsSidebar--header-section"><a class="DocsSidebar--cloudflare-logo-link DocsSidebar--link" href=/><div class=DocsNavLogoLockup><div class=DocsNavLogoLockup--logo><svg viewBox="0 0 48 48" fill="currentcolor" role="img" aria-labelledby="title-27458391960035233" xmlns="http://www.w3.org/2000/svg"><title id="title-27458391960035233">Cloudflare Docs logomark</title><path d="M31.236 28.717c-.373-.548-1.003-.864-1.76-.9l-14.353-.195a.262.262.0 01-.221-.122.348.348.0 01-.035-.267.396.396.0 01.338-.268l14.48-.195c1.714-.085 3.58-1.533 4.232-3.309l.828-2.25a.503.503.0 00.023-.292c-.932-4.404-4.698-7.689-9.198-7.689-4.15.0-7.672 2.798-8.931 6.679a4.156 4.156.0 00-2.973-.864c-1.994.207-3.59 1.874-3.789 3.954a4.84 4.84.0 00.105 1.545c-3.253.097-5.853 2.871-5.853 6.29.0.304.024.608.059.912.023.146.14.256.28.256h26.488c.151.0.291-.11.338-.268l.198-.742c.245-.876.152-1.68-.256-2.275zm4.826-7.327c-.128.0-.268.0-.396.012-.093.0-.175.073-.21.17l-.56 2.032c-.244.876-.151 1.679.257 2.275.373.548 1.003.864 1.76.9l3.055.195c.093.0.175.049.222.122a.356.356.0 01.035.267.396.396.0 01-.339.268l-3.182.195c-1.726.085-3.58 1.532-4.232 3.309l-.234.62c-.046.122.035.243.164.243h10.935a.289.289.0 00.28-.219 8.654 8.654.0 00.292-2.214c0-4.501-3.521-8.175-7.847-8.175" /></svg></div><span class=DocsNavLogoLockup--text><span data-text=Cloudflare>Cloudflare</span>
<span data-text=Docs>Docs</span></span></div></a></div><div class=DocsSidebar--section-separator></div><div class="DocsSidebar--section DocsSidebar--docs-title-section"><a aria-current=page class="DocsSidebar--docs-title-logo-link DocsSidebar--link" href=/workers/><div class=DocsNavLogoLockup><div class=DocsNavLogoLockup--logo><span title="Cloudflare Workers logo"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 49"><path d="m18.63 37.418-9.645-12.9 9.592-12.533-1.852-2.527L5.917 23.595l-.015 1.808 10.86 14.542 1.868-2.527z" /><path d="M21.997 6.503h-3.712l13.387 18.3-13.072 17.7h3.735L35.4 24.81 21.997 6.503z" /><path d="M29.175 6.503h-3.758l13.598 18.082-13.598 17.918h3.765l12.908-17.01v-1.808L29.175 6.503z" /></svg></span></div><span class=DocsNavLogoLockup--text><span class=DocsSidebar--docs-title-text-scaler style=--length:7>Workers</span></span></div></a><div class="DocsSidebar--section-more Dropdown" data-expanded=false><button class="DocsSidebar--section-more-button Button" aria-expanded=false><div class=DocsSidebar--section-more-button-icon><svg viewBox="0 0 4 16" stroke="currentcolor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true" fill="currentcolor" role="img" aria-labelledby="title-6032186738345315" xmlns="http://www.w3.org/2000/svg"><title id="title-6032186738345315">Dropdown icon</title><path d="M2 2v0m0 6v0m0 6v0z" /></svg><span is-visually-hidden>Workers menu</span></div></button><div class="DocsSidebar--section-more-dropdown Dropdown--dropdown"><ul class=Dropdown--list><li class=Dropdown--item><a class=Dropdown--link href=https://workers.cloudflare.com tabindex=-1>Workers home</a><li class=Dropdown--item><a class=Dropdown--link href=https://cloudflareworkers.com tabindex=-1>Playground</a><li class=Dropdown--item><a class=Dropdown--link href=https://workers.cloudflare.com/#plans tabindex=-1>Pricing</a><li class=Dropdown--item><a class=Dropdown--link href=https://discord.gg/cloudflaredev tabindex=-1>Discord</a></ul></div></div></div><div class="DocsSidebar--section DocsSidebar--nav-section" style=position:relative;overflow:hidden;width:100%;height:100%><div style=position:absolute;inset:0;overflow-y:auto;margin-right:0;margin-bottom:0><div class=DocsSidebar--nav-section-shadow style=opacity:0></div><ul class=DocsSidebar--nav><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Overview</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button">
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Get started</span>
</button><a class=DocsSidebar--nav-link href=/workers/get-started/>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Get started</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=1 style=--depth:1><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/get-started/guide/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Guide</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/get-started/storage-objects/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Storage options guide</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/get-started/quickstarts/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Quickstarts</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/examples/><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Examples</span></a><li class=DocsSidebar--nav-item is-active-root is-expanded><a class=DocsSidebar--nav-link href=/workers/tutorials/><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Tutorials</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button">
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Learning</span>
</button><a class=DocsSidebar--nav-link href=/workers/learning/>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Learning</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=1 style=--depth:1><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/how-workers-works/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>How Workers works</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/security-model/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Security model</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/debugging-workers/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Debugging Workers</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/logging-workers/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Logging from Workers</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/metrics-and-analytics/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Metrics and analytics</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/how-the-cache-works/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>How the Cache works</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/how-kv-works/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>How KV works</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/migrating-to-module-workers/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Migrating to module Workers</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/service-worker/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Using Service Worker syntax</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/using-durable-objects/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Using Durable Objects</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/using-streams/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Using Streams</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/using-websockets/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Using WebSockets</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/using-services/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Workers Services</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/integrations/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Integrations</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/learning/playground/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Playground</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button">
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Platform</span>
</button><a class=DocsSidebar--nav-link href=/workers/platform/>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Platform</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=1 style=--depth:1><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/betas/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Betas</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Bindings</span>
</button><a class=DocsSidebar--nav-link href=/workers/platform/bindings/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Bindings</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/bindings/about-service-bindings/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>About Service bindings</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/changelog/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Changelog</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/compatibility-dates/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Compatibility dates</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/cron-triggers/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Cron Triggers</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Custom Domains</span>
</button><a class=DocsSidebar--nav-link href=/workers/platform/routing/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Custom Domains</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/routing/custom-domains/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Custom Domains</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/routing/routes/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Routes</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/deploy-button/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Deploy button</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/environment-variables/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Environment variables</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/environments/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Environments</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/known-issues/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Known issues</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/languages/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Languages</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/limits/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Limits</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/workers-with-page-rules/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Page Rules</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/pricing/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Pricing</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/notifications/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Usage notifications</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Workers Sites</span>
</button><a class=DocsSidebar--nav-link href=/workers/platform/sites/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Workers Sites</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/sites/start-from-existing/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Start from existing</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/sites/start-from-scratch/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Start from scratch</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/sites/start-from-worker/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Start from worker</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/platform/sites/configuration/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Workers Sites configuration</span></a></ul></div></div></div></div></ul></div></div></div></div><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button">
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Runtime APIs</span>
</button><a class=DocsSidebar--nav-link href=/workers/runtime-apis/>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Runtime APIs</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=1 style=--depth:1><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/add-event-listener/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>addEventListener</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/cache/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Cache</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/durable-objects/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Durable Objects</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/encoding/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Encoding</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/fetch/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Fetch</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/fetch-event/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>FetchEvent</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/headers/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Headers</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/html-rewriter/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>HTMLRewriter</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/kv/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>KV</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/r2/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>R2</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/request/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Request</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/response/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Response</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/scheduled-event/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>ScheduledEvent</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/service-bindings/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Service bindings</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Streams</span>
</button><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Streams</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/readablestream/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>ReadableStream</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/readablestreambyobreader/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>ReadableStream BYOBReader</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/readablestreamdefaultreader/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>ReadableStream DefaultReader</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/transformstream/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>TransformStream</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/writablestream/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>WritableStream</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/streams/writablestreamdefaultwriter/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>WritableStream DefaultWriter</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/web-crypto/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Web Crypto</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/web-standards/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Web standards</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/runtime-apis/websockets/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>WebSockets</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button">
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Wrangler</span>
</button><a class=DocsSidebar--nav-link href=/workers/wrangler/>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Wrangler</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=1 style=--depth:1><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/get-started/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Get started</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/commands/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Commands</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/configuration/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Configuration</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/workers-kv/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Workers KV</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/custom-builds/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Custom builds</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/module-system/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Module System</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/environments/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Environments</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/ci-cd/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Running in CI/CD</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/compare-v1-v2/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Comparing Wrangler 1 & 2</span></a><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Migration</span>
</button><a class=DocsSidebar--nav-link href=/workers/wrangler/migration/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Migration</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/migration/migrating-from-wrangler-1/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Migrating from Wrangler 1</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/migration/deprecations/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Deprecations</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/migration/eject-webpack/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Ejecting webpack</span></a></ul></div></div></div></div><li class=DocsSidebar--nav-item><button class="Button DocsSidebar--nav-expand-collapse-button" tabindex=-1>
<span class=DocsSidebar--nav-expand-collapse-button-content aria-hidden=true></span>
<span is-visually-hidden>Expand: Wrangler 1 (legacy)</span>
</button><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/ tabindex=-1>
<span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Wrangler 1 (legacy)</span></a><div class="DocsSidebar--nav-item-collapse-container DocsSidebar--nav-item-collapse-hidden" style=min-height:0><div class=DocsSidebar--nav-item-collapse-wrapper><div class=DocsSidebar--nav-item-collapse-wrapperInner><div class=DocsSidebar--nav-item-collapse-content><ul class=DocsSidebar--nav-subnav depth=2 style=--depth:2><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/install-update/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Install / Update</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/authentication/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Authentication</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/commands/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Commands</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/configuration/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Configuration</span></a><li class=DocsSidebar--nav-item><a class=DocsSidebar--nav-link href=/workers/wrangler/cli-wrangler/webpack/ tabindex=-1><span class=DocsSidebar--nav-link-highlight></span>
<span class=DocsSidebar--nav-link-text>Webpack</span></a></ul></div></div></div></div></ul></div></div></div></div></ul></div><div style=position:absolute;height:6px;display:none;right:2px;bottom:2px;left:2px;border-radius:3px><div style=position:relative;display:block;height:100%;cursor:pointer;border-radius:inherit;background-color:rgba(0,0,0,.2)></div></div><div style=position:absolute;width:6px;display:none class="Scrollbars--track Scrollbars--track-vertical"><div style=position:relative;display:block;width:100% class="Scrollbars--thumb Scrollbars--thumb-vertical"></div></div></div></div><div class=DocsSidebar--shadow></div></div><div class=DocsToolbar><div class=DocsToolbar--search><div class=DocsSearch><div class=DocsSearch--input-wrapper><input id=DocsSearch--input class=DocsSearch--input spellcheck=false autocomplete=false placeholder="Search docs..."><div class=DocsSearch--input-icon><svg viewBox="0 0 16 16" fill="currentcolor" role="img" aria-labelledby="title-9701125841014673" xmlns="http://www.w3.org/2000/svg"><title id="title-9701125841014673">Search icon (depiction of a magnifying glass)</title><path d="M11.999 10.585l3.458 3.458a1 1 0 01-1.414 1.414L10.585 12a6.5 6.5.0 111.414-1.414zM6.75 11.5a4.75 4.75.0 100-9.5 4.75 4.75.0 000 9.5z" /></svg></div><button disabled class=slashPlaceholder title="Press '/' to focus on the search bar" aria-label="Forward slash keyboard shortcut" tabindex=-1 type=button><div style=margin-top:-1px>/</span></div></button></div></div></div><div class=DocsToolbar--tools><button data-feedback=true class="DocsToolbar--feedback Button Button-is-docs-secondary">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 17"><path d="M14 2.5H2l-.5.5v11.165l.863.345 2.852-3.01H14l.5-.5V3l-.5-.5zm-.5 8H4.785L2.5 12.911V3.5h11v7z" fill="currentcolor" /><path d="M12.5 5.003h-9v1h9v-1zm0 2.497h-9v1h9v-1z" fill="currentcolor" /></svg>Give Feedback</button><div class=DocsToolbar--tools-spacer></div><div class=DocsToolbar--tools-icon-item><div class=Tooltip---root><div class=DocsToolbar--tools-icon-item-content><a class="Link Link-without-underline" href=https://github.com/cloudflare/cloudflare-docs><svg viewBox="0 0 16 16" fill="currentcolor" role="img" aria-labelledby="title-6991762763429039" xmlns="http://www.w3.org/2000/svg"><title id="title-6991762763429039">GitHub icon</title><path d="M8 0C3.58.0.0 3.58.0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38.0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95.0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12.0.0.67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15.0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48.0 1.07-.01 1.93-.01 2.2.0.21.15.46.55.38A8.013 8.013.0 0016 8c0-4.42-3.58-8-8-8z" fill-rule="evenodd" /></svg></a></div><span class=Tooltip role=tooltip position=bottom-end>Visit Workers on GitHub</span></div></div><div class=DocsToolbar--tools-spacer></div><div class=DocsToolbar--theme-toggle><div class=Tooltip---root><div class=ThemeToggle><input type=checkbox id=ThemeToggle class=ThemeToggle--input>
<label class=ThemeToggle--toggle for=ThemeToggle><div class=ThemeToggle--toggle-handle></div><div class="ThemeToggle--toggle-handle-icon ThemeToggle--sun"><svg viewBox="0 0 16 16" fill="currentcolor" role="img" aria-labelledby="title-8812071124069258" xmlns="http://www.w3.org/2000/svg"><title id="title-8812071124069258">Light theme icon (depiction of a sun)</title><path d="M7.5 11.465a3.482 3.482.0 01-1.596-.662L4.11 12.596a.5.5.0 01-.707-.707l1.793-1.793A3.482 3.482.0 014.535 8.5H2a.5.5.0 010-1h2.535a3.482 3.482.0 01.662-1.596L3.404 4.11a.5.5.0 01.707-.707l1.793 1.793A3.482 3.482.0 017.5 4.535V2a.5.5.0 011 0v2.535a3.482 3.482.0 011.596.662l1.793-1.793a.5.5.0 01.707.707l-1.793 1.793c.343.458.577 1.003.662 1.596H14a.5.5.0 110 1h-2.535a3.482 3.482.0 01-.662 1.596l1.793 1.793a.5.5.0 01-.707.707l-1.793-1.793a3.482 3.482.0 01-1.596.662V14a.5.5.0 11-1 0v-2.535z" /></svg></div><div class="ThemeToggle--toggle-handle-icon ThemeToggle--moon"><svg viewBox="0 0 16 16" fill="currentcolor" role="img" aria-labelledby="title-5971296394189265" xmlns="http://www.w3.org/2000/svg"><title id="title-5971296394189265">Dark theme icon (depiction of a moon)</title><path d="M7.067 3.087a5 5 0 005.466 7.026A5 5 0 117.067 3.087z" /></svg></div></label><span class=Tooltip role=tooltip position=bottom-end>Set theme to dark (⇧+D)</span></div></div></div></div></div><main class=DocsBody><div class=DocsBody--sidebar with-styled-webkit-scrollbars><div class=DocsBody--sidebar-content-scroll-fade></div><div class=DocsBody--sidebar-content><ul class=DocsTableOfContents hidden><li><a class=DocsTableOfContents-link href=#docs-content>↑ Top</a></ul></nav></div></div><div id=docs-content data-reach-skip-nav-content></div><div class=DocsContent id=main page-type=document><article class=DocsMarkdown><h1 id=build-a-todo-list-jamstack-application>Build a todo list JAMstack application</h1><h2 id=before-you-start><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#before-you-start>&#8203;​</a></span>
<span>Before you start</span></h2><p>All of the tutorials assume you have already completed the <a href=/workers/get-started/guide/ class=DocsMarkdown--link><span class=DocsMarkdown--link-content>Get started guide</span></a>, which gets you set up with a Cloudflare Workers account, and the Workers CLI tool, <a href=https://github.com/cloudflare/wrangler class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>Wrangler</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span>
</span></a>.<h2 id=overview><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#overview>&#8203;​</a></span>
<span>Overview</span></h2><p>In this tutorial, you will build a todo list application using HTML, CSS, and JavaScript. The application data will be stored in <a href=/workers/runtime-apis/kv/ class=DocsMarkdown--link><span class=DocsMarkdown--link-content>Workers KV</span></a>.<p><img src=./media/finished.png alt="Preview of a finished todo list. Continue reading for instructions on how to set up a todo list."><p>Before starting this project, you should have some experience with HTML, CSS, and JavaScript. You will learn:<ol><li>How building with Workers makes it easy to focus on writing code and ship finished products.<li>How the addition of Workers KV makes this tutorial a great introduction to building full, data-driven applications.</ol><p>If you would like to see the finished code for this project, find the <a href=https://github.com/signalnerve/cloudflare-workers-todos class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>project on GitHub</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span></span></a> and refer to the <a href=https://todos.signalnerve.workers.dev/ class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>live demo</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span></span></a> to review what you will be building.<h2 id=init><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#init>&#8203;​</a></span>
<span>Init</span></h2><p>Cloudflare offers a collection of pre-built examples for getting started with Workers. These are often referred to as templates, each of which emphasizes a particular use case or language. Wrangler, Cloudflare’s command-line tool for managing Worker projects, integrates with all templates so that it is even easier to start writing Workers. In this tutorial, you will use the default JavaScript template to create a Workers project.<p>In your terminal, create a Worker project with your desired project name; for example, <code>todos</code>:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-sh" language=sh><span class=CodeBlock--header>Generate a project</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-command CodeBlock--token-prompt CodeBlock--token-unselectable">$ </span><span class=CodeBlock--token-command>wrangler init todos</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-command CodeBlock--token-prompt CodeBlock--token-unselectable">$ </span><span class=CodeBlock--token-command>cd todos</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Wrangler templates are Git repositories. You can create your own templates or use one from the <a href=/workers/get-started/quickstarts/#templates/ class=DocsMarkdown--link><span class=DocsMarkdown--link-content>Template Gallery</span></a>.<p>Wrangler’s default template includes support for building and deploying JavaScript-based projects, including Webpack support. Inside of your new <code>todos</code> directory, <code>index.js</code> represents the entry point to your Cloudflare Workers application.<p>All Cloudflare Workers applications start by listening for <code>fetch</code> events, which are triggered when a client makes a request to a Workers route. When that request occurs, your constructed response will be returned to the user. This tutorial will guide you through understanding how the request/response pattern works and how you can use it to build fully featured applications.<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-function>addEventListener</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'fetch'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>event</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>respondWith</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-comment>/**</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-comment> * Fetch and log a request</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-comment> * @param {Request} request</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-comment> */</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'Hello worker!'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>200</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>In your default <code>index.js</code> file, you can see that request/response pattern in action. The <code>handleRequest</code> constructs a new <code>Response</code> with the body text <code>"Hello worker!"</code>, as well as an explicit <code>200</code> status code. When a Worker receives a <code>fetch</code> event, the script must use <code>event.respondWith</code> to return the newly constructed response to the client. This means that your Cloudflare Worker script will serve new responses directly from <a href=https://www.cloudflare.com/network class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>Cloudflare&rsquo;s edge network</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span>
</span></a>.<p>If you compare this with more traditional architectures, where an origin server would accept requests and return responses, Cloudflare Workers allows you to do the same work without managing hardware and closer to the client, resulting in reduced cost and latencies.<h2 id=build><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#build>&#8203;​</a></span>
<span>Build</span></h2><p>The code provided by the default Wrangler template generates a simple text response and returns it to the client. In this tutorial, you will build off of that approach by reading data from KV and using it to populate an HTML response to send to the client.<p>The work needed to create this application is split into three tasks:<ol><li>Write data to KV.<li>Rendering data from KV.<li>Adding todos from the application UI.</ol><p>For the remainder of this tutorial you will complete each task, iterating on your application, and then publish it to your own domain.<h3 id=writing-data-to-kv><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#writing-data-to-kv>&#8203;​</a></span>
<span>Writing data to KV</span></h3><p>To begin, you need to understand how to populate your todo list with actual data. To do this, use Cloudflare Workers KV — a key-value store that you can access inside of your Worker script to read and write data.<p>To get started with KV, set up a namespace. All of your cached data will be stored inside that namespace and, with configuration, you can access that namespace inside the script with a predefined variable. Use Wrangler to create a new namespace and get the associated namespace ID by running the following command in your terminal:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-sh" language=sh><span class=CodeBlock--header>Create a new KV namespace</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-command CodeBlock--token-prompt CodeBlock--token-unselectable">$ </span><span class=CodeBlock--token-command>wrangler kv:namespace create &quot;TODOS&quot; --preview</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Namespaces can be added to your application by defining them inside your Wrangler configuration. Copy your newly created namespace ID, and in your <code>wrangler.toml</code>, define a <code>kv_namespaces</code> key to set up your namespace:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-toml" language=toml><span class=CodeBlock--filename>wrangler.toml</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-key CodeBlock--token-property">kv_namespaces</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>{</span><span class="CodeBlock--token-key CodeBlock--token-property">binding</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>&quot;TODOS&quot;</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-key CodeBlock--token-property">id</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>&quot;abcdef123&quot;</span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>The defined namespace, <code>TODOS</code>, will now be available inside of your codebase. With that, it is time to understand the KV API. A KV namespace has three primary methods you can use to interface with your cache: <code>get</code>, <code>put</code>, and <code>delete</code>.<p>Start storing data by defining an initial set of data, which you will put inside of the cache using the <code>put</code> method. The following example defines a <code>defaultData</code> object instead of a simple array of todos. You may want to store metadata and other information inside of this cache object later on. Given that data object, use <code>JSON.stringify</code> to put a string into the cache:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> defaultData </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-literal-property>todos</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>      </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>        </span><span class=CodeBlock--token-literal-property>id</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>1</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>        </span><span class=CodeBlock--token-literal-property>name</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'Finish the Cloudflare Workers blog post'</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>        </span><span class=CodeBlock--token-literal-property>completed</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-boolean>false</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>      </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>put</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'data'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>defaultData</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-comment>// ...previous code</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Workers KV is an eventually consistent, global datastore. Any writes within a region are immediately reflected within that same region but will not be immediately available in other regions. However, those writes will eventually be available everywhere and, at that point, Workers KV guarantees that data within each region will be consistent.<p>Given the presence of data in the cache and the assumption that your cache is eventually consistent, this code needs a slight adjustment: the application should check the cache and use its value, if the key exists. If it does not, you will use <code>defaultData</code> as the data source for now (it should be set in the future) and write it to the cache for future use. After breaking out the code into a few functions for simplicity, the result looks like this:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> defaultData </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-literal-property>todos</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>      </span><span class=CodeBlock--token-literal-property>id</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>1</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>      </span><span class=CodeBlock--token-literal-property>name</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'Finish the Cloudflare Workers blog post'</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>      </span><span class=CodeBlock--token-literal-property>completed</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-boolean>false</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>setCache</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>data</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>put</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'data'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>getCache</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'data'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-comment>// ... previous code</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>let</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> cache </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>if</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-operator>!</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>defaultData</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> defaultData</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>else</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><h3 id=rendering-data-from-kv><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#rendering-data-from-kv>&#8203;​</a></span>
<span>Rendering data from KV</span></h3><p>Given the presence of data in your code, which is the cached data object for your application, you should take this data and render it in a user interface.<p>To do this, make a new <code>html</code> variable in your Workers script and use it to build up a static HTML template that you can serve to the client. In <code>handleRequest</code>, construct a new <code>Response</code> with a <code>Content-Type: text/html</code> header and serve it to the client:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> html </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!DOCTYPE html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lthead&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta charset=&quot;UTF-8&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lttitle&gtTodos&lt/title&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/head&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltbody&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lth1&gtTodos&lt/h1&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/body&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> response </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>html</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-literal-property>headers</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string-property>'Content-Type'</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'text/html'</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> response</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>You have a static HTML site being rendered and you can begin populating it with data. In the body, add a <code>div</code> tag with an <code>id</code> of <code>todos</code>:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> html </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!DOCTYPE html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lthead&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta charset=&quot;UTF-8&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lttitle&gtTodos&lt/title&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/head&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltbody&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lth1&gtTodos&lt/h1&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltdiv id=&quot;todos&quot;&gt&lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/body&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Add a <code>&lt;script></code> element at the end of the body content that takes a <code>todos</code> array. For each <code>todo</code> in the array, create a <code>div</code> element and appends it to the <code>todos</code> HTML element:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> html </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!DOCTYPE html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lthead&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta charset=&quot;UTF-8&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot; /&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lttitle&gtTodos&lt/title&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/head&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltbody&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lth1&gtTodos&lt/h1&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltdiv id=&quot;todos&quot;&gt&lt/div&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltscript&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos = []</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var el = document.createElement(&quot;div&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.textContent = todo.name</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todoContainer.appendChild(el)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/body&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Your static page can take in <code>window.todos</code> and render HTML based on it, but you have not actually passed in any data from KV. To do this, you will need to make a few changes.<p>First, your <code>html</code> variable will change to a function. The function will take in a <code>todos</code> argument, which will populate the <code>window.todos</code> variable in the above code sample:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    window.todos = </span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">todos</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    // ...</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>In <code>handleRequest</code>, use the retrieved KV data to call the <code>html</code> function and generate a <code>Response</code> based on it:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>html</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>data</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>todos</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>replace</span><span class=CodeBlock--token-punctuation>(</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-source CodeBlock--token-language-regex">&lt</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-flags">g</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'\\u003c'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> response </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-literal-property>headers</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string-property>'Content-Type'</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'text/html'</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> response</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><h3 id=adding-todos-from-the-ui><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#adding-todos-from-the-ui>&#8203;​</a></span>
<span>Adding todos from the UI</span></h3><p>At this point, you have built a Cloudflare Worker that takes data from Cloudflare KV and renders a static page based on that Worker. That static page reads data and generates a todo list based on that data. The remaining task is creating todos from inside the application UI. You can add todos using the KV API — update the cache by running <code>TODOS.put(newData)</code>.<p>To update a todo item, you will add a second handler in your Workers script, designed to watch for <code>PUT</code> requests to <code>/</code>. When a request body is received at that URL, the Worker will send the new todo data to your KV store.<p>Add this new functionality in <code>handleRequest</code>: if the request method is a PUT, it will take the request body and update the cache.<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-function>addEventListener</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'fetch'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>event</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>respondWith</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>setCache</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>data</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>put</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'data'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>updateTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>text</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>try</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>200</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>catch</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>500</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>if</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>method </span><span class=CodeBlock--token-operator>===</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'PUT'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>updateTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>else</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-comment>// Defined in previous code block</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Check that the request is a <code>PUT</code> and wrap the remainder of the code in a <code>try/catch</code> block. First, parse the body of the request coming in, ensuring that it is JSON, before you update the cache with the new data and return it to the user. If anything goes wrong, return a <code>500</code> status code. If the route is hit with an HTTP method other than <code>PUT</code> — for example, <code>POST</code> or <code>DELETE</code> — return a <code>404</code> error.<p>With this script, you can now add some dynamic functionality to your HTML page to actually hit this route. First, create an input for your todo name and a button for submitting the todo.<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltdiv&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltinput type=&quot;text&quot; name=&quot;name&quot; placeholder=&quot;A new todo&quot;&gt&lt/input&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltbutton id=&quot;create&quot;&gtCreate&lt/button&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing script --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Given that input and button, add a corresponding JavaScript function to watch for clicks on the button — once the button is clicked, the browser will <code>PUT</code> to <code>/</code> and submit the todo.<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    // Existing JavaScript code</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var createTodo = function() {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var input = document.querySelector(&quot;input[name=name]&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      if (input.value.length) {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todos = [].concat(todos, {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          id: todos.length + 1,</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          name: input.value,</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          completed: false,</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        })</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        fetch(&quot;/&quot;, {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          method: &quot;PUT&quot;,</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          body: JSON.stringify({ todos: todos }),</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        })</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      }</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    document.querySelector(&quot;#create&quot;).addEventListener(&quot;click&quot;, createTodo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>This code updates the cache. Remember that the KV cache is eventually consistent — even if you were to update your Worker to read from the cache and return it, you have no guarantees it will actually be up to date. Instead, update the list of todos locally, by taking your original code for rendering the todo list, making it a re-usable function called <code>populateTodos</code>, and calling it when the page loads and when the cache request has finished:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var populateTodos = function() {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todoContainer.innerHTML = null</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var el = document.createElement(&quot;div&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.textContent = todo.name</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todoContainer.appendChild(el)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    populateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var createTodo = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var input = document.querySelector(&quot;input[name=name]&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      if (input.value.length) {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todos = [].concat(todos, {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          id: todos.length + 1,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          name: input.value,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          completed: false,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        fetch(&quot;/&quot;, {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          method: &quot;PUT&quot;,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          body: JSON.stringify({ todos: todos }),</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        populateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        input.value = &quot;&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    document.querySelector(&quot;#create&quot;).addEventListener(&quot;click&quot;, createTodo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>With the client-side code in place, deploying the new version of the function should put all these pieces together. The result is an actual dynamic todo list.<h3 id=updating-todos-from-the-application-ui><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#updating-todos-from-the-application-ui>&#8203;​</a></span>
<span>Updating todos from the application UI</span></h3><p>For the final piece of your todo list, you need to be able to update todos — specifically, marking them as completed.<p>Luckily, a great deal of the infrastructure for this work is already in place. You can update the todo list data in the cache, as evidenced by your <code>createTodo</code> function. Performing updates on a todo is more of a client-side task than a Worker-side one.<p>To start, the <code>populateTodos</code> function can be updated to generate a <code>div</code> for each todo. In addition, move the name of the todo into a child element of that <code>div</code>:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var populateTodos = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todoContainer.innerHTML = null</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var el = document.createElement(&quot;div&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var name = document.createElement(&quot;span&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        name.textContent = todo.name</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.appendChild(name)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todoContainer.appendChild(el)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>You have designed the client-side part of this code to handle an array of todos and render a list of simple HTML elements. There is a number of things that you have been doing that you have not quite had a use for yet – specifically, the inclusion of IDs and updating the todo&rsquo;s completed state. These things work well together to actually support updating todos in the application UI.<p>To start, it would be useful to attach the ID of each todo in the HTML. By doing this, you can then refer to the element later in order to correspond it to the todo in the JavaScript part of your code. Data attributes and the corresponding <code>dataset</code> method in JavaScript are a perfect way to implement this. When you generate your <code>div</code> element for each todo, you can attach a data attribute called todo to each <code>div</code>:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var populateTodos = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todoContainer.innerHTML = null</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var el = document.createElement(&quot;div&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.dataset.todo = todo.id</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var name = document.createElement(&quot;span&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        name.textContent = todo.name</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.appendChild(name)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todoContainer.appendChild(el)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>Inside your HTML, each <code>div</code> for a todo now has an attached data attribute, which looks like:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-html" language=html><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-tag CodeBlock--token-tag CodeBlock--token-punctuation">&lt</span><span class="CodeBlock--token-tag CodeBlock--token-tag">div</span><span class=CodeBlock--token-tag> </span><span class="CodeBlock--token-tag CodeBlock--token-attr-name">data-todo</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation CodeBlock--token-attr-equals">=</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation">&quot;</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value">1</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation">&quot;</span><span class="CodeBlock--token-tag CodeBlock--token-punctuation">&gt</span><span class="CodeBlock--token-tag CodeBlock--token-tag CodeBlock--token-punctuation">&lt/</span><span class="CodeBlock--token-tag CodeBlock--token-tag">div</span><span class="CodeBlock--token-tag CodeBlock--token-punctuation">&gt</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-tag CodeBlock--token-tag CodeBlock--token-punctuation">&lt</span><span class="CodeBlock--token-tag CodeBlock--token-tag">div</span><span class=CodeBlock--token-tag> </span><span class="CodeBlock--token-tag CodeBlock--token-attr-name">data-todo</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation CodeBlock--token-attr-equals">=</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation">&quot;</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value">2</span><span class="CodeBlock--token-tag CodeBlock--token-attr-value CodeBlock--token-punctuation">&quot;</span><span class="CodeBlock--token-tag CodeBlock--token-punctuation">&gt</span><span class="CodeBlock--token-tag CodeBlock--token-tag CodeBlock--token-punctuation">&lt/</span><span class="CodeBlock--token-tag CodeBlock--token-tag">div</span><span class="CodeBlock--token-tag CodeBlock--token-punctuation">&gt</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>You can now generate a checkbox for each todo element. This checkbox will default to unchecked for new todos but you can mark it as checked as the element is rendered in the window:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    window.todos.forEach(todo =&gt {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var el = document.createElement(&quot;div&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      el.dataset.todo = todo.id</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var name = document.createElement(&quot;span&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      name.textContent = todo.name</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var checkbox = document.createElement(&quot;input&quot;)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      checkbox.type = &quot;checkbox&quot;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      checkbox.checked = todo.completed ? 1 : 0</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      el.appendChild(checkbox)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      el.appendChild(name)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todoContainer.appendChild(el)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>The checkbox is set up to correctly reflect the value of completed on each todo but it does not yet update when you actually check the box. To do this, attach the <code>completeTodo</code> function as an event listener on the <code>click</code> event. Inside the function, inspect the checkbox element, find its parent (the todo <code>div</code>), and use its <code>todo</code> data attribute to find the corresponding todo in the data array. You can toggle the completed status, update its properties, and rerender the UI:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!doctype html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt!-- existing content --&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var populateTodos = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        // Existing todo element set up code</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        checkbox.addEventListener(&quot;click&quot;, completeTodo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var completeTodo = function(evt) {</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var checkbox = evt.target</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoElement = checkbox.parentNode</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var newTodoSet = [].concat(window.todos)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todo = newTodoSet.find(t =&gt t.id == todoElement.dataset.todo)</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todo.completed = !todo.completed</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todos = newTodoSet</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      updateTodos()</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>The final result of your code is a system that checks the <code>todos</code> variable, updates your Cloudflare KV cache with that value, and then does a re-render of the UI based on the data it has locally.<h2 id=conclusions-and-next-steps><span class=DocsMarkdown--header-anchor-positioner><a class="DocsMarkdown--header-anchor Link Link-without-underline" href=#conclusions-and-next-steps>&#8203;​</a></span>
<span>Conclusions and next steps</span></h2><p>By completing this tutorial, you have built a static HTML, CSS, and JavaScript application that is transparently powered by Workers and Workers KV, which take full advantage of Cloudflare&rsquo;s edge network.<p>If you would like to keep improving on your project, you can implement a better design (you can refer to a live version available at <a href=https://todos.signalnerve.workers.dev/ class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>todos.signalnerve.workers.dev</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span>
</span></a>), or make additional improvements to security and speed.<p>You may also want to add user-specific caching. Right now, the cache key is always <code>data</code> – this means that any visitor to the site will share the same todo list with other visitors. Within your Worker, you could use values from the client request to create and maintain user-specific lists. For example, you may generate a cache key based on the requesting IP:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> ip </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>headers</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'CF-Connecting-IP'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> myKey </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">data-</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">ip</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>let</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> cache </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>if</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-operator>!</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>defaultData</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> defaultData</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>else</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>html</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>data</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>todos </span><span class=CodeBlock--token-operator>||</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>replace</span><span class=CodeBlock--token-punctuation>(</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-source CodeBlock--token-language-regex">&lt</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-flags">g</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'\\u003c'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-literal-property>headers</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string-property>'Content-Type'</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'text/html'</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>updateTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>text</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> ip </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>headers</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'CF-Connecting-IP'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> myKey </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">data-</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">ip</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>try</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class="CodeBlock--row CodeBlock--row-is-highlighted"><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>200</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>catch</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>500</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>After making these changes and deploying the Worker one more time, your todo list application now includes per-user functionality while still taking full advantage of Cloudflare&rsquo;s edge network.<p>The final version of your Worker script should look like this:<pre class="CodeBlock CodeBlock-with-rows CodeBlock-scrolls-horizontally CodeBlock-is-light-in-light-theme CodeBlock--language-js" language=js><span class=CodeBlock--filename>index.js</span><code><span class=CodeBlock--rows><span class=CodeBlock--rows-content><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>html</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>todos</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt!DOCTYPE html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lthtml&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lthead&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta charset=&quot;UTF-8&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltmeta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lttitle&gtTodos&lt/title&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltlink href=&quot;https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css&quot; rel=&quot;stylesheet&quot;&gt&lt/link&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/head&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltbody class=&quot;bg-blue-100&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &ltdiv class=&quot;w-full h-full flex content-center justify-center mt-8&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      &ltdiv class=&quot;bg-white shadow-md rounded px-8 pt-6 py-8 mb-4&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        &lth1 class=&quot;block text-grey-800 text-md font-bold mb-2&quot;&gtTodos&lt/h1&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        &ltdiv class=&quot;flex&quot;&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          &ltinput class=&quot;shadow appearance-none border rounded w-full py-2 px-3 text-grey-800 leading-tight focus:outline-none focus:shadow-outline&quot; type=&quot;text&quot; name=&quot;name&quot; placeholder=&quot;A new todo&quot;&gt&lt/input&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">          &ltbutton class=&quot;bg-blue-500 hover:bg-blue-800 text-white font-bold ml-2 py-2 px-4 rounded focus:outline-none focus:shadow-outline&quot; id=&quot;create&quot; type=&quot;submit&quot;&gtCreate&lt/button&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        &lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        &ltdiv class=&quot;mt-4&quot; id=&quot;todos&quot;&gt&lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      &lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    &lt/div&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/body&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &ltscript&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    window.todos = </span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">todos</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var updateTodos = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      fetch(&quot;/&quot;, { method: &quot;PUT&quot;, body: JSON.stringify({ todos: window.todos }) })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      populateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var completeTodo = function(evt) {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var checkbox = evt.target</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoElement = checkbox.parentNode</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var newTodoSet = [].concat(window.todos)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todo = newTodoSet.find(t =&gt t.id == todoElement.dataset.todo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todo.completed = !todo.completed</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos = newTodoSet</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      updateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var populateTodos = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var todoContainer = document.querySelector(&quot;#todos&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      todoContainer.innerHTML = null</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      window.todos.forEach(todo =&gt {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var el = document.createElement(&quot;div&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.className = &quot;border-t py-4&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.dataset.todo = todo.id</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var name = document.createElement(&quot;span&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        name.className = todo.completed ? &quot;line-through&quot; : &quot;&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        name.textContent = todo.name</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        var checkbox = document.createElement(&quot;input&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        checkbox.className = &quot;mx-4&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        checkbox.type = &quot;checkbox&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        checkbox.checked = todo.completed ? 1 : 0</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        checkbox.addEventListener(&quot;click&quot;, completeTodo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.appendChild(checkbox)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        el.appendChild(name)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        todoContainer.appendChild(el)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    populateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    var createTodo = function() {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      var input = document.querySelector(&quot;input[name=name]&quot;)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      if (input.value.length) {</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        window.todos = [].concat(todos, { id: window.todos.length + 1, name: input.value, completed: false })</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        input.value = &quot;&quot;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">        updateTodos()</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">      }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    }</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">    document.querySelector(&quot;#create&quot;).addEventListener(&quot;click&quot;, createTodo)</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">  &lt/script&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string">&lt/html&gt</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class="CodeBlock--token-template-string CodeBlock--token-string"></span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> defaultData </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>todos</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>setCache</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>key</span><span class="CodeBlock--token-parameter CodeBlock--token-punctuation">,</span><span class=CodeBlock--token-parameter> data</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>put</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>key</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function-variable>getCache</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>key</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>TODOS</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>key</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> ip </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>headers</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'CF-Connecting-IP'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> myKey </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">data-</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">ip</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>let</span><span class=CodeBlock--token-plain> data</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> cache </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>if</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-operator>!</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>defaultData</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> defaultData</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>else</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    data </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>cache</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>html</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>stringify</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>data</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>todos </span><span class=CodeBlock--token-operator>||</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>[</span><span class=CodeBlock--token-punctuation>]</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>replace</span><span class=CodeBlock--token-punctuation>(</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-source CodeBlock--token-language-regex">&lt</span><span class="CodeBlock--token-regex CodeBlock--token-regex-delimiter">/</span><span class="CodeBlock--token-regex CodeBlock--token-regex-flags">g</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'\\u003c'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-literal-property>headers</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string-property>'Content-Type'</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'text/html'</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>,</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>updateTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> body </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>text</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> ip </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>headers</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>get</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'CF-Connecting-IP'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>const</span><span class=CodeBlock--token-plain> myKey </span><span class=CodeBlock--token-operator>=</span><span class=CodeBlock--token-plain> </span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class="CodeBlock--token-template-string CodeBlock--token-string">data-</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">${</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation">ip</span><span class="CodeBlock--token-template-string CodeBlock--token-interpolation CodeBlock--token-interpolation-punctuation">}</span><span class="CodeBlock--token-template-string CodeBlock--token-template-punctuation">`</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>try</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-constant>JSON</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>parse</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>await</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>setCache</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>myKey</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> body</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>body</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>200</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>catch</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>new</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-class-name>Response</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>err</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-literal-property>status</span><span class=CodeBlock--token-operator>:</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-number>500</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-keyword>async</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>function</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-parameter>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-keyword>if</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>method </span><span class=CodeBlock--token-operator>===</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-string>'PUT'</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>updateTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-keyword>else</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>    </span><span class=CodeBlock--token-keyword>return</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-function>getTodos</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  </span><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-function>addEventListener</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-string>'fetch'</span><span class=CodeBlock--token-punctuation>,</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-parameter>event</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-operator>=&gt</span><span class=CodeBlock--token-plain> </span><span class=CodeBlock--token-punctuation>{</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-plain>  event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-function>respondWith</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-function>handleRequest</span><span class=CodeBlock--token-punctuation>(</span><span class=CodeBlock--token-plain>event</span><span class=CodeBlock--token-punctuation>.</span><span class=CodeBlock--token-plain>request</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span><span class=CodeBlock--row><span class=CodeBlock--row-indicator></span><div class=CodeBlock--row-content><span class=CodeBlock--token-punctuation>}</span><span class=CodeBlock--token-punctuation>)</span><span class=CodeBlock--token-punctuation>;</span><span class=CodeBlock--token-plain>
</span></div></span></span></span></code></pre><p>You can find the source code for this project, as well as a README with deployment instructions, <a href=https://github.com/signalnerve/cloudflare-workers-todos class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>on GitHub</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span>
</span></a>.</article></div></main><footer class=DocsFooter><div class=DocsFooter--content><div><span class=DocsFooter--edit-on-gh-link-wrapper><a href=https://github.com/cloudflare/cloudflare-docs/blob/production/content/workers/tutorials/build-a-jamstack-app/index.md class=DocsMarkdown--link target=_blank rel=noopener><span class=DocsMarkdown--link-content>Edit on GitHub</span><span class=DocsMarkdown--link-external-icon aria-hidden=true><svg fill="none" stroke="currentcolor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 16 16" role="img" aria-labelledby="title-4744738674102027" xmlns="http://www.w3.org/2000/svg"><title id="title-4744738674102027">External link icon</title><path d="M6.75 1.75h-5v12.5h12.5v-5m0-4v-3.5h-3.5M8 8l5.5-5.5" /></svg>
<span is-visually-hidden>Open external link</span></span></a></span>
<span class=DocsFooter--content-dot-spacer>&nbsp; · &nbsp;</span>
<span class=DocsFooter--content-time>Updated <time class=relative datetime=2022-08-05T15:00:02-05:00 title=2022-08-05>August 5, 2022</time></span></div></div></footer></div><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PKQFGQB" height=0 width=0 style=display:none;visibility:hidden></iframe></noscript><script>(function(b,d,e,a,g){b[a]=b[a]||[],b[a].push({'gtm.start':(new Date).getTime(),event:'gtm.js'});var f=d.getElementsByTagName(e)[0],c=d.createElement(e),h=a!='dataLayer'?'&l='+a:'';c.async=!0,c.src='https://www.googletagmanager.com/gtm.js?id='+g+h,f.parentNode.insertBefore(c,f)})(window,document,'script','dataLayer','GTM-PKQFGQB')</script><link rel=preload href=https://unpkg.com/littlefoot/dist/littlefoot.css as=style onload="this.onload=null,this.rel='stylesheet'"><noscript><link rel=stylesheet href=https://unpkg.com/littlefoot/dist/littlefoot.css></noscript><script defer src=https://unpkg.com/littlefoot/dist/littlefoot.js></script>
<script>document.addEventListener('DOMContentLoaded',()=>littlefoot.default())</script><script async src='/cdn-cgi/bm/cv/669835187/api.js'></script><script>(function(){window['__CF$cv$params']={r:'7375b15d6b4782d4',m:'To1xRWXlpZ1ps6Gh.F0Nx814HAiVXOM6AVfJNvH1ZCY-1659934873-0-AcZlaBAHYuFyIVXQwoHVd3u4V2Y0GWaqKmh7Qbcizgc8sEwvXO7bRLcJOonTfGsohT5/UhmffsUr1jerbP/Cwl1h028f41atjyAtPIWm+FFh9kIvUZEICKeyNCj6dnMxbu4qYe+jcqpMVM84SkLjXxlLazmkoTwdlazvKlnZiFig',s:[0xf59bd84d52,0xd382383033],}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v652eace1692a40cfa3763df669d7439c1639079717194" integrity="sha512-Gi7xpJR8tSkrpF7aordPZQlW2DLtzUlZcumS8dMQjwDHEnw9I7ZLyiOj/6tZStRBGtGgN6ceN6cMH8z7etPGlw==" data-cf-beacon='{"rayId":"7375b15d6b4782d4","token":"0589387b238e41af8aafea4d88cd2c64","version":"2022.6.0","si":100}' crossorigin="anonymous"></script>
