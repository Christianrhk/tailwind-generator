<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Styling &amp; Components | Nodewood - Node.js &amp; Vue.js SaaS Boilerplate &amp; Starter Kit</title>
    <meta name="generator" content="VuePress 1.8.0">
    <link href="https://fonts.googleapis.com/css?family=Raleway|Rubik&amp;display=swap" rel="stylesheet">
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <script>var clicky_site_ids = clicky_site_ids || []; clicky_site_ids.push(101244903);</script>
    <script async="async" src="https://static.getclicky.com/js"></script>
    <meta name="description" content="Save weeks or months of development time and start writing code now with Nodewood, a Vue.js/Node.js Javascript SaaS starter kit focused on setting you up for success.">
    
    <link rel="preload" href="/assets/css/0.styles.a1f64882.css" as="style"><link rel="preload" href="/assets/js/app.2c5c8431.js" as="script"><link rel="preload" href="/assets/js/3.97560a66.js" as="script"><link rel="preload" href="/assets/js/56.efe22f15.js" as="script"><link rel="prefetch" href="/assets/js/1.e7c95f4b.js"><link rel="prefetch" href="/assets/js/10.4714bec1.js"><link rel="prefetch" href="/assets/js/11.e1c6e275.js"><link rel="prefetch" href="/assets/js/12.7d1683db.js"><link rel="prefetch" href="/assets/js/13.6ad699ae.js"><link rel="prefetch" href="/assets/js/14.98fffd60.js"><link rel="prefetch" href="/assets/js/15.75e154cd.js"><link rel="prefetch" href="/assets/js/16.e0558b03.js"><link rel="prefetch" href="/assets/js/17.2c79718e.js"><link rel="prefetch" href="/assets/js/18.01df460c.js"><link rel="prefetch" href="/assets/js/19.dcfb6177.js"><link rel="prefetch" href="/assets/js/20.7a5ebcf2.js"><link rel="prefetch" href="/assets/js/21.8e46f6a6.js"><link rel="prefetch" href="/assets/js/22.85a4fe2c.js"><link rel="prefetch" href="/assets/js/23.144f5590.js"><link rel="prefetch" href="/assets/js/24.e330e298.js"><link rel="prefetch" href="/assets/js/25.11d829d6.js"><link rel="prefetch" href="/assets/js/26.8efddb91.js"><link rel="prefetch" href="/assets/js/27.6151565d.js"><link rel="prefetch" href="/assets/js/28.2ff0aeda.js"><link rel="prefetch" href="/assets/js/29.7d3717f8.js"><link rel="prefetch" href="/assets/js/30.2c5eca19.js"><link rel="prefetch" href="/assets/js/31.b0f778d0.js"><link rel="prefetch" href="/assets/js/32.da80e8ef.js"><link rel="prefetch" href="/assets/js/33.f36044ca.js"><link rel="prefetch" href="/assets/js/34.ca2176a9.js"><link rel="prefetch" href="/assets/js/35.486971e2.js"><link rel="prefetch" href="/assets/js/36.01f889f1.js"><link rel="prefetch" href="/assets/js/37.22720a84.js"><link rel="prefetch" href="/assets/js/38.3879083d.js"><link rel="prefetch" href="/assets/js/39.76217072.js"><link rel="prefetch" href="/assets/js/4.82b986e7.js"><link rel="prefetch" href="/assets/js/40.2f3ff916.js"><link rel="prefetch" href="/assets/js/41.d1beef0f.js"><link rel="prefetch" href="/assets/js/42.b55d7485.js"><link rel="prefetch" href="/assets/js/43.abfd8c00.js"><link rel="prefetch" href="/assets/js/44.785cabc6.js"><link rel="prefetch" href="/assets/js/45.a7ebb691.js"><link rel="prefetch" href="/assets/js/46.505af8a7.js"><link rel="prefetch" href="/assets/js/47.87e4cbfe.js"><link rel="prefetch" href="/assets/js/48.7fe633eb.js"><link rel="prefetch" href="/assets/js/49.695e374f.js"><link rel="prefetch" href="/assets/js/5.a06e35e7.js"><link rel="prefetch" href="/assets/js/50.6a044cca.js"><link rel="prefetch" href="/assets/js/51.cd34d42b.js"><link rel="prefetch" href="/assets/js/52.6c1a4410.js"><link rel="prefetch" href="/assets/js/53.1c5bba26.js"><link rel="prefetch" href="/assets/js/54.79229308.js"><link rel="prefetch" href="/assets/js/55.17556840.js"><link rel="prefetch" href="/assets/js/57.85a6201e.js"><link rel="prefetch" href="/assets/js/58.e62d9cf8.js"><link rel="prefetch" href="/assets/js/59.616f8f3d.js"><link rel="prefetch" href="/assets/js/6.5c0e4fa7.js"><link rel="prefetch" href="/assets/js/60.5de3197c.js"><link rel="prefetch" href="/assets/js/61.05007999.js"><link rel="prefetch" href="/assets/js/62.3ab5ac3f.js"><link rel="prefetch" href="/assets/js/63.cf858a85.js"><link rel="prefetch" href="/assets/js/64.6679b2f5.js"><link rel="prefetch" href="/assets/js/65.4846ffb2.js"><link rel="prefetch" href="/assets/js/7.4701d5ea.js"><link rel="prefetch" href="/assets/js/8.a264957f.js"><link rel="prefetch" href="/assets/js/9.addc3dd2.js">
    <link rel="stylesheet" href="/assets/css/0.styles.a1f64882.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/" class="home-link router-link-active"><img src="/log-logo-bw.svg" alt="Nodewood Documentation" class="logo"> <span class="site-name can-hide">Nodewood</span></a> <div class="links mr-32"><nav class="nav-links can-hide"><div class="nav-item"><a href="/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/blog/">
      Blog
    </a></div> <!----></nav> <a href="/app/signup" class="build-with-nodewood">
      Build with Nodewood
    </a> <div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div></div> <div class="bg-red-700 text-white fixed transform rotate-45 px-16" style="top: 20px; right: -40px">
    BETA
  </div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/blog/">
      Blog
    </a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Overview</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Getting Started</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Architecture Concepts</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>API / Backend</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading open"><span>UI / Frontend</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/docs/ui/" aria-current="page" class="sidebar-link">Introduction</a></li><li><a href="/docs/ui/pages/" class="sidebar-link">Pages &amp; UI Routing</a></li><li><a href="/docs/ui/application-menu/" class="sidebar-link">Application Menu</a></li><li><a href="/docs/ui/stores/" class="sidebar-link">Stores</a></li><li><a href="/docs/ui/dialogs/" class="sidebar-link">Dialogs</a></li><li><a href="/docs/ui/templates/" class="sidebar-link">Application Templates</a></li><li><a href="/docs/ui/styling-components/" aria-current="page" class="active sidebar-link">Styling &amp; Components</a></li></ul></section></li><li><a href="/docs/cli/" class="sidebar-link">CLI / Scripts</a></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Nodewood Features</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Tutorials</span> <span class="arrow right"></span></p> <!----></section></li><li><a href="/docs/sales-website/" class="sidebar-link">Sales Website</a></li><li><a href="/docs/deploying/" class="sidebar-link">Deploying to Production</a></li><li><a href="/docs/help/" class="sidebar-link">Help</a></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h1 id="styling-components"><a href="#styling-components" class="header-anchor">#</a> Styling &amp; Components</h1> <p>Nodewood comes with a basic and flexible style that can be used to build your application without too much consideration about styling, while allowing you to modify the style as you choose.</p> <p>While Nodewood is built with <a href="https://tailwindcss.com/" target="_blank" rel="noopener noreferrer">Tailwind CSS<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> and allows you to very-specifically style every element to your heart's content, it also comes with a variety of components and styling tools to help speed up your development:</p> <h3 id="styling"><a href="#styling" class="header-anchor">#</a> Styling</h3> <ul><li><a href="#basic-styling">Basic Styling</a></li> <li><a href="#custom-css">Custom CSS</a></li> <li><a href="#colors">Colors</a></li> <li><a href="#icons">Icons</a></li> <li><a href="#cards">Cards</a></li> <li><a href="#toasts">Toasts</a></li></ul> <h3 id="vue-components"><a href="#vue-components" class="header-anchor">#</a> Vue Components</h3> <ul><li><a href="#countryinput">Country Input</a></li> <li><a href="#stateinput">State Input</a></li> <li><a href="#dropdownmenu">DropdownMenu</a></li> <li><a href="#dashboardstatlarge">DashboardStatLarge</a></li> <li><a href="#loadingspinner">LoadingSpinner</a></li> <li><a href="#paginationrow">PaginationRow</a></li> <li><a href="#textinput">TextInput</a></li> <li><a href="#datatable">DataTable</a></li></ul> <h2 id="basic-styling"><a href="#basic-styling" class="header-anchor">#</a> Basic Styling</h2> <p>Nodewood includes the <a href="https://github.com/tailwindlabs/tailwindcss-forms" target="_blank" rel="noopener noreferrer">Tailwind CSS Forms<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> styling plugin by default, to provide some simple styling for basic components.  In its own words, it provides a basic reset for form styles that makes form elements easy to override with utilities.  Just adding the plugin adds some simple and pleasant styles that can act as a base for you to customize further.</p> <p>Nodewood also includes the <a href="https://tailwindcss.com/docs/typography-plugin" target="_blank" rel="noopener noreferrer">Tailwind Typography<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> plugin, which can use to add beautiful typographic defaults to any vanilla HTML.  The Nodewood software license modal dialog, for example, is styled with this plugin.</p> <h2 id="custom-css"><a href="#custom-css" class="header-anchor">#</a> Custom CSS</h2> <p>Nodewood relies on <a href="https://tailwindcss.com/" target="_blank" rel="noopener noreferrer">Tailwind CSS<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>, and the base CSS file for that resides at <code>wood/ui/assets/styles/tailwind.css</code>.  To override it and inject your own styles, first, eject that file:</p> <p><code>nodewood eject ui/assets/styles/tailwind.css</code></p> <p>Then, fix the &quot;include&quot; functions in that file by replacing all instances of <code>./</code> with <code>../../../../wood/ui/assets/styles/</code> to point back to the original files in the <code>wood</code> folder.</p> <p>From there, you can modify that file as you please.</p> <h2 id="colors"><a href="#colors" class="header-anchor">#</a> Colors</h2> <p>To modify the colors of your app, you can use <a href="https://tailwindcss.com/docs/customizing-colors" target="_blank" rel="noopener noreferrer">Tailwind's color customization system<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.  This allows you to redefine any Tailwind color to be any HTML color you want.</p> <p>For simplicity, Nodewood is built using the following custom color classes:</p> <ul><li><code>themeBackground</code>: Used for background and border colors.  Defaults to <code>colors.blueGray</code>.</li> <li><code>themeForeground</code>: Used for panel colors.  Defaults to <code>colors.white</code>.</li> <li><code>themePrimary</code>: Used for primary buttons, links, and highlights.  Defaults to <code>colors.blue</code>.</li> <li><code>themeSecondary</code>: Used for secondary buttons and links.  Defaults to <code>colors.blueGray</code>.</li> <li><code>themeCritical</code>: Used for warning buttons, links, and text.  Defaults to <code>colors.red</code>.</li> <li><code>themeCelebratory</code>: Used for celebratory text.  Defaults to <code>colors.green</code>.</li> <li><code>themeMoney</code>: Used for money.  Defaults to <code>colors.green</code>.</li></ul> <p>Changing these colors to another color is as easy as extending the tailwind config file in <code>app/tailwind.config.js</code> and changing the color entries:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'tailwindcss/colors'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'../wood/tailwind.config.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>config<span class="token punctuation">,</span>

  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">,</span>
      <span class="token literal-property property">themePrimary</span><span class="token operator">:</span> colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>If you want to change individual #-level color values to ones not pre-defined by Tailwind, you can do that too:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>config<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">,</span>
    <span class="token literal-property property">themePrimary</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token number">100</span><span class="token operator">:</span> <span class="token string">'#f7fafc'</span><span class="token punctuation">,</span>
      <span class="token number">200</span><span class="token operator">:</span> <span class="token string">'#edf2f7'</span><span class="token punctuation">,</span>
      <span class="token number">300</span><span class="token operator">:</span> <span class="token string">'#e2e8f0'</span><span class="token punctuation">,</span>
      <span class="token number">400</span><span class="token operator">:</span> <span class="token string">'#cbd5e0'</span><span class="token punctuation">,</span>
      <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'#a0aec0'</span><span class="token punctuation">,</span>
      <span class="token number">600</span><span class="token operator">:</span> <span class="token string">'#718096'</span><span class="token punctuation">,</span>
      <span class="token number">700</span><span class="token operator">:</span> <span class="token string">'#4a5568'</span><span class="token punctuation">,</span>
      <span class="token number">800</span><span class="token operator">:</span> <span class="token string">'#2d3748'</span><span class="token punctuation">,</span>
      <span class="token number">900</span><span class="token operator">:</span> <span class="token string">'#1a202c'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><p>To go any more specific than this, i.e. changing the colors of a single component feature, such as a border or background, you'll need to <a href="/docs/getting-started/cli/#ejecting-files-from-the-wood-folder">eject the component</a> and override the classes yourself.</p> <h2 id="icons"><a href="#icons" class="header-anchor">#</a> Icons</h2> <p>Nodewood has the free version of <a href="https://fontawesome.com/" target="_blank" rel="noopener noreferrer">FontAwesome 5.15.1<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> installed already.  If you have a Pro version, you can remove the CDN link in <code>app/ui/public/index.html</code>, and follow <a href="https://fontawesome.com/how-to-use/on-the-web/setup/using-package-managers#installing-pro" target="_blank" rel="noopener noreferrer">FontAwesome's instructions on installing the Pro version<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.</p> <p>FontAwesome is <a href="https://fontawesome.com/how-to-use/on-the-web/referencing-icons/basic-use" target="_blank" rel="noopener noreferrer">a fairly simple-to-use<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> package for displaying a wide variety of icons.  For example, to display a solid camera icon, you would write:</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fas fa-camera<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>Anywhere where you see an icon in Nodewood, it is likely coming from FontAwesome, especially if it follows the above format in the code.  If so, you can change said icon by changing its name to any of the <a href="https://fontawesome.com/icons?d=gallery" target="_blank" rel="noopener noreferrer">available icons<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.</p> <h2 id="cards"><a href="#cards" class="header-anchor">#</a> Cards</h2> <p>When designing layouts, you'll frequently want to visually separate blocks from each other.  Nodewood comes with a set of &quot;card&quot; classes to help with this.  Add <code>card</code>, <code>card-sm</code>, or <code>card-xs</code> to add a base card styling to an element (with <code>sm</code> and <code>xs</code> having smaller padding and borders).</p> <p>Then, within the card, you can add elements with <code>card-header</code> and <code>card-body</code> classes if you want add a title to said card:</p> <div class="language-html extra-class"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Famous Dogs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Benji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Laika<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Lassie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Rin Tin Tin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Toto<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="toasts"><a href="#toasts" class="header-anchor">#</a> Toasts</h2> <p>Occasionally, you will need to display the results of an action or temporary information.  For this purpose, Nodewood uses the <a href="https://www.primefaces.org/primevue/showcase/#/toast" target="_blank" rel="noopener noreferrer">PrimeVue Toast<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> component, accessible through some helper functions:</p> <div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> successToast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'#ui/lib/toast'</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token function">successToast</span><span class="token punctuation">(</span><span class="token string">'Action complete.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Toasts are available at 4 levels: <code>successToast</code>, <code>infoToast</code>, <code>warningToast</code>, <code>errorToast</code>.</p> <h2 id="primevue-components"><a href="#primevue-components" class="header-anchor">#</a> PrimeVue Components</h2> <p>Nodewood includes <a href="https://www.primefaces.org/primevue/showcase/" target="_blank" rel="noopener noreferrer">PrimeVue<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> for the Dialog and Toast components, but is easy to use the remaining components, like their <a href="https://www.primefaces.org/primevue/showcase/#/colorpicker" target="_blank" rel="noopener noreferrer">ColorPicker<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> or <a href="https://www.primefaces.org/primevue/showcase/#/tooltip" target="_blank" rel="noopener noreferrer">Tooltip<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>.</p> <h2 id="nodewood-components"><a href="#nodewood-components" class="header-anchor">#</a> Nodewood Components</h2> <p>Nodewood comes with a selection of custom Vue components that can speed up development.  You can view these components at <code>wood/ui/components</code>.</p> <h3 id="geography-pickers"><a href="#geography-pickers" class="header-anchor">#</a> Geography pickers</h3> <p>When looking to get a country or state from your user, you can use the <code>CountryInput</code> or <code>StateInput</code> components.  These components rely on the <code>wood/config/geography.js</code> configuration file to display the countries/states in the dropwdowns, and come with a full selection of countries, and states for Canada/USA.  If you prefer fewer countries or to add more states, you can
add an <code>app/config/geography.js</code> config file to override those settings to one more appropriate for your app.</p> <img src="/img/styling-components/geography-controls.gif"> <h3 id="countryinput"><a href="#countryinput" class="header-anchor">#</a> CountryInput</h3> <p>This input is useful when needing to get a country from a user, for example during signup or configuration.  Bind the input's <code>v-model</code> to a data property in your Vue component, and the 2-letter country code for the selected country will be stored there.</p> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>country-input</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>country<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-1/2 mr-2<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Country<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:error-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countryErrorText<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> CountryInput <span class="token keyword">from</span> <span class="token string">'#ui/components/CountryInput'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> country <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> countryErrorText <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">'computed error text that is displayed if non-null'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><h4 id="properties"><a href="#properties" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>label</strong>: A descriptive label.</li> <li><strong>errorText</strong>: Error text to display on error.</li> <li><strong>disabled</strong>: If the component is disabled.</li></ul> <h3 id="stateinput"><a href="#stateinput" class="header-anchor">#</a> StateInput</h3> <p>This input is useful when needing to get a state/province from a user, for example during signup or configuration.  Bind the input's <code>v-model</code> to a data property in your Vue component, and the state value will be stored there.</p> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>state-input</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-1/2 flex items-end<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>State<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:error-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stateErrorText<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:country</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>country<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> StateInput <span class="token keyword">from</span> <span class="token string">'#ui/components/StateInput'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> country <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> stateErrorText <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">'computed error text that is displayed if non-null'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><h4 id="properties-2"><a href="#properties-2" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>label</strong>: A descriptive label.</li> <li><strong>errorText</strong>: Error text to display on error.</li> <li><strong>disabled</strong>: If the component is disabled.</li> <li><strong>country</strong>: If a country that has states defined in <code>#config/geography.js</code>, display a select.  Otherwise, display a TextInput.</li></ul> <h3 id="dropdownmenu"><a href="#dropdownmenu" class="header-anchor">#</a> DropdownMenu</h3> <p><img src="/img/styling-components/dropdown.gif" width="134" height="229" class="float-left mr-4"></p> <p>This collection of components can be used to create a drop-down menu, similar to the user menu in the upper-right of the Nodewood interface.</p> <p>They are designed to work together, as in the following example:</p> <br class="clear-left"> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dropdown-menu</span>
  <span class="token attr-name">menu-wrapper-classes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-xs<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">menu-button-classes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">menu-dropdown-classes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-0<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#menu-text</span><span class="token punctuation">&gt;</span></span>
  	User Name
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dropdown-menu-item</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/profile<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Profile
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dropdown-menu-item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dropdown-menu-item</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/support<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Support
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dropdown-menu-item</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dropdown-menu-divider</span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dropdown-menu-item</span> <span class="token attr-name">:click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onLogout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Logout
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dropdown-menu-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dropdown-menu</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> DropdownMenu <span class="token keyword">from</span> <span class="token string">'#ui/components/DropdownMenu'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> DropdownMenuItem <span class="token keyword">from</span> <span class="token string">'#ui/components/DropdownMenuItem'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> DropdownMenuDivider <span class="token keyword">from</span> <span class="token string">'#ui/components/DropdownMenuDivider'</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><h4 id="slots"><a href="#slots" class="header-anchor">#</a> Slots:</h4> <ul><li><strong>menu-text</strong>: The content provided to this slot is displayed in the dropdown before it is dropped down.  In the case of the user menu, this is the user gravatar and user name.</li> <li><strong>Default</strong>: Everything placed in the default slot will be displayed in the dropdown container.</li></ul> <h4 id="properties-3"><a href="#properties-3" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>menuWrapperClasses</strong>: Classes to apply to the menu wrapper specifically.</li> <li><strong>menuButtonClasses</strong>: Classes to apply to the menu button specifically.</li> <li><strong>menuDropdownClasses</strong>: Classes to apply to the dropdown button container specifically.</li></ul> <h3 id="dropdownmenuitem"><a href="#dropdownmenuitem" class="header-anchor">#</a> DropdownMenuItem</h3> <p>A menu item that can be clicked on to navigate or execute a custom function.</p> <h4 id="slots-2"><a href="#slots-2" class="header-anchor">#</a> Slots:</h4> <ul><li><strong>Default</strong>: The content provided to this slot is displayed in the menu item.  In the case of the user menu, these are the menu item labels.</li></ul> <h4 id="properties-4"><a href="#properties-4" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>to</strong>: The URL to navigate to when this item is clicked.  Optional, if not provided, ensure a <code>click</code> property is provided.</li> <li><strong>click</strong>: A function to execute when this item is clicked.  Optional, if not provided, ensure a <code>to</code> property is provided.</li></ul> <h3 id="dropdownmenudivider"><a href="#dropdownmenudivider" class="header-anchor">#</a> DropdownMenuDivider</h3> <p>A divider item that can be used to separate related menu items.</p> <h3 id="dashboardstatlarge"><a href="#dashboardstatlarge" class="header-anchor">#</a> DashboardStatLarge</h3> <p><img src="/img/styling-components/dashboard-stat-large.png" width="186" height="82" class="float-left mr-4"></p> <p>This component can be used to build dashboards, highlighting important statistics.</p> <br class="clear-left"> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dashboard-stat-large</span>
  <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa-users<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">icon-color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-blue-700<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Total Users<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>usersTotal<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> DashboardStatLarge <span class="token keyword">from</span> <span class="token string">'#ui/components/DashboardStatLarge'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> usersTotal <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="properties-5"><a href="#properties-5" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>icon</strong>: The font awesome icon name for this stat.</li> <li><strong>iconColor</strong>: The tailwind colour for this icon.</li> <li><strong>label</strong>: A descriptive label.</li> <li><strong>labelClass</strong>: Classes for the label.</li> <li><strong>value</strong>: The stat value.</li> <li><strong>valueClass</strong>: Classes for the value.</li></ul> <h3 id="loadingspinner"><a href="#loadingspinner" class="header-anchor">#</a> LoadingSpinner</h3> <p><img src="/img/styling-components/loading-spinner.gif" width="99" height="100" class="float-left mr-4"></p> <p>When you need to show that an action will take some time, as in when you are loading data from the server, you can use the LoadingSpinner component, which provides a common indicator that can set user expectations.  This can be combined with the <code>loadable</code> function from the <code>vue-is-loading</code> plugin, to make it easy to to display the loading spinner when you are fetching data or performing an action that will take some time.</p> <br class="clear-left"> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>loading-spinner</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$isLoading(<span class="token punctuation">'</span>saveUser<span class="token punctuation">'</span>)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      Submit
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> loadable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-is-loading'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> LoadingSpinner <span class="token keyword">from</span> <span class="token string">'#ui/components/LoadingSpinner'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> saveUser <span class="token operator">=</span> <span class="token function">loadable</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'Users/saveUser'</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">'saveUser'</span><span class="token punctuation">,</span>
  <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>This component exposes three props:</p> <ul><li><strong>iconClass</strong>: <a href="https://fontawesome.com/v5.9/icons?d=gallery&amp;p=1" target="_blank" rel="noopener noreferrer">The fontawesome icon to display in the spinner.<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><strong>sizeClass</strong>: <a href="https://fontawesome.com/v5.9/how-to-use/on-the-web/styling/sizing-icons" target="_blank" rel="noopener noreferrer">The size of the icon to display in the spinner.<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><strong>colorClass</strong>: A CSS class to use to adjust color for the spinner.</li></ul> <h3 id="paginationrow"><a href="#paginationrow" class="header-anchor">#</a> PaginationRow</h3> <p><img src="/img/styling-components/pagination-row.png" width="960" height="57"></p> <p>This component can help you when paginating large numbers of items, such as table rows.</p> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pagination-row</span>
  <span class="token attr-name">:search-enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:pages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totalPages<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:per</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>per<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@changePage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changePage<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@changePer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changePer<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@searchFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>searchFor<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> PaginationRow <span class="token keyword">from</span> <span class="token string">'#ui/components/PaginationRow'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> per <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> totalPages <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">changePage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newPage</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  page <span class="token operator">=</span> newPage<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">changePer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newPer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  per <span class="token operator">=</span> newPer<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">searchFor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">searchText</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// change the search filter for the data</span>
  <span class="token comment">// response will update page, per, and totalPages</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><h4 id="properties-6"><a href="#properties-6" class="header-anchor">#</a> Properties:</h4> <ul><li><strong>page</strong>: The current page.</li> <li><strong>pages</strong>: The total number of pages.</li> <li><strong>per</strong>: The number of entries per page.</li> <li><strong>searchEnabled</strong>: If search bar is enabled.</li> <li><strong>searchLabel</strong>: The label for the search text input.</li></ul> <h3 id="textinput"><a href="#textinput" class="header-anchor">#</a> TextInput</h3> <p><img src="/img/styling-components/text-input.gif" width="248" height="76" class="float-left mr-4"></p> <p>This component provides a text input with label and error text.  Sure, you can always use the standard HTML <code>input</code> tag, but if you want something a little more stylish, you can use this!</p> <br class="clear-left"> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text-input</span>
  <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>coupon<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Coupon Code<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:error-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>couponErrorText<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isPurchaseUpdating<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> TextInput <span class="token keyword">from</span> <span class="token string">'#ui/components/TextInput'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> coupon <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> couponErrorText <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">'compute error text based on validation/server response'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> isPurchaseUpdating <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><p>TextInputs will automatically attempt to submit any form they are in when &quot;Enter&quot; is pressed.  In order to ensure that any errors this triggers are displayed, you will need to modify the submit function of your form to add any errors from this failed validation to apiErrors:</p> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text-input</span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.email<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">input-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email Address<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:error-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emailErrorText<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> deepUnref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-deepunref'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> TextInput <span class="token keyword">from</span> <span class="token string">'#ui/components/TextInput'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> fieldErrorText<span class="token punctuation">,</span> applyErrors <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'#ui/lib/forms'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UserValidator<span class="token punctuation">,</span> <span class="token constant">LOGIN_FORM_FIELDS</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'#features/users/lib/validators/UserValidator'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> validator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserValidator</span><span class="token punctuation">(</span><span class="token constant">LOGIN_FORM_FIELDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> apiErrors <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> emailErrorText <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token function">fieldErrorText</span><span class="token punctuation">(</span><span class="token string">'email'</span><span class="token punctuation">,</span> validator<span class="token punctuation">,</span> form<span class="token punctuation">,</span> apiErrors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">resetApiErrors</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  apiErrors<span class="token punctuation">.</span>email<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">form</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// save form</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resetApiErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> validator<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token function">deepUnref</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">applyErrors</span><span class="token punctuation">(</span>apiErrors<span class="token punctuation">,</span> validator<span class="token punctuation">.</span><span class="token function">errors</span><span class="token punctuation">(</span><span class="token function">deepUnref</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">,</span> apiErrors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">await</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token function">deepUnref</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="properties-7"><a href="#properties-7" class="header-anchor">#</a> Properties</h4> <ul><li><strong>inputId</strong>: The name to apply to the ID of the text input.</li> <li><strong>label</strong>: A descriptive label.</li> <li><strong>autofocus</strong>: If we should autofocus on the text input.</li> <li><strong>errorText</strong>: Error text to display on error.</li> <li><strong>disabled</strong>: If the component is disabled.</li> <li><strong>type</strong>: The type of text input to use (text or password).</li> <li><strong>value</strong>: The value of the text input.</li></ul> <h3 id="datatable"><a href="#datatable" class="header-anchor">#</a> DataTable</h3> <p><img src="/img/styling-components/table-mobile.png" width="168" height="280" class="float-left mr-4"></p> <p><img src="/img/styling-components/table-desktop.png" width="641" height="148"></p> <p>The DataTable component is designed for when you want to display lists of <a href="/docs/architecture/models/">Model</a> data in tabular format.  It interacts with common store model loading patterns and will display nicely in either desktop or mobile mode.</p> <br class="clear-left"> <div class="language-vue extra-class"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data-table</span>
  <span class="token attr-name">:fields</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EXAMPLE_MODEL_FIELDS<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>currentPage<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:total-pages</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>totalPages<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:search-enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:search-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">'</span>Search (Name)<span class="token punctuation">'</span><span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:load-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getList<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:is-loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$isLoading(<span class="token punctuation">'</span>getList<span class="token punctuation">'</span>)<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:actions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>teamActions<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-javascript extra-class"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> loadable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-is-loading'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> currentPage <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Teams<span class="token punctuation">.</span>currentPage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> currentPage <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Teams<span class="token punctuation">.</span>totalPages<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getList <span class="token operator">=</span> <span class="token function">loadable</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'Teams/getList'</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">'getList'</span><span class="token punctuation">,</span>
  <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">openEditDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">team</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Open edit dialog</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">openDeleteDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">team</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Open delete dialog</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">teamActions</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Edit'</span><span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> openEditDialog <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Delete'</span><span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> openDeleteDialog <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><h4 id="properties-8"><a href="#properties-8" class="header-anchor">#</a> Properties</h4> <ul><li><strong>fields</strong>: The fields to display in the table header.</li> <li><strong>rows</strong>: The rows of data to display.</li> <li><strong>loadList</strong>: A function that can be used to manage the population and pagination of the list.   If omitted, no search or pagination controls will be displayed.</li> <li><strong>totalPages</strong>: The number of total pages for pagination.</li> <li><strong>searchEnabled</strong>: If the search bar is enabled.</li> <li><strong>searchLabel</strong>: What label text to display for the search bar.</li> <li><strong>perPageOptions</strong>: A list of choice for items to display per page.</li> <li><strong>isLoading</strong>: Controls if the loading overlay is displayed.</li> <li><strong>actions</strong>: A list of actions that can be performed on each entry.</li> <li><strong>actionsFn</strong>: A function that can be used to programmatically determine the actions that can be performed on each entry.  The function is passed the current row as a parameter.</li> <li><strong>emptyMessage</strong>: The message to display when there are no rows.</li> <li><strong>showPagination</strong>: If the pagination row should be shown.</li></ul></div> <footer class="page-edit"><!----> <!----></footer> <div class="page-nav"><p class="inner"><span class="prev">
      ←
      <a href="/docs/ui/templates/" class="prev">
        Application Templates
      </a></span> <span class="next"><a href="/docs/cli/">
        CLI / Scripts
      </a>
      →
    </span></p></div> </main></div><div class="global-ui"></div></div>
    <script src="/assets/js/app.2c5c8431.js" defer></script><script src="/assets/js/3.97560a66.js" defer></script><script src="/assets/js/56.efe22f15.js" defer></script>
  </body>
</html>
